{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Inicio"},{"location":"#_1","text":"","title":""},{"location":"acerca/","tags":["requisitos","costos","inscripci\u00f3n","horarios","programa"],"text":"Correlativas para alumnos de grado UNSAM CB14 Estadistica Aplicada CB07 Biolog\u00eda Molecular Requisitos Conocimientos de biolog\u00eda molecular: Dogma de la biolog\u00eda molecular, codificaci\u00f3n de informaci\u00f3n en forma de ADN, ARN, proteinas, transcripci\u00f3n, traducci\u00f3n, organizaci\u00f3n celular en procariotas, eucariotas. Conocimientos b\u00e1sicos de estad\u00edstica: distribuciones, probabilidades. Manejo b\u00e1sico de computadoras. Costos Alumnos de Grado UNSAM: Gratis. Alumnos de Post-Grado UNSAM: Gratis. Alumnos de Post-Grado de otras Universidades P\u00fablicas: $5500 Docentes Universidades Nacionales: $5500 Alumnos de Posgrado Universidades Privadas: $7500 Empresas/Profesionales Independientes: $11500 Alumnos / Docentes / Profesionales Internacionales: USD $300 Horarios 2do Cuatrimestre 2022 (Virtual) Virtual: Martes y Jueves 9 a 13hs. Presencial: Aula a confirmar! Jueves 18 de Agosto: 14 a 18 hs Jueves 22 de Septiembre: 14 a 18 hs Jueves 13 de Octubre: 14 a 18 hs Asistencia Te\u00f3ricas: Asistencia opcional Pr\u00e1cticas: Asistencia obligatoria al 80% de los TPs Evaluaci\u00f3n Evaluaci\u00f3n te\u00f3rica: Un examen hacia el final de la cursada, con recuperatorio. El examen se divide en bloques tem\u00e1ticos que deben ser aprobados por separado. Cada bloque se aprueba con 5 y se promociona con 7. Evaluaci\u00f3n pr\u00e1ctica: Informes de trabajos pr\u00e1cticos. Se aprueban con 5. Promoci\u00f3n: Todas las instancias evaluatorias (te\u00f3rico + pr\u00e1ctico) con puntaje de 7 o m\u00e1s. Examen Final: En caso de instancias evaluatorias aprobadas con 5, o en caso de tener que recuperar. Recursa: En caso de no cumplir con requisito de asistencia o instancias evaluatorias no aprobadas. Inscripci\u00f3n Para inscribirte vas a necesitar: Si sos alumno UNSAM: Tu n\u00famero de legajo Si sos posgrado, investigador o trabajas en la industria: Breve descripci\u00f3n de tu l\u00ednea de trabajo Carta de motivaci\u00f3n Cierre de Inscripci\u00f3n 25 de Julio, 2022 Notificaci\u00f3n de Aceptaci\u00f3n Los cupos para estudiantes de posgrado, investigadores y trabajadores de la industria son limitados. Aquellas personas que sean aceptadas para el curso ser\u00e1n notficadas el 29 de Julio, 2022 Inscribirse","title":"Acerca de"},{"location":"acerca/#correlativas-para-alumnos-de-grado-unsam","text":"CB14 Estadistica Aplicada CB07 Biolog\u00eda Molecular","title":"Correlativas para alumnos de grado UNSAM"},{"location":"acerca/#requisitos","text":"Conocimientos de biolog\u00eda molecular: Dogma de la biolog\u00eda molecular, codificaci\u00f3n de informaci\u00f3n en forma de ADN, ARN, proteinas, transcripci\u00f3n, traducci\u00f3n, organizaci\u00f3n celular en procariotas, eucariotas. Conocimientos b\u00e1sicos de estad\u00edstica: distribuciones, probabilidades. Manejo b\u00e1sico de computadoras.","title":"Requisitos"},{"location":"acerca/#costos","text":"Alumnos de Grado UNSAM: Gratis. Alumnos de Post-Grado UNSAM: Gratis. Alumnos de Post-Grado de otras Universidades P\u00fablicas: $5500 Docentes Universidades Nacionales: $5500 Alumnos de Posgrado Universidades Privadas: $7500 Empresas/Profesionales Independientes: $11500 Alumnos / Docentes / Profesionales Internacionales: USD $300","title":"Costos"},{"location":"acerca/#horarios-2do-cuatrimestre-2022-virtual","text":"Virtual: Martes y Jueves 9 a 13hs. Presencial: Aula a confirmar! Jueves 18 de Agosto: 14 a 18 hs Jueves 22 de Septiembre: 14 a 18 hs Jueves 13 de Octubre: 14 a 18 hs","title":"Horarios 2do Cuatrimestre 2022 (Virtual)"},{"location":"acerca/#asistencia","text":"Te\u00f3ricas: Asistencia opcional Pr\u00e1cticas: Asistencia obligatoria al 80% de los TPs","title":"Asistencia"},{"location":"acerca/#evaluacion","text":"Evaluaci\u00f3n te\u00f3rica: Un examen hacia el final de la cursada, con recuperatorio. El examen se divide en bloques tem\u00e1ticos que deben ser aprobados por separado. Cada bloque se aprueba con 5 y se promociona con 7. Evaluaci\u00f3n pr\u00e1ctica: Informes de trabajos pr\u00e1cticos. Se aprueban con 5. Promoci\u00f3n: Todas las instancias evaluatorias (te\u00f3rico + pr\u00e1ctico) con puntaje de 7 o m\u00e1s. Examen Final: En caso de instancias evaluatorias aprobadas con 5, o en caso de tener que recuperar. Recursa: En caso de no cumplir con requisito de asistencia o instancias evaluatorias no aprobadas.","title":"Evaluaci\u00f3n"},{"location":"acerca/#inscripcion","text":"Para inscribirte vas a necesitar: Si sos alumno UNSAM: Tu n\u00famero de legajo Si sos posgrado, investigador o trabajas en la industria: Breve descripci\u00f3n de tu l\u00ednea de trabajo Carta de motivaci\u00f3n","title":"Inscripci\u00f3n"},{"location":"acerca/#cierre-de-inscripcion","text":"25 de Julio, 2022","title":"Cierre de Inscripci\u00f3n"},{"location":"acerca/#notificacion-de-aceptacion","text":"Los cupos para estudiantes de posgrado, investigadores y trabajadores de la industria son limitados. Aquellas personas que sean aceptadas para el curso ser\u00e1n notficadas el 29 de Julio, 2022 Inscribirse","title":"Notificaci\u00f3n de Aceptaci\u00f3n"},{"location":"contenidos/","text":"Contenidos te\u00f3ricos Experimentos Bioinform\u00e1ticos Conceptos b\u00e1sicos de computaci\u00f3n, algoritmos Bases de datos Ontolog\u00edas Alineamientos de a pares, similitud de secuencias Alineamientos m\u00faltiples Sequence profiles, Hidden Markov Models (I y II) Informaci\u00f3n contenida en alineamientos m\u00faltiples M\u00e9todos de predicci\u00f3n basados en datos, machine learning Reconstrucci\u00f3n de filogenias Bioinform\u00e1tica estructural Data clustering Secuenciaci\u00f3n y ensamblado de genomas Contenidos Pr\u00e1cticos Introducci\u00f3n a UNIX EMBOSS Suite Alineamientos de a pares B\u00fasquedas de secuencias por similitud y alineamientos m\u00faltiples Perfiles de secuencia, HMM y PSI-BLAST Filogenias, \u00e1rboles filogen\u00e9ticos y filogen\u00f3mica HMM y Redes Neuronales Programando en Biolog\u00eda Bioinform\u00e1tica estructural: Predicci\u00f3n de desorden Bioinform\u00e1tica estructural: Motivos funcionales en prote\u00ednas Bioinform\u00e1tica estructural: Dominios 3D y Modelado por Homolog\u00eda Data mining Visualizaci\u00f3n de genomas Gen\u00f3mica comparativa Short Read Mapping","title":"Contenidos"},{"location":"contenidos/#contenidos-teoricos","text":"Experimentos Bioinform\u00e1ticos Conceptos b\u00e1sicos de computaci\u00f3n, algoritmos Bases de datos Ontolog\u00edas Alineamientos de a pares, similitud de secuencias Alineamientos m\u00faltiples Sequence profiles, Hidden Markov Models (I y II) Informaci\u00f3n contenida en alineamientos m\u00faltiples M\u00e9todos de predicci\u00f3n basados en datos, machine learning Reconstrucci\u00f3n de filogenias Bioinform\u00e1tica estructural Data clustering Secuenciaci\u00f3n y ensamblado de genomas","title":"Contenidos te\u00f3ricos"},{"location":"contenidos/#contenidos-practicos","text":"Introducci\u00f3n a UNIX EMBOSS Suite Alineamientos de a pares B\u00fasquedas de secuencias por similitud y alineamientos m\u00faltiples Perfiles de secuencia, HMM y PSI-BLAST Filogenias, \u00e1rboles filogen\u00e9ticos y filogen\u00f3mica HMM y Redes Neuronales Programando en Biolog\u00eda Bioinform\u00e1tica estructural: Predicci\u00f3n de desorden Bioinform\u00e1tica estructural: Motivos funcionales en prote\u00ednas Bioinform\u00e1tica estructural: Dominios 3D y Modelado por Homolog\u00eda Data mining Visualizaci\u00f3n de genomas Gen\u00f3mica comparativa Short Read Mapping","title":"Contenidos Pr\u00e1cticos"},{"location":"cronograma/","tags":["cronograma","fechas","feriados"],"text":"Fecha Hora Donde Clase Tipo Docente Martes, 02 Agosto 2022 9:00 hs Online T1. Presentaci\u00f3n de la materia Te\u00f3rica F. Ag\u00fcero Jueves, 04 Agosto 2022 9:00 hs Online P1. Introducci\u00f3n a UNIX Pr\u00e1ctica A. Ricci Martes, 09 Agosto 2022 9:00 hs Online T2. Bases de datos y ontolog\u00edas Te\u00f3rica F. Ag\u00fcero Jueves, 11 Agosto 2022 9:00 hs Online P2. EMBOSS Suite Pr\u00e1ctica A. Ricci Martes, 16 Agosto 2022 9:00 hs Online T3. Alineamientos de a pares y B\u00fasqueda de secuencias por Similitud Te\u00f3rica F. Ag\u00fcero Jueves, 18 Agosto 2022 9:00 hs Online T4. Alineamientos m\u00faltiples Te\u00f3rica F. Ag\u00fcero Jueves, 18 Agosto 2022 14:00 hs Aula a definir TE1. Te\u00f3rica Extra 1 Te\u00f3rica F. Ag\u00fcero Martes, 23 Agosto 2022 9:00 hs Online P3. Alineamientos de a pares Pr\u00e1ctica H. Garc\u00eda A Jueves, 25 Agosto 2022 9:00 hs Online P4. B\u00fasqueda de secuencias por similitud y Alineamientos M\u00faltiples Pr\u00e1ctica H. Garc\u00eda A Martes, 30 Agosto 2022 9:00 hs Online T5. Informaci\u00f3n contenida en alineamientos m\u00faltiples Te\u00f3rica M. Nielsen Jueves, 01 Septiembre 2022 9:00 hs Online P5. Perfiles de secuencia y PSI-BLAST Pr\u00e1ctica H. Garc\u00eda A Martes, 06 Septiembre 2022 9:00 hs Online T6. Reconstrucci\u00f3n de filogenias Te\u00f3rica F. Ag\u00fcero Jueves, 08 Septiembre 2022 9:00 hs Online P6. Filogenias, \u00e1rboles filogen\u00e9ticos y filogen\u00f3mica Pr\u00e1ctica J. Glavina Martes, 13 Septiembre 2022 9:00 hs Online T7. M\u00e9todos de predicci\u00f3n de Machine Learning basados en datos (HMM y ANN) Te\u00f3rica M. Nielsen Jueves, 15 Septiembre 2022 9:00 hs Online P7. HMM y Redes neuronales Pr\u00e1ctica H. Garc\u00eda A. Martes, 20 Septiembre 2022 9:00 hs Online P8a. Programando en Biolog\u00eda Pr\u00e1ctica A. Ricci Jueves, 22 Septiembre 2022 9:00 hs Online P8b. Programando en Biolog\u00eda Pr\u00e1ctica A. Ricci Jueves, 22 Septiembre 2022 14:00 hs Aula a definir TE2. Te\u00f3rica Extra 2 Te\u00f3rica F. Ag\u00fcero Martes, 27 Septiembre 2022 9:00 hs Online T8. Bioinform\u00e1tica Estructural: Desorden Te\u00f3rica L. Chemes Jueves, 29 Septiembre 2022 9:00 hs Online P9. Bioinform\u00e1tica Estructural: Predicci\u00f3n de Desorden Pr\u00e1ctica J. Glavina Martes, 04 Octubre 2022 9:00 hs Online T9. Bioinform\u00e1tica Estructural: Motivos lineales Te\u00f3rica L. Chemes Jueves, 06 Octubre 2022 9:00 hs Online P10. Bioinform\u00e1tica Estructural: Motivos funcionales en prote\u00ednas Pr\u00e1ctica J. Glavina Martes, 11 Octubre 2022 9:00 hs Online T10. Bioinform\u00e1tica Estructural: Dominios Te\u00f3rica L. Chemes Jueves, 13 Octubre 2022 9:00 hs Online P11. Bioinform\u00e1tica Estructural: Dominios 3D y Modelado por homolog\u00eda Pr\u00e1ctica J. Glavina Jueves, 13 Octubre 2022 14:00 hs Aula a definir TE3. Te\u00f3rica Extra 3 Te\u00f3rica J. Glavina Martes, 18 Octubre 2022 9:00 hs Online T11. Data clustering Te\u00f3rica F. Ag\u00fcero Jueves, 20 Octubre 2022 9:00 hs Online P12a. Data mining Pr\u00e1ctica A. Ricci Martes, 25 Octubre 2022 9:00 hs Online T12. Secuenciaci\u00f3n y ensamblado de genomas Te\u00f3rica F. Ag\u00fcero Jueves, 27 Octubre 2022 9:00 hs Online P12b. Data mining Pr\u00e1ctica A. Ricci Martes, 01 Noviembre 2022 9:00 hs Online P13. Visualizando genomas con Artemis Pr\u00e1ctica J. Glavina Jueves, 03 Noviembre 2022 9:00 hs Online P14. Gen\u00f3mica comparativa Pr\u00e1ctica J. Glavina Martes, 08 Noviembre 2022 9:00 hs Online Repaso Te\u00f3rica F. Ag\u00fcero L. Chemes M. Nielsen Jueves, 10 Noviembre 2022 9:00 hs A definir Examen F. Ag\u00fcero L. Chemes M. Nielsen Martes, 15 Noviembre 2022 9:00 hs LIBRE Jueves, 17 Noviembre 2022 9:00 hs Online Revisi\u00f3n examen F. Ag\u00fcero L. Chemes M. Nielsen Martes, 22 Noviembre 2022 9:00 hs LIBRE Jueves, 24 Noviembre 2022 9:00 hs LIBRE Martes, 29 Noviembre 2022 9:00 hs A definir Recuperatorio F. Ag\u00fcero L. Chemes M. Nielsen Jueves, 1 Diciembre 2022 9:00 hs Online Revisi\u00f3n examen F. Ag\u00fcero L. Chemes M. Nielsen","title":"Cronograma"},{"location":"docentes/","tags":["Docentes","Instructores"],"text":"Docentes Profesor Titular Dr. Fern\u00e1n Ag\u00fcero Profesores invitados Dr. Morten Nielsen Dra. Luc\u00eda B. Chemes Jefa de Trabajos Pr\u00e1cticos Dra. Juliana Glavina Ayudantes de 1ra Lic. Heli Garc\u00eda \u00c1lvarez Lic. Alejandro Ricci","title":"Docentes"},{"location":"docentes/#docentes","text":"","title":"Docentes"},{"location":"docentes/#profesor-titular","text":"Dr. Fern\u00e1n Ag\u00fcero","title":"Profesor Titular"},{"location":"docentes/#profesores-invitados","text":"Dr. Morten Nielsen Dra. Luc\u00eda B. Chemes","title":"Profesores invitados"},{"location":"docentes/#jefa-de-trabajos-practicos","text":"Dra. Juliana Glavina","title":"Jefa de Trabajos Pr\u00e1cticos"},{"location":"docentes/#ayudantes-de-1ra","text":"Lic. Heli Garc\u00eda \u00c1lvarez Lic. Alejandro Ricci","title":"Ayudantes de 1ra"},{"location":"tags/","text":"A continuaci\u00f3n una lista de tags relevantes en el sitio: [TAGS]","title":"Tags"},{"location":"77_useful_code/grid_test/","text":"#ci_grid { border-width:0; } #ci_grid td { text-align:center; vertical-align: middle; padding: 10px 5px 10px 5px; border-width:2px; } #ci_grid td:hover { opacity: 0.9; } #ci_grid tr:hover { background-color: white; } #ci_grid img { height: 150px; } Grid test TP 1 TP 2 TP 3 TP 4 TP 5 TP 6 TP 7 TP 8","title":"Grid test"},{"location":"77_useful_code/grid_test/#grid-test","text":"TP 1 TP 2 TP 3 TP 4 TP 5 TP 6 TP 7 TP 8","title":"Grid test"},{"location":"instructivos/inicio/","tags":["instructivos"],"text":"En esta p\u00e1gina encontrar\u00e1n los instructivos que le permitir\u00e1n ir resolviendo algunas cosas t\u00e9cnicas, como por ejemplo: la instalaci\u00f3n de una m\u00e1quina virtual! Consultas y Canales de Comunicaci\u00f3n Si tu consulta est\u00e1 relacionada con alg\u00fan problema con la instalaci\u00f3n o funcionamiento de la m\u00e1quina virtual: Antes de consultar por favor, asegurate que no se encuentre ya resuelto en la secci\u00f3n de problemas con la m\u00e1quina virtual. Si no se encuentra resuelto o no est\u00e1 relacionado con la m\u00e1quina virtual podes encontrarnos en: en Slack en el canal dedicado consultas-vm o preguntas-y-respuestas si no est\u00e1 relacionado con la m\u00e1quina virtual.","title":"Inicio"},{"location":"instructivos/inicio/#consultas-y-canales-de-comunicacion","text":"Si tu consulta est\u00e1 relacionada con alg\u00fan problema con la instalaci\u00f3n o funcionamiento de la m\u00e1quina virtual: Antes de consultar por favor, asegurate que no se encuentre ya resuelto en la secci\u00f3n de problemas con la m\u00e1quina virtual. Si no se encuentra resuelto o no est\u00e1 relacionado con la m\u00e1quina virtual podes encontrarnos en: en Slack en el canal dedicado consultas-vm o preguntas-y-respuestas si no est\u00e1 relacionado con la m\u00e1quina virtual.","title":"Consultas y Canales de Comunicaci\u00f3n"},{"location":"instructivos/maquina_virtual/","tags":["instructivos","maquina virtual"],"text":"\u00bfQu\u00e9 es una m\u00e1quina virtual? Las m\u00e1quinas virtuales no son m\u00e1s que computadoras virtuales (denominadas invitadas o guests ), emuladas dentro de una computadora real (denominada hospedadora o host ). Algunos de sus principales usos son compartir una misma computadora entre muchas personas, tener una computadora que se puede mover completa en un pendrive o similar, o instalar multiples sistemas operativos en una misma computadora de una forma mucho m\u00e1s simple. La virtualizaci\u00f3n es un proceso costoso , ya que si bien nos permite crear nuevas compus, al momento de correrlas estaremos repartiendo los recursos reales (espacio en disco, memoria RAM y velocidad de procesamiento CPU) del host (es decir, de nuestra computadora ) entre todas las m\u00e1quinas virtuales guest que est\u00e9n activas. Es por esto que debemos ser cuidadosos al momento de generarlas, d\u00e1ndoles suficientes recursos para funcionar, pero no todos los recursos del host (es decir, de nuestra computadora ). El disco de m\u00e1quina virtual El disco de una m\u00e1quina virtual es una \u201cfoto\u201d de un disco de almacenamiento. Todo lo que un disco duro tiene guardado, incluyendo el sistema operativo y los programas instalados, quedar\u00e1n guardados en un archivo cuando la creemos con las herramientas adecuadas. Como no existe un disco duro f\u00edsico se lo considera disco virtual . Este archivo permite regenerar el estado de la computadora desde la que se cre\u00f3 dicho disco al momento de sacar la foto. Los docentes ya hemos ensamblado, para la materia, un disco de m\u00e1quina virtual con Lubuntu 18 (una distribuci\u00f3n versi\u00f3n ultra liviana de Ubuntu 18) en la que hemos instalado todos los programas y herramientas que usaremos en la asignatura. En adelante, nos referiremos a \u00e9ste como IBioinfo. Puesta en funcionamiento de m\u00e1quina virtual Este es un instructivo corto sobre c\u00f3mo hacer para correr la m\u00e1quina virtual de la materia en sus computadoras. Vamos a necesitar: Software y archivos a usar Oracle VM VirtualBox instalado en nuestras compus. Forma de descomprimir un archivo comprimido ZIP (por ejemplo WinZip para Windows o GUnzip para Linux) El disco de la m\u00e1quina virtual (VMDK) Requerimientos de Hardware m\u00ednimos 20 GB de espacio libre en disco duro (para VMDK) 2 GB de RAM. Paso 1. Descargar la M\u00e1quina Virtual Pueden usar este link, que tiene la m\u00e1quina que usamos en los TPs (es un link a Dropbox). M\u00e1quina Virtual O bien, si eso falla, pueden probar este link, que es un link a Drive. M\u00e1quina Virtual desde Drive Atenci\u00f3n Son archivos pesados (~ 9GB ). Desc\u00e1rguenlos con tiempo y con conexi\u00f3n estable . Si no cuentan con una conexi\u00f3n estable, pueden escribirnos para buscar alguna soluci\u00f3n alternativa. Paso 2. Validar la descarga Una vez descargado el archivo hay que validar la descarga usando checksums. Pueden usar cualquiera de estos checksums (MD5, SHA256), y como respuesta tienen que obtener estos valores. Si los valores no coinciden, la descarga no fue exitosa (el archivo est\u00e1 corrupto y no va a funcionar!). Los valores de los checksums son hexadecimales, da igual si las letras est\u00e1n en mayuscula o minuscula, mientras coincidan est\u00e1 OK. Info IBioinfo-Lubuntu-32 v1.3.zip, MD5 checksum: 8266E14E765D03920E743AA1B09EA56B IBioinfo-Lubuntu-32 v1.3.zip, SHA256 checksum: 7F23F297BDD497704E2DAF712C2E96673600C63978E983D222819F0EE34518FE Pueden estar en may\u00fasculas o min\u00fasculas. Como validar los checksums. Dependiendo de si est\u00e1n usando Windows (Powershell), OSX (Mac, Terminal), o Linux (Terminal), estos son los comandos que tienen que usar: # Windows Poweshell # asumimos que descargaron el archivo en C:\\Downloads, si no es as\u00ed, cambien el Path! Get-FileHash -Algorithm MD5 -Path 'C:\\Downloads\\IBioinfo-Lubuntu-32 v1.3.zip' Get-FileHash -Algorithm SHA256 -Path 'C:\\Downloads\\IBioinfo-Lubuntu-32 v1.3.zip' # OS X (Terminal App) # tienen que cambiarse primero al directorio donde hicieron la descarga, por ej Downloads cd Downloads md5 IBioinfo-Lubuntu-32 v1.3.zip shasum -a 256 IBioinfo-Lubuntu-32 v1.3.zip # Linux (Terminal) # tienen que cambiarse primero al directorio donde hicieron la descarga, por ej Downloads cd Downloads md5sum IBioinfo-Lubuntu-32 v1.3.zip sha256sum IBioinfo-Lubuntu-32 v1.3.zip Luego, solamente si los checksums coinciden (la descarga fue exitosa), descomprimir para obtener el vmdk (pesa alrededor de 15GB, pero puede llegar a crecer un poco durante la cursada). Elegir la ubicaci\u00f3n Elijan la ubicaci\u00f3n final del archivo vmdk ya que una vez creada la Virtual Machine NO se puede mover el archivo .vmdk de lugar. Paso 3. Instalar Virtual Box Mientras descarga la imagen, aprovechen el tiempo muerto para descargar Oracle VM VirtualBox. El programa es gratuito y pueden descargarlo desde la p\u00e1gina oficial . Descarguen la \u00faltima versi\u00f3n (v6.1) apropiada para su sistema operativo (Windows, OSX o Linux) y sigan las instrucciones del instalador hasta que hayan terminado. Paso 4. Crear una m\u00e1quina virtual Virtual Box es un virtualizador de entornos. Nos permite generar m\u00e1quinas virtuales . Vamos a crear nuestra m\u00e1quina virtual con el archivo de disco virtual IBioinfo-Lubuntu-32.vmdk que acabamos de descargar. Para eso: Abrimos Virtual Box: Hacemos click en New o Nueva Aparecer\u00e1 una caja de di\u00e1logo, en donde deberemos indicar: Name o Nombre: Es el nombre que queremos darle a la m\u00e1quina virtual. Elijan el que quieran. Machine Folder o Carpeta de M\u00e1quina: Es la ubicaci\u00f3n de la configuraci\u00f3n de la m\u00e1quina virtual. Elijan la que quieran. Type o Tipo: Es el tipo de virtualizaci\u00f3n. Elijan Linux. Version o Versi\u00f3n: Es la versi\u00f3n del sistema operativo. Ubuntu 32 bits. En el mismo panel deberemos indicar la cantidad de memoria RAM que vamos a prestarle a la m\u00e1quina virtual. Pongan la m\u00e1xima que puedan dentro de la regi\u00f3n verde (recuerden que al momento de usar la m\u00e1quina virtual, \u00e9sta sustraer\u00e1 autom\u00e1ticamente recursos de nuestra compu). Estos valores depender\u00e1n de la cantidad de RAM f\u00edsica que tenga nuestro host . Cuanto m\u00e1s RAM le demos a la m\u00e1quina virtual, m\u00e1s r\u00e1pido va a andar. Para las tareas que realizaremos, darle entre 2 y 4 GB de ram (2048-4096 MB) estar\u00e1 bien. Y finalmente el disco duro. Aqu\u00ed es donde entra nuestro archivo IBioinfo-Lubuntu.vmdk : Haciendo click en el icono de la carpeta a la derecha, agregaremos nuestro disco virtual: A\u00f1adir --> elegimos nuestro VMDK Con esto habremos finalizado la creaci\u00f3n y podremos comenzar. Si todo sali\u00f3 bien, deber\u00e1n ver una entrada con su m\u00e1quina virtual recientemente creada en el Inicio del Virtual Box. Intenten correr la m\u00e1quina virtual haciendo click en \u201cIniciar\u201d. En breve deber\u00edan ver el logo de Lubuntu y pronto el escritorio del sistema operativo. Contrase\u00f1a Si les pide alguna contrase\u00f1a, la misma es unsam . No cambiar ubicaci\u00f3n Una vez creada la Virtual Machine NO muevan el archivo .vmdk de lugar. Si lo hicieron, f\u00edjense en la secci\u00f3n de problemas que est\u00e1 la soluci\u00f3n.","title":"M\u00e1quina Virtual"},{"location":"instructivos/maquina_virtual/#que-es-una-maquina-virtual","text":"Las m\u00e1quinas virtuales no son m\u00e1s que computadoras virtuales (denominadas invitadas o guests ), emuladas dentro de una computadora real (denominada hospedadora o host ). Algunos de sus principales usos son compartir una misma computadora entre muchas personas, tener una computadora que se puede mover completa en un pendrive o similar, o instalar multiples sistemas operativos en una misma computadora de una forma mucho m\u00e1s simple. La virtualizaci\u00f3n es un proceso costoso , ya que si bien nos permite crear nuevas compus, al momento de correrlas estaremos repartiendo los recursos reales (espacio en disco, memoria RAM y velocidad de procesamiento CPU) del host (es decir, de nuestra computadora ) entre todas las m\u00e1quinas virtuales guest que est\u00e9n activas. Es por esto que debemos ser cuidadosos al momento de generarlas, d\u00e1ndoles suficientes recursos para funcionar, pero no todos los recursos del host (es decir, de nuestra computadora ).","title":"\u00bfQu\u00e9 es una m\u00e1quina virtual?"},{"location":"instructivos/maquina_virtual/#el-disco-de-maquina-virtual","text":"El disco de una m\u00e1quina virtual es una \u201cfoto\u201d de un disco de almacenamiento. Todo lo que un disco duro tiene guardado, incluyendo el sistema operativo y los programas instalados, quedar\u00e1n guardados en un archivo cuando la creemos con las herramientas adecuadas. Como no existe un disco duro f\u00edsico se lo considera disco virtual . Este archivo permite regenerar el estado de la computadora desde la que se cre\u00f3 dicho disco al momento de sacar la foto. Los docentes ya hemos ensamblado, para la materia, un disco de m\u00e1quina virtual con Lubuntu 18 (una distribuci\u00f3n versi\u00f3n ultra liviana de Ubuntu 18) en la que hemos instalado todos los programas y herramientas que usaremos en la asignatura. En adelante, nos referiremos a \u00e9ste como IBioinfo.","title":"El disco de m\u00e1quina virtual"},{"location":"instructivos/maquina_virtual/#puesta-en-funcionamiento-de-maquina-virtual","text":"Este es un instructivo corto sobre c\u00f3mo hacer para correr la m\u00e1quina virtual de la materia en sus computadoras. Vamos a necesitar:","title":"Puesta en funcionamiento de m\u00e1quina virtual"},{"location":"instructivos/maquina_virtual/#software-y-archivos-a-usar","text":"Oracle VM VirtualBox instalado en nuestras compus. Forma de descomprimir un archivo comprimido ZIP (por ejemplo WinZip para Windows o GUnzip para Linux) El disco de la m\u00e1quina virtual (VMDK)","title":"Software y archivos a usar"},{"location":"instructivos/maquina_virtual/#requerimientos-de-hardware-minimos","text":"20 GB de espacio libre en disco duro (para VMDK) 2 GB de RAM.","title":"Requerimientos de Hardware m\u00ednimos"},{"location":"instructivos/maquina_virtual/#paso-1-descargar-la-maquina-virtual","text":"Pueden usar este link, que tiene la m\u00e1quina que usamos en los TPs (es un link a Dropbox). M\u00e1quina Virtual O bien, si eso falla, pueden probar este link, que es un link a Drive. M\u00e1quina Virtual desde Drive Atenci\u00f3n Son archivos pesados (~ 9GB ). Desc\u00e1rguenlos con tiempo y con conexi\u00f3n estable . Si no cuentan con una conexi\u00f3n estable, pueden escribirnos para buscar alguna soluci\u00f3n alternativa.","title":"Paso 1. Descargar la M\u00e1quina Virtual"},{"location":"instructivos/maquina_virtual/#paso-2-validar-la-descarga","text":"Una vez descargado el archivo hay que validar la descarga usando checksums. Pueden usar cualquiera de estos checksums (MD5, SHA256), y como respuesta tienen que obtener estos valores. Si los valores no coinciden, la descarga no fue exitosa (el archivo est\u00e1 corrupto y no va a funcionar!). Los valores de los checksums son hexadecimales, da igual si las letras est\u00e1n en mayuscula o minuscula, mientras coincidan est\u00e1 OK. Info IBioinfo-Lubuntu-32 v1.3.zip, MD5 checksum: 8266E14E765D03920E743AA1B09EA56B IBioinfo-Lubuntu-32 v1.3.zip, SHA256 checksum: 7F23F297BDD497704E2DAF712C2E96673600C63978E983D222819F0EE34518FE Pueden estar en may\u00fasculas o min\u00fasculas. Como validar los checksums. Dependiendo de si est\u00e1n usando Windows (Powershell), OSX (Mac, Terminal), o Linux (Terminal), estos son los comandos que tienen que usar: # Windows Poweshell # asumimos que descargaron el archivo en C:\\Downloads, si no es as\u00ed, cambien el Path! Get-FileHash -Algorithm MD5 -Path 'C:\\Downloads\\IBioinfo-Lubuntu-32 v1.3.zip' Get-FileHash -Algorithm SHA256 -Path 'C:\\Downloads\\IBioinfo-Lubuntu-32 v1.3.zip' # OS X (Terminal App) # tienen que cambiarse primero al directorio donde hicieron la descarga, por ej Downloads cd Downloads md5 IBioinfo-Lubuntu-32 v1.3.zip shasum -a 256 IBioinfo-Lubuntu-32 v1.3.zip # Linux (Terminal) # tienen que cambiarse primero al directorio donde hicieron la descarga, por ej Downloads cd Downloads md5sum IBioinfo-Lubuntu-32 v1.3.zip sha256sum IBioinfo-Lubuntu-32 v1.3.zip Luego, solamente si los checksums coinciden (la descarga fue exitosa), descomprimir para obtener el vmdk (pesa alrededor de 15GB, pero puede llegar a crecer un poco durante la cursada). Elegir la ubicaci\u00f3n Elijan la ubicaci\u00f3n final del archivo vmdk ya que una vez creada la Virtual Machine NO se puede mover el archivo .vmdk de lugar.","title":"Paso 2. Validar la descarga"},{"location":"instructivos/maquina_virtual/#paso-3-instalar-virtual-box","text":"Mientras descarga la imagen, aprovechen el tiempo muerto para descargar Oracle VM VirtualBox. El programa es gratuito y pueden descargarlo desde la p\u00e1gina oficial . Descarguen la \u00faltima versi\u00f3n (v6.1) apropiada para su sistema operativo (Windows, OSX o Linux) y sigan las instrucciones del instalador hasta que hayan terminado.","title":"Paso 3. Instalar Virtual Box"},{"location":"instructivos/maquina_virtual/#paso-4-crear-una-maquina-virtual","text":"Virtual Box es un virtualizador de entornos. Nos permite generar m\u00e1quinas virtuales . Vamos a crear nuestra m\u00e1quina virtual con el archivo de disco virtual IBioinfo-Lubuntu-32.vmdk que acabamos de descargar. Para eso: Abrimos Virtual Box: Hacemos click en New o Nueva Aparecer\u00e1 una caja de di\u00e1logo, en donde deberemos indicar: Name o Nombre: Es el nombre que queremos darle a la m\u00e1quina virtual. Elijan el que quieran. Machine Folder o Carpeta de M\u00e1quina: Es la ubicaci\u00f3n de la configuraci\u00f3n de la m\u00e1quina virtual. Elijan la que quieran. Type o Tipo: Es el tipo de virtualizaci\u00f3n. Elijan Linux. Version o Versi\u00f3n: Es la versi\u00f3n del sistema operativo. Ubuntu 32 bits. En el mismo panel deberemos indicar la cantidad de memoria RAM que vamos a prestarle a la m\u00e1quina virtual. Pongan la m\u00e1xima que puedan dentro de la regi\u00f3n verde (recuerden que al momento de usar la m\u00e1quina virtual, \u00e9sta sustraer\u00e1 autom\u00e1ticamente recursos de nuestra compu). Estos valores depender\u00e1n de la cantidad de RAM f\u00edsica que tenga nuestro host . Cuanto m\u00e1s RAM le demos a la m\u00e1quina virtual, m\u00e1s r\u00e1pido va a andar. Para las tareas que realizaremos, darle entre 2 y 4 GB de ram (2048-4096 MB) estar\u00e1 bien. Y finalmente el disco duro. Aqu\u00ed es donde entra nuestro archivo IBioinfo-Lubuntu.vmdk : Haciendo click en el icono de la carpeta a la derecha, agregaremos nuestro disco virtual: A\u00f1adir --> elegimos nuestro VMDK Con esto habremos finalizado la creaci\u00f3n y podremos comenzar. Si todo sali\u00f3 bien, deber\u00e1n ver una entrada con su m\u00e1quina virtual recientemente creada en el Inicio del Virtual Box. Intenten correr la m\u00e1quina virtual haciendo click en \u201cIniciar\u201d. En breve deber\u00edan ver el logo de Lubuntu y pronto el escritorio del sistema operativo. Contrase\u00f1a Si les pide alguna contrase\u00f1a, la misma es unsam . No cambiar ubicaci\u00f3n Una vez creada la Virtual Machine NO muevan el archivo .vmdk de lugar. Si lo hicieron, f\u00edjense en la secci\u00f3n de problemas que est\u00e1 la soluci\u00f3n.","title":"Paso 4. Crear una m\u00e1quina virtual"},{"location":"instructivos/problemasVM/","text":"Problemas y posibles soluciones No funciona y eligieron la virtualizaci\u00f3n de 32 bits (es la \u00fanica que se est\u00e1 ofreciendo) Soluci\u00f3n: Habilitar una opci\u00f3n de virtualizaci\u00f3n especial ( PAN/NX ), sobre todo en sistemas nuevos. Para hacerlo: Click derecho en la m\u00e1quina virtual --> Configuraci\u00f3n --> Sistema --> Procesador --> Habilitar PAE/NX Habilitar PAE/NX tiene que estar con el tick Sigue sin funcionar Habilitar PAE/NX est\u00e1 tildado y la m\u00e1quina virtual se queda congelada en una pantalla similar a la siguiente: Soluci\u00f3n: Click derecho en la m\u00e1quina virtual --> Configuraci\u00f3n --> Sistema --> Procesador Prueben con 2 o 4 procesadores en la barra que dice Procesador(es), siempre manej\u00e1ndose dentro del rango verde. Mensaje de Error: \"This computer does not have hardware-assisted virtualization\" La computadora, por defecto, no permite la virtualizaci\u00f3n. Soluci\u00f3n: Sigan los pasos descritos en este post . En sistema aparece cartel que dice: el hardware de virtualizaci\u00f3n est\u00e1 habilitado en la secci\u00f3n de aceleraci\u00f3n de la p\u00e1gina de Sistema... Soluci\u00f3n: Accedan a la pesta\u00f1a de Aceleraci\u00f3n y aseg\u00farense de que no haya ninguna interfaz de paravirtualizaci\u00f3n seleccionada. Error: \"Could not open medium\" Es posible que hayan movido el archivo vmdk. Soluci\u00f3n: Vayan a: Archivo --> Biblioteca de Medios (Virtual media manager) y remuevan el disco problem\u00e1tico. Si la opci\u00f3n de remover les aparece deshabilitada, deber\u00e1n \u201cLiberarlo\u201d primero. Luego, borren la m\u00e1quina virtual y vu\u00e9lvanla a crear usando la nueva (y definitiva ) ubicaci\u00f3n del archivo vmdk. Error: Kernel driver not installed (rc=-1908) Soluci\u00f3n para m\u00e1quina f\u00edsica/host con sistema operativo Ubuntu: Abrir la terminal y correr los siguientes comandos: sudo dpkg-reconfigure virtualbox-dkms sudo /sbin/vboxconfig Luego de esto, abrir nuevamente VirtualBox e iniciar la maquina virtual. El error se deber\u00eda haber solucionado.","title":"Problemas instalando la M\u00e1quina Virtual"},{"location":"instructivos/problemasVM/#problemas-y-posibles-soluciones","text":"","title":"Problemas y posibles soluciones"},{"location":"instructivos/problemasVM/#no-funciona-y-eligieron-la-virtualizacion-de-32-bits-es-la-unica-que-se-esta-ofreciendo","text":"Soluci\u00f3n: Habilitar una opci\u00f3n de virtualizaci\u00f3n especial ( PAN/NX ), sobre todo en sistemas nuevos. Para hacerlo: Click derecho en la m\u00e1quina virtual --> Configuraci\u00f3n --> Sistema --> Procesador --> Habilitar PAE/NX Habilitar PAE/NX tiene que estar con el tick","title":"No funciona y eligieron la virtualizaci\u00f3n de 32 bits (es la \u00fanica que se est\u00e1 ofreciendo)"},{"location":"instructivos/problemasVM/#sigue-sin-funcionar","text":"Habilitar PAE/NX est\u00e1 tildado y la m\u00e1quina virtual se queda congelada en una pantalla similar a la siguiente: Soluci\u00f3n: Click derecho en la m\u00e1quina virtual --> Configuraci\u00f3n --> Sistema --> Procesador Prueben con 2 o 4 procesadores en la barra que dice Procesador(es), siempre manej\u00e1ndose dentro del rango verde.","title":"Sigue sin funcionar"},{"location":"instructivos/problemasVM/#mensaje-de-error-this-computer-does-not-have-hardware-assisted-virtualization","text":"La computadora, por defecto, no permite la virtualizaci\u00f3n. Soluci\u00f3n: Sigan los pasos descritos en este post .","title":"Mensaje de Error: \"This computer does not have hardware-assisted virtualization\""},{"location":"instructivos/problemasVM/#en-sistema-aparece-cartel-que-dice-el-hardware-de-virtualizacion-esta-habilitado-en-la-seccion-de-aceleracion-de-la-pagina-de-sistema","text":"Soluci\u00f3n: Accedan a la pesta\u00f1a de Aceleraci\u00f3n y aseg\u00farense de que no haya ninguna interfaz de paravirtualizaci\u00f3n seleccionada.","title":"En sistema aparece cartel que dice: el hardware de virtualizaci\u00f3n est\u00e1 habilitado en la secci\u00f3n de aceleraci\u00f3n de la p\u00e1gina de Sistema..."},{"location":"instructivos/problemasVM/#error-could-not-open-medium","text":"Es posible que hayan movido el archivo vmdk. Soluci\u00f3n: Vayan a: Archivo --> Biblioteca de Medios (Virtual media manager) y remuevan el disco problem\u00e1tico. Si la opci\u00f3n de remover les aparece deshabilitada, deber\u00e1n \u201cLiberarlo\u201d primero. Luego, borren la m\u00e1quina virtual y vu\u00e9lvanla a crear usando la nueva (y definitiva ) ubicaci\u00f3n del archivo vmdk.","title":"Error: \"Could not open medium\""},{"location":"instructivos/problemasVM/#error-kernel-driver-not-installed-rc-1908","text":"Soluci\u00f3n para m\u00e1quina f\u00edsica/host con sistema operativo Ubuntu: Abrir la terminal y correr los siguientes comandos: sudo dpkg-reconfigure virtualbox-dkms sudo /sbin/vboxconfig Luego de esto, abrir nuevamente VirtualBox e iniciar la maquina virtual. El error se deber\u00eda haber solucionado.","title":"Error: Kernel driver not installed (rc=-1908)"},{"location":"instructivos/tipsVM/","text":"Maximizar la ventana Si maximizamos la ventana a pantalla completa , ser\u00e1 como estar usando la m\u00e1quina virtual solamente. Esto para algunos puede resultar m\u00e1s c\u00f3modo. Pueden probarlo presionando las teclas Ctrl derecho + F juntas. Con volver a presionar esas teclas salen de la pantalla completa . Acceso a la l\u00ednea de comandos Para acceder a la l\u00ednea de comandos hay varias formas: Forma 1: Inicio Herramientas del sistema LXTerminal Forma 2: Presionar las teclas Ctrl + Alt + T , las tres juntas. Ctrl y Alt tienen que ser los de la izquierda. Forma 3: Presionando la tecla F4 en la carpeta donde nos encontremos. Cambiar el layout del teclado Para cambiar el layout del teclado (en que tecla est\u00e1 el @, el |, los par\u00e9ntesis, etc): Click derecho en el panel: Seleccionar A\u00f1adir/quitar elementos del panel Seleccionar A\u00f1adir Agente de distribuci\u00f3n del teclado Hacer click en A\u00f1adir y cerrar la ventana. En el panel aparecer\u00e1 al lado del bot\u00f3n de apagado la bandera espa\u00f1ola, click derecho sobre la bandera y seleccionar la primera opci\u00f3n: Configuraci\u00f3n de Agente de distribuci\u00f3n de teclado Se abrir\u00e1 una ventana. Destildar la opci\u00f3n: Mantener las distribuciones del sistema y se habilitar\u00e1n las opciones: En Distribuciones del teclado elegir A\u00f1adir y busca en la lista el teclado correspondiente. Los m\u00e1s comunes son: Espa\u00f1ol (es) Espa\u00f1ol latinoamericano (latam) Ingl\u00e9s (EE.UU.) (us) Si no sab\u00e9s cual es: pod\u00e9s chequear algunos teclados en Wiki en la secci\u00f3n QUERTY. Selecciona el que corresponda y haz click en Aceptar. Volver\u00e1 a la ventana anterior donde puedes subir la configuraci\u00f3n que desees usar (o quitar la que no quieres usar). 8. Si dejaste m\u00e1s de una configuraci\u00f3n, haciendo click sobre la banderita en el panel pod\u00e9s cambiar a las distintas configuraciones (va cambiando la etiqueta). Copiar y pegar de m\u00e1quina host a m\u00e1quina virtual y viceversa Para copiar y pegar de la m\u00e1quina host (es decir, sus compus f\u00edsicas ) a la m\u00e1quina virtual (la de la materia) tienen que: Con la m\u00e1quina virtual abierta Van a Devices / Dispositivos Shared Clipboard / Portapapeles Compartido y seleccionan Bidirectional / Bidireccional Compartir una carpeta con la m\u00e1quina host Una manera simple de compartir archivos entre la m\u00e1quina host (es decir, sus compus f\u00edsicas ) y la m\u00e1quina virtual o viceversa es crear una carpeta compartida, para esto: Con la m\u00e1quina virtual abierta Van a Devices / Dispositivos Shared Folder / Carpetas Compartidas y seleccionan Shared Folders Settings / Preferencias de carpetas compartidas . Se les abrir\u00e1 una ventana, donde deben elegir la carpetita con el s\u00edmbolo m\u00e1s que est\u00e1 a la derecha para agregar una carpeta compartida y se les abrir\u00e1 una nueva ventana. Folder Path: Indican la ruta a la carpeta que van a compartir en la m\u00e1quina host (SU computadora). Folder Name: El nombre con el que aparecer\u00e1 la carpeta en la m\u00e1quina virtual Auto-mount: Tiene que estar tickeado. Make Permanent: Tiene que estar tickeado. Click en Ok. Deber\u00edan ver algo similar a lo siguiente: Click en Ok. Se les debe haber creado un \u00edcono en el escritorio de la m\u00e1quina virtual con el nombre que eligieron en Folder Name Si hacen click, deber\u00edan poder acceder a la carpeta. Si aparece un cartel donde dice que no tienen los permisos necesarios, entonces hacen lo siguiente. Abren una terminal utilizando las teclas: Ctrl + Alt + T Escriben lo siguiente en la terminal: sudo usermod -a -G vboxsf $( whoami ) Si les pide una clave es unsam Acceso a Internet Es necesario que la m\u00e1quina virtual tenga acceso a internet. Puede ser que esto funcione automaticamente, pero de no ser as\u00ed pueden hacer: Van a Settings / Configuraci\u00f3n Network / Red Habilitan en la pesta\u00f1a Adapter 1 la opci\u00f3n Enable Network Adapter Enable Network Adapter tiene que estar tildado. Resoluci\u00f3n de Pantalla Por defecto, la pantalla de la m\u00e1quina virtual deber\u00eda agrandarse seg\u00fan el tama\u00f1o de su monitor. Si esto no sucede pueden agrandar la pantalla a mano haciendo: Click en el Bot\u00f3n inicio de Lubuntu (esquina inferior izquierda) Click en Preferencias Click en Ajustes del monitor Pasar la resoluci\u00f3n a la mayor posible (podemos usar la misma que usamos en el sistema operativo del host) Click en Aplicar y, si estamos conformes, en Guardar . Para que la resoluci\u00f3n de pantalla elegida sea permanente: Esta versi\u00f3n de lubuntu presenta un bug donde la resoluci\u00f3n cambia cada vez que se suspende la VM. Por lo tanto la forma m\u00e1s sencilla de solucionarlo es configurando la VM para no suspenderse m\u00e1s: Click en el Bot\u00f3n inicio de Lubuntu (esquina inferior izquierda) Click en Preferencias Click en Administrador de energ\u00eda Click en la pesta\u00f1a Pantalla y luego mover las tres barras hasta la izquierda como se muestra en la siguiente imagen: Click en la pesta\u00f1a Seguridad y luego seleccionar \"Nunca\" en la lista desplegable que aparece al lado de Bloquear sesi\u00f3n autom\u00e1ticamente y luego destildar donde dice \"Bloquear la pantalla cuando el sistema vaya a suspensi\u00f3n\". Tiene que quedar como se ve en la siguiente imagen:","title":"Tips and Tricks para usar la M\u00e1quina Virtual m\u00e1s c\u00f3modos"},{"location":"instructivos/tipsVM/#maximizar-la-ventana","text":"Si maximizamos la ventana a pantalla completa , ser\u00e1 como estar usando la m\u00e1quina virtual solamente. Esto para algunos puede resultar m\u00e1s c\u00f3modo. Pueden probarlo presionando las teclas Ctrl derecho + F juntas. Con volver a presionar esas teclas salen de la pantalla completa .","title":"Maximizar la ventana"},{"location":"instructivos/tipsVM/#acceso-a-la-linea-de-comandos","text":"Para acceder a la l\u00ednea de comandos hay varias formas: Forma 1: Inicio Herramientas del sistema LXTerminal Forma 2: Presionar las teclas Ctrl + Alt + T , las tres juntas. Ctrl y Alt tienen que ser los de la izquierda. Forma 3: Presionando la tecla F4 en la carpeta donde nos encontremos.","title":"Acceso a la l\u00ednea de comandos"},{"location":"instructivos/tipsVM/#cambiar-el-layout-del-teclado","text":"Para cambiar el layout del teclado (en que tecla est\u00e1 el @, el |, los par\u00e9ntesis, etc): Click derecho en el panel: Seleccionar A\u00f1adir/quitar elementos del panel Seleccionar A\u00f1adir Agente de distribuci\u00f3n del teclado Hacer click en A\u00f1adir y cerrar la ventana. En el panel aparecer\u00e1 al lado del bot\u00f3n de apagado la bandera espa\u00f1ola, click derecho sobre la bandera y seleccionar la primera opci\u00f3n: Configuraci\u00f3n de Agente de distribuci\u00f3n de teclado Se abrir\u00e1 una ventana. Destildar la opci\u00f3n: Mantener las distribuciones del sistema y se habilitar\u00e1n las opciones: En Distribuciones del teclado elegir A\u00f1adir y busca en la lista el teclado correspondiente. Los m\u00e1s comunes son: Espa\u00f1ol (es) Espa\u00f1ol latinoamericano (latam) Ingl\u00e9s (EE.UU.) (us) Si no sab\u00e9s cual es: pod\u00e9s chequear algunos teclados en Wiki en la secci\u00f3n QUERTY. Selecciona el que corresponda y haz click en Aceptar. Volver\u00e1 a la ventana anterior donde puedes subir la configuraci\u00f3n que desees usar (o quitar la que no quieres usar). 8. Si dejaste m\u00e1s de una configuraci\u00f3n, haciendo click sobre la banderita en el panel pod\u00e9s cambiar a las distintas configuraciones (va cambiando la etiqueta).","title":"Cambiar el layout del teclado"},{"location":"instructivos/tipsVM/#copiar-y-pegar-de-maquina-host-a-maquina-virtual-y-viceversa","text":"Para copiar y pegar de la m\u00e1quina host (es decir, sus compus f\u00edsicas ) a la m\u00e1quina virtual (la de la materia) tienen que: Con la m\u00e1quina virtual abierta Van a Devices / Dispositivos Shared Clipboard / Portapapeles Compartido y seleccionan Bidirectional / Bidireccional","title":"Copiar y pegar de m\u00e1quina host a m\u00e1quina virtual y viceversa"},{"location":"instructivos/tipsVM/#compartir-una-carpeta-con-la-maquina-host","text":"Una manera simple de compartir archivos entre la m\u00e1quina host (es decir, sus compus f\u00edsicas ) y la m\u00e1quina virtual o viceversa es crear una carpeta compartida, para esto: Con la m\u00e1quina virtual abierta Van a Devices / Dispositivos Shared Folder / Carpetas Compartidas y seleccionan Shared Folders Settings / Preferencias de carpetas compartidas . Se les abrir\u00e1 una ventana, donde deben elegir la carpetita con el s\u00edmbolo m\u00e1s que est\u00e1 a la derecha para agregar una carpeta compartida y se les abrir\u00e1 una nueva ventana. Folder Path: Indican la ruta a la carpeta que van a compartir en la m\u00e1quina host (SU computadora). Folder Name: El nombre con el que aparecer\u00e1 la carpeta en la m\u00e1quina virtual Auto-mount: Tiene que estar tickeado. Make Permanent: Tiene que estar tickeado. Click en Ok. Deber\u00edan ver algo similar a lo siguiente: Click en Ok. Se les debe haber creado un \u00edcono en el escritorio de la m\u00e1quina virtual con el nombre que eligieron en Folder Name Si hacen click, deber\u00edan poder acceder a la carpeta. Si aparece un cartel donde dice que no tienen los permisos necesarios, entonces hacen lo siguiente. Abren una terminal utilizando las teclas: Ctrl + Alt + T Escriben lo siguiente en la terminal: sudo usermod -a -G vboxsf $( whoami ) Si les pide una clave es unsam","title":"Compartir una carpeta con la m\u00e1quina host"},{"location":"instructivos/tipsVM/#acceso-a-internet","text":"Es necesario que la m\u00e1quina virtual tenga acceso a internet. Puede ser que esto funcione automaticamente, pero de no ser as\u00ed pueden hacer: Van a Settings / Configuraci\u00f3n Network / Red Habilitan en la pesta\u00f1a Adapter 1 la opci\u00f3n Enable Network Adapter Enable Network Adapter tiene que estar tildado.","title":"Acceso a Internet"},{"location":"instructivos/tipsVM/#resolucion-de-pantalla","text":"Por defecto, la pantalla de la m\u00e1quina virtual deber\u00eda agrandarse seg\u00fan el tama\u00f1o de su monitor. Si esto no sucede pueden agrandar la pantalla a mano haciendo: Click en el Bot\u00f3n inicio de Lubuntu (esquina inferior izquierda) Click en Preferencias Click en Ajustes del monitor Pasar la resoluci\u00f3n a la mayor posible (podemos usar la misma que usamos en el sistema operativo del host) Click en Aplicar y, si estamos conformes, en Guardar . Para que la resoluci\u00f3n de pantalla elegida sea permanente: Esta versi\u00f3n de lubuntu presenta un bug donde la resoluci\u00f3n cambia cada vez que se suspende la VM. Por lo tanto la forma m\u00e1s sencilla de solucionarlo es configurando la VM para no suspenderse m\u00e1s: Click en el Bot\u00f3n inicio de Lubuntu (esquina inferior izquierda) Click en Preferencias Click en Administrador de energ\u00eda Click en la pesta\u00f1a Pantalla y luego mover las tres barras hasta la izquierda como se muestra en la siguiente imagen: Click en la pesta\u00f1a Seguridad y luego seleccionar \"Nunca\" en la lista desplegable que aparece al lado de Bloquear sesi\u00f3n autom\u00e1ticamente y luego destildar donde dice \"Bloquear la pantalla cuando el sistema vaya a suspensi\u00f3n\". Tiene que quedar como se ve en la siguiente imagen:","title":"Resoluci\u00f3n de Pantalla"},{"location":"practicos/inicio/","tags":["practicos"],"text":"Esta es la p\u00e1gina de inicio de los pr\u00e1cticos de este curso. A continuaci\u00f3n una lista de datos \u00fatiles. Consultas y Canales de Comunicaci\u00f3n Por email a la direcci\u00f3n de la JTP. en Slack pueden mandar mensajes a todo el grupo en los distintos canales. Informes Alguno de los trabajos pr\u00e1cticos de la cursada requieren una resoluci\u00f3n de un problema a informar. Al final de la gu\u00eda de trabajos pr\u00e1cticos se indicar\u00e1 el problema a resolver. La funci\u00f3n de los informes es: Que ustedes puedan aplicar los conocimientos y herramientas adquiridas durante la cursada a un problema puntual Evaluar la capacidad t\u00e9cnica para producir resultados, as\u00ed como tambi\u00e9n el criterio a la hora de evaluar el significado biol\u00f3gico de los mismos y la comprensi\u00f3n de las potencialidades y limitaciones de los algoritmos o herramientas empleadas. Evaluar la capacidad de elaborar informes Cada informe de cada trabajo pr\u00e1ctico puede (o no) estar relacionado con alguno anterior. Por lo tanto: Guarden los archivos y sean prolijos. El trabajo deber\u00e1 ser realizado con las mismas personas con la que realizan los trabajos pr\u00e1cticos normalmente. Es UNA entrega por grupo. Esta entrega deber\u00e1 ser realizada en tiempo y forma, por correo electr\u00f3nico a la persona encargada del trabajo pr\u00e1ctico. Formato Correo Electr\u00f3nico de Entrega de TP Cuando env\u00edan el correo. El asunto del correo debe ser: Entrega Informe TP01 - Grupo 01 Durante la cursada deber\u00e1n ir entregando de forma individual los ejercicios correspondientes a cada trabajo pr\u00e1ctico, los cuales ser\u00e1n aprobados o desaprobados. En caso de estar desaprobado tendr\u00e1n una semana despu\u00e9s de la devoluci\u00f3n para re-entregarlo. Formato a respetar para los informes Los informes deben constar de: 1 hoja de Car\u00e1tula. En esta hoja se incluir\u00e1: N\u00famero y t\u00edtulo del trabajo pr\u00e1ctico (respetar el n\u00famero que figura en la gu\u00eda) N\u00famero de grupo Nombre y Apellido y direcci\u00f3n de correo electr\u00f3nico de cada uno de los integrantes del grupo Fecha de entrega 5 hojas m\u00e1ximo. En estas 5 hojas se debe incluir: Introducci\u00f3n: 1 hoja m\u00e1ximo y NO debe ser la que se utiliza en el trabajo pr\u00e1ctico que entregan los docentes. Objetivo general y objetivos espec\u00edficos M\u00e9todos y resultados Discusi\u00f3n Bibliograf\u00eda (10 referencias m\u00e1ximo) Anexo. No hay l\u00edmite de hojas pero se tendr\u00e1 en cuenta si es referenciado o no en el cuerpo del informe (es decir, no pongan cosas innecesarias) Respecto del formato: Se deber\u00e1n entregar en archivos PDFs nombrados de la siguiente manera: TPXX_GRUPO_XX.pdf (por ejemplo, TP08_GRUPO_01.pdf ) Tama\u00f1o de hoja: A4 Interlineado: 1.15 Letra y tama\u00f1o de letra: Arial 11pts Margen: 2 cm Aviso El formato ser\u00e1 considerado en la puntuaci\u00f3n final del trabajo pr\u00e1ctico Consulten siempre que tengan dudas !!","title":"Inicio"},{"location":"practicos/inicio/#consultas-y-canales-de-comunicacion","text":"Por email a la direcci\u00f3n de la JTP. en Slack pueden mandar mensajes a todo el grupo en los distintos canales.","title":"Consultas y Canales de Comunicaci\u00f3n"},{"location":"practicos/inicio/#informes","text":"Alguno de los trabajos pr\u00e1cticos de la cursada requieren una resoluci\u00f3n de un problema a informar. Al final de la gu\u00eda de trabajos pr\u00e1cticos se indicar\u00e1 el problema a resolver. La funci\u00f3n de los informes es: Que ustedes puedan aplicar los conocimientos y herramientas adquiridas durante la cursada a un problema puntual Evaluar la capacidad t\u00e9cnica para producir resultados, as\u00ed como tambi\u00e9n el criterio a la hora de evaluar el significado biol\u00f3gico de los mismos y la comprensi\u00f3n de las potencialidades y limitaciones de los algoritmos o herramientas empleadas. Evaluar la capacidad de elaborar informes Cada informe de cada trabajo pr\u00e1ctico puede (o no) estar relacionado con alguno anterior. Por lo tanto: Guarden los archivos y sean prolijos. El trabajo deber\u00e1 ser realizado con las mismas personas con la que realizan los trabajos pr\u00e1cticos normalmente. Es UNA entrega por grupo. Esta entrega deber\u00e1 ser realizada en tiempo y forma, por correo electr\u00f3nico a la persona encargada del trabajo pr\u00e1ctico. Formato Correo Electr\u00f3nico de Entrega de TP Cuando env\u00edan el correo. El asunto del correo debe ser: Entrega Informe TP01 - Grupo 01 Durante la cursada deber\u00e1n ir entregando de forma individual los ejercicios correspondientes a cada trabajo pr\u00e1ctico, los cuales ser\u00e1n aprobados o desaprobados. En caso de estar desaprobado tendr\u00e1n una semana despu\u00e9s de la devoluci\u00f3n para re-entregarlo.","title":"Informes"},{"location":"practicos/inicio/#formato-a-respetar-para-los-informes","text":"Los informes deben constar de: 1 hoja de Car\u00e1tula. En esta hoja se incluir\u00e1: N\u00famero y t\u00edtulo del trabajo pr\u00e1ctico (respetar el n\u00famero que figura en la gu\u00eda) N\u00famero de grupo Nombre y Apellido y direcci\u00f3n de correo electr\u00f3nico de cada uno de los integrantes del grupo Fecha de entrega 5 hojas m\u00e1ximo. En estas 5 hojas se debe incluir: Introducci\u00f3n: 1 hoja m\u00e1ximo y NO debe ser la que se utiliza en el trabajo pr\u00e1ctico que entregan los docentes. Objetivo general y objetivos espec\u00edficos M\u00e9todos y resultados Discusi\u00f3n Bibliograf\u00eda (10 referencias m\u00e1ximo) Anexo. No hay l\u00edmite de hojas pero se tendr\u00e1 en cuenta si es referenciado o no en el cuerpo del informe (es decir, no pongan cosas innecesarias) Respecto del formato: Se deber\u00e1n entregar en archivos PDFs nombrados de la siguiente manera: TPXX_GRUPO_XX.pdf (por ejemplo, TP08_GRUPO_01.pdf ) Tama\u00f1o de hoja: A4 Interlineado: 1.15 Letra y tama\u00f1o de letra: Arial 11pts Margen: 2 cm Aviso El formato ser\u00e1 considerado en la puntuaci\u00f3n final del trabajo pr\u00e1ctico Consulten siempre que tengan dudas !!","title":"Formato a respetar para los informes"},{"location":"practicos/resumen/","tags":["practicos","fin","resumen"],"text":"This is the end ... Bueno, hemos llegado al final de la parte pr\u00e1ctica del curso. Felicitaciones! quer\u00e9s seguir explorando t\u00f3picos y ganando experiencia, te dejamos a continuaci\u00f3n algunos links a distintos materiales y recursos: Libros Libro 1 Libro 2 Online Material 1 Material 2 Presencial Presencial 1 Presencial 2 Grupos Asociaci\u00f3n Argentina de Bioinform\u00e1tica y Biolog\u00eda Computacional (A 2 B 2 C) RSG-Argentina","title":"Resumen"},{"location":"practicos/resumen/#this-is-the-end","text":"Bueno, hemos llegado al final de la parte pr\u00e1ctica del curso. Felicitaciones! quer\u00e9s seguir explorando t\u00f3picos y ganando experiencia, te dejamos a continuaci\u00f3n algunos links a distintos materiales y recursos: Libros Libro 1 Libro 2 Online Material 1 Material 2 Presencial Presencial 1 Presencial 2 Grupos Asociaci\u00f3n Argentina de Bioinform\u00e1tica y Biolog\u00eda Computacional (A 2 B 2 C) RSG-Argentina","title":"This is the end ... "},{"location":"practicos/tpsGrid/","text":"TP 1 hola","title":"tpsGrid"},{"location":"practicos/TP01_Linux/","text":"TP 1 . Introducci\u00f3n a Lubuntu, Bash y Programaci\u00f3n Materiales Recursos Online Command-line bootcamp Programando en Bash Comando AWK Consola de Linux online (y otra ) Compilador de Bash online (y otro ) Objetivos Familiarizarse un poco con Lubuntu y su estructura de directorios Familiarizarse con el uso b\u00e1sico de los comandos de Bash Familiarizarse con los bloques l\u00f3gicos b\u00e1sicos de la programaci\u00f3n Introducci\u00f3n al Tema En este trabajo pr\u00e1ctico vamos a aprender a usar la l\u00ednea de comando de Lubuntu (tambi\u00e9n referida como terminal , consola o shell ). Para muchos de nosotros, que estamos acostumbrados a la interfaz gr\u00e1fica de sistemas operativos como los de Windows o GUI (por las siglas en ingles: Graphic User Interface ), la linea de comando puede parecer un desaf\u00edo, pero con pr\u00e1ctica y algo de paciencia descubrir\u00e1n que puede resultar amena. Su uso tiene dos ventajas destacables para nuestro campo: Nos permitir\u00e1 trabajar en entornos o programas sin interfaz gr\u00e1fica (GUI) Mediante el uso de programas o scripts , nos permitir\u00e1 automatizar procesos, acelerando el trabajo y minimizando la cantidad de errores que podemos cometer con tareas repetitivas \u00bfUnix? \u00bfLinux? \u00bfUbuntu? \u00bfLubuntu? Dependiendo que tan familiares esten con Linux, todos estos nombres pueden resultar un poco confusos. Vamos por partes: Unix es un sistema operativo creado en 1969 por dos programadores estadounidenses que trabajaban para Bell Labs, una compan\u00eda de investigaci\u00f3n y desarrollo cient\u00edfico que en su momento era propiedad de AT&T (compa\u00f1ia estadounidense de tel\u00e9fonos). Al ser un sistema operativo portable, multitarea y multiusuario se hizo r\u00e1pidamente popular y se difundi\u00f3 por instituciones acad\u00e9micas y empresas Debido a su popularidad, otros programadores quisieron hacer sus propias versiones de sistemas operativos basados en Unix, pero como sus sistemas operativos ten\u00edan c\u00f3digo original de Unix, AT&T los demand\u00f3, paralizando esta tendenc\u00eda En 1983 se crea el proyecto GNU con el objetivo de crear un sistema operativo similar a Unix, pero gratis y de c\u00f3digo abierto. GNU significa \"GNU's Not Unix\" (es un anagrama recursivo, los programadores se divierten barato). Hacia el fin de los 80s el proyecto ya ten\u00eda casi todos los programas que necesitaba, pero les faltaba conseguir un buen kernel (principal responsable de facilitar a los distintos programas acceso seguro al hardware de la computadora) En 1991, Linus Torvalds empieza a crear lo que terminar\u00eda siendo Linux , un sistema operativo con su propio kernel que usaba muchas de los programas del proyecto GNU. Esta versi\u00f3n se volvi\u00f3 r\u00e1pidamente la m\u00e1s popular de todas las versiones de GNU, llevando a que en 1993 se creara el Debian Project , un proyecto comunal con el objetivo de mejorar una distrubuci\u00f3n de Linux que denominaron Debian GNU/Linux (tambi\u00e9n llamada simplemente Debian ). Ubuntu es una distribuci\u00f3n de Linux creada en 2004 basada en Debian. Al d\u00eda de la fecha es la distrubuci\u00f3n m\u00e1s popular de Linux con m\u00e1s del 50% de los usuarios. Lubuntu es una distribuci\u00f3n de Linux creada en 2009 basada Ubuntu. Es bastante similar a Ubuntu en todo lo que es consola, pero tiene una interfaz gr\u00e1fica que consume menos recursos, haciendolo ideal para maquinas m\u00e1s viejas (o en nuestro caso, maquinas virtuales que pesen lo menos posible). Estructura de directorios de Lubuntu La organizaci\u00f3n de archivos en Ubuntu y Lubuntu es bastante diferente a la de Windows. Si bien no vamos a detallar completamente toda la estructura y que es cada carpeta (porque el 95% no lo van a usar en esta materia), es importante tener una idea de lo b\u00e1sico: / Carpeta raiz, o root . Contiene al resto de las carpetas /etc Configuraciones del sistema para todos los usuarios (mucho cuidado al tocar) /home Ubicaci\u00f3n de los directorios de los diferentes usuarios (o en este caso el \u00fanico usuario) /home/ibioinfo Directorio del usuario ibioinfo . Es el lugar donde van a trabajar la mayor\u00eda del tiempo (incluye tanto el Escritorio como Documentos) y donde se abre por defecto la terminal (m\u00e1s sobre esto en un ratito). Comunmente referida como home directory o home del usuario ibioinfo /media Si fuera una computadora normal (no VM) aca aparecer\u00edan los pendrives. En nuestro caso aca aparecen por defecto las carpetas compartidas con la PC host /tmp Ubicaci\u00f3n de los archivos temporales de los programas /var Ubicaci\u00f3n de los archivos variables de los programas, como logs, bases de datos, paginas webs, etc /var/log Probablemente la subcarpeta m\u00e1s usada de /var . Contiene los logs de los programas (que a veces es la \u00fanica forma de saber porque algo no anduvo) Esto es simplemente un vistazo r\u00e1pido. Si quieren la lista completa de subdirectorios de Lubuntu la pueden encontrar en esta p\u00e1gina , pero tengan en cuenta que tocar cualquier cosa fuera de /home conlleva la posibilidad de arruinar la computadora. En esta materia vamos a usar principalmente /home y /media . L\u00ednea de comando Como ya dijimos en la introducci\u00f3n la l\u00ednea de comando tiene varios nombres, y en esta guia nos vamos a referir a ella como terminal o consola . Hay varias formas de abrir la terminal: Desde cualquier lado: Ctrl + Alt + T Desde cualquier lado: Inicio (menu de abajo a la izquierda) Herramientas del sistema LXterminal Desde afuera de una carpeta: Boton derecho en la carpeta Abrir en el terminal Desde adentro de una carpeta: Herramientas Abrir la carpeta actual en un terminal (o apretar F4 ) La terminal funciona como un explorador de archivos que se mueve entre las carpetas. Los primeros dos m\u00e9todos van a abrir la terminal en /home/ibioinfo , mientras que los \u00faltimos dos m\u00e9todos van a abrir la terminal en la carpeta elegida. Si en algun momento les decimos que abran la terminal y no aclaramos otra cosa nos referimos a abrirla en /home/ibioinfo . Abran la terminal en /home/ibioinfo y deberian ver algo as\u00ed: ibioinfo@ibioinfo-VirtualBox:~$ Donde ibioinfo es el nombre del usuario actual e ibioinfo-VirtualBox el nombre de la computadora (que justo en este caso son similares, pero no es necesario). El ~ despu\u00e9s de los dos puntos (conocido como \"virgulilla\", \"t\u00edlde\" o \"cosito de la \u00f1\") parece ser parte de la terminal, pero en realidad est\u00e1 indicando la carpeta en la que se encuentra en este momento. Como cada usuario trabaja mas que nada en su carpeta, Lubuntu le asigna el s\u00edmbolo ~ a esa carpeta para simplificar los directorios que aparecen en la terminal. En nuestro caso ~ equivale a /home/ibioinfo y puede ser que nos refiramos a esa carpeta como su home directory o simplemente su home . Info Aclaraciones por si son fan\u00e1ticos de los atajos de teclado: Para copiar texto en la terminal hay que usar Ctrl + Shift + C . En en resto de Lubuntu es normal ( Ctrl + C ). Para pegar texto en la terminal hay que usar Ctrl + Shift + V . En en resto de Lubuntu es normal ( Ctrl + V ). De apretar Ctrl + C en la terminal le estan diciendo que corte forzosamente el programa que est\u00e1 corriendo. Si bien hay que tener cuidado con no cortar un proceso importante a la mitad, este atajo del teclado es util si un programa se te qued\u00f3 colgado o similar. Bash: Ubicarse en la terminal La terminal acepta una variedad de comandos en lenguaje Bash , que es el lenguaje de la terminal de GNU. El formato general de los comandos es: comando -opciones parametro1 parametro2 etc Donde comando es el nombre del programa a correr, opciones son comunmente una o m\u00e1s letras luego de un gui\u00f3n que indican alguna modificaci\u00f3n a las opciones por defecto del programa, y los diferentes parametros son cosas que necesita el programa para correr, como puede ser un archivo que esta leyendo. Todo esto va a ir quedando m\u00e1s claro con los diferentes ejemplos. Usted est\u00e1 aqu\u00ed Al ser la terminal b\u00e1sicamente un explorador de archivos, es necesario saber en que carpeta estoy y que hay adentro de dicha carpeta. pwd es un comando que imprime el directorio actual en la terminal ( P rint W orking D irectory). Pruebenlo a ver si ~ era realmente /home/ibioinfo : pwd Bien, ahora que ganamos su confianza, vean que hay adentro de esa carpeta usando ls : ls Si bien por ahora todo lo que ven son carpetas azules, tengan en cuenta que ls va a colorear diferentes tipos de archivos (y de carpetas) de diferentes colores. Este comando es una buena oportunidad de entender un poco mas sobre opciones y parametros . Por defecto ls lista los archivos de la carpeta actual, pero de darle un par\u00e1metro muestra los de dicha carpeta. Prueben correr lo siguiente: ls /etc/perl/Net En este caso est\u00e1n viendo los contenidos de una carpeta diferente a donde estamos parados en la terminal. Si yo quisiera mas informaci\u00f3n sobre los archivos que se encuentran dentro de esta carpeta puedo hacer: Tip El pr\u00f3ximo comando es muy parecido al anterior. Pueden usar Up y Down en su terminal para navegar por los ultimos comandos utilizados y modificar lo necesario. ls -l /etc/perl/Net Donde la opcion -l agrega informaci\u00f3n sobre los permisos del archivo (quien puede leerlo o modificarlo). Con un poco de suerte esta es la primera y ultima vez en toda la materia que vamos a hablar de los permisos de Lubuntu (y de como a veces dan dolores de cabeza). Info La lista completa de las opciones para cada comando se puede ver con el comando man (de manual ). En este caso ser\u00eda man ls . Moverse entre las carpetas Ahora que ya saben donde estan y que carpetas hay adentro es importante saber como moverse entre ellas. Esto se hace principalmente con el comando cd . Asegurense que la terminal esta en su home y usen ls para ver nuevamente la lista de carpetas dentro. Primero vamos a la carpeta Escritorio y vemos que archivos hay adentro, para eso hacer: Tip Tab funciona como autocompletar en la consola. Al escribir el pr\u00f3ximo comando prueben escribir solo cd Es y apretar Tab cd Escritorio Ahora veran que la parte de la izquierda de la terminal cambio a: ibioinfo@ibioinfo-VirtualBox:~/Escritorio$ Indicando que estan en /home/ibioinfo/Escritorio . Usen el comando adecuado para ver que archivos hay adentro de esta carpeta. Ahora quiero volver a su home y para eso escribo: cd .. Vean ahora en que carpeta est\u00e1n. En todo lo que es Ubuntu y Lubuntu .. significa \"una carpeta para arriba\". \u00bfQu\u00e9 pasa entonces si estan en /home/ibioinfo/Escritorio/TP01/Version3/Intento2/Edicion1 y quieren volver a su home ? \u00bfTienen que escribir cd .. 5 veces? Tecnicamente funciona, pero por defecto el comando cd te lleva a tu home si no le das ningun par\u00e1metro. cd Paths relativos y absolutos Cuando corrimos ls /etc/perl/Net estaban ubicados en su home ( /home/ibioinfo ) y si vemos las carpetas dentro de home resulta que no existe ninguna llamada /etc . \u00bfD\u00f3nde est\u00e1 la carpeta /etc en relaci\u00f3n a /home/ibioinfo ? (ver Estructura de directorio de Lubuntu arriba si no se acuerdan) \u00bfC\u00f3mo pudimos acceder a /etc/perl/Net si la terminal estaba ubicada en una carpeta sin ninguna relaci\u00f3n? La respuesta a todo esto son los paths relativos y absolutos: Paths absolutos El path /etc/perl/Net es lo que se llama un path absoluto ; no importa donde est\u00e9n en la terminal en ese momento, /etc/perl/Net va a siempre apuntar al mismo lugar y el comando ls /etc/perl/Net va a siempre andar bien. Una forma f\u00e1cil de identificar paths absolutos es que siempre empiezan en el root o / . Recuerden que ~ apunta a /home/ibioinfo , y por lo tanto el comando cd ~/Escritorio est\u00e1 usando un path absoluto, ya que sin importar de donde se use va a funcionar y va a ir a /home/ibioinfo/Escritorio . Paths relativos Ahora bien, cuando nosotros estabamos ubicados en home y corrimos cd Escritorio pudimos entrar a /home/ibioinfo/Escritorio , pero si volvieramos a correr cd Escritorio el comando no funcionar\u00eda, ya que no existe la carpeta /home/ibioinfo/Escritorio/Escritorio . Esto se debe a que en este caso Escritorio es un path relativo a la ubicaci\u00f3n actual de la terminal. Otra forma de escribir paths relativos en Ubuntu es empezar con . , simbolo que indica \"la carpeta actual\". Volviendo al ejemplo anterior, es equivalente escribir cd Escritorio o cd ./Escritorio . Otro caso de path relativo que ya vimos es cd .. , donde apunta a la \"carpeta de arriba\" de la posici\u00f3n actual de la terminal. Ambos tipos de paths tienen sus ventajas y desventajas. Los paths absolutos tienen la ventaja de funcionar siempre, pero al usar toda la estructura toman m\u00e1s tiempo de escribir y son mas suceptibles a cambios de directorios (si muevo un archivo de lugar tengo que reescribir el comando). Por otro lado los paths relativos son mucho m\u00e1s r\u00e1pidos de escribir y en muchos casos funcionan en diferentes ubicaciones (o computadoras), pero al depender de la ubicaci\u00f3n de la terminal esto puede causar problemas si pienso que estoy en una carpeta pero estoy realmente en otra. En esta cursada vamos a usar ambos para diferentes casos. Ejercicio 1. Ubicarse en la terminal Identifique cual o cuales de los siguientes comandos te llevar\u00edan desde cualquier carpeta al home del usuario ibioinfo . cd ~ cd home/ibioinfo cd home / ibioinfo cd / home / ibioinfo cd /home/ibioinfo cd /ibioinfo/home cd ././ibioinfo cd ./home/ibioinfo \u00bfCambiarian la respuesta en algunos de los puntos anteriores si el usuario logueado actualmente en la computadora no es ibioinfo ? \u00bfPor qu\u00e9? Identifique en la siguiente lista cuales paths son paths relativos : /var/temp/tom_jerry var/temp/tom_jerry /home/tom/Documentos/catfood.png ../../jerry/Documentos/cheese.png ./Videos/Capitulos/ ~/Videos/Capitulos/ ./Descargas/tom_jerry_cap1.torrent /home/tom/Descargas/tom_jerry_cap1.torrent Bash: Crear y eliminar Todo lo que es crear, copiar, mover y eliminar archivos y directorios se puede hacer usando la interfaz gr\u00e1fica como lo har\u00edan en cualquier otro sistema operativo, sin embargo hay situaciones (por ejemplo dentro de un script ) donde es necesario hacerlo mediante la consola. Si bien por ahora les vamos a pedir que usen los siguientes comandos para pr\u00e1cticarlos, en el d\u00eda a d\u00eda hagan lo que les sea m\u00e1s c\u00f3modo. Crear y eliminar directorios Los directorios se pueden crear con: mkdir FOLDER Info En el resto de la guia van a aparecer ciertas palabras en may\u00fascula en los c\u00f3digos, como por ejemplo FOLDER . Estas palabras son variables o placeholders que tienen que ser reemplazadas por lo que corresponda. Donde FOLDER es un path absoluto o relativo con el nombre de la carpeta. Prueben ir en su terminal a /home/ibioinfo/Documentos y usar el comando: mkdir testfolder Y vean si efectivamente apareci\u00f3 una carpeta nueva. Luego usen el comando de nuevo a ver que pasa. Para eliminar directorios se puede usar: rmdir FOLDER Por defecto este comando solo puede eliminar directorios vacios (lo cual puede no ser muy util, pero a la vez es seguro). Usen el comando anterior y borren la carpeta que acaban de crear (reemplacen FOLDER por lo que corresponda). Prueben correr el comando una vez m\u00e1s a ver que pasa. Tip muy importante Este es un buen momento para hablar de que nombres ponerles a las cosas que uno crea un Lubuntu. Si bien cualquier nombre funciona en un principio, por un tema de compatibilidad entre los diferentes programas que pueden llegar a usar se recomienda: Muy recomendado: No usar comillas dobles, simples o ap\u00f3strofes Recomendado: No usar espacios, par\u00e9ntesis, \u00d1, acentos, di\u00e9resis u otros diacr\u00edticos (el espacio comunmente se remplaza por un gui\u00f3n o gui\u00f3n bajo) Crear y eliminar archivos Hay varias formas de crear archivos en Lubuntu y la mas simple es touch ARCHIVO , que crea un archivo de texto vacio donde ARCHIVO es el nombre del archivo (que puede incluir un path antes). Para entender lo que quiero decir vayan a su home y corran: touch Documentos/testfile Aca estoy usando un path relativo para crear el archivo. Se van a dar cuenta que el archivo no tiene extensi\u00f3n (por ejemplo .txt ). En Lubuntu van a ver muchos archivos de texto sin extensi\u00f3n, pero se la pueden agregar sin problema si quieren. Entren a Documentos y vean si el archivo realmente existe. Lo que le vamos a ense\u00f1ar a continuaci\u00f3n es probablemente uno de los comandos m\u00e1s peligrosos de Bash si se usa incorrectamente. rm es el comando usado para eliminar archivos (o carpetas, o discos enteros) y es la base de cientos de historias en internet de como alguien se qued\u00f3 sin trabajo. El comando se usa: rm ARCHIVO Donde ARCHIVO es el archivo a eliminar. rm no les va a pedir confirmaci\u00f3n y el archivo va a ser borrado permanentemente (si borran archivos desde la interfaz gr\u00e1fica s\u00ed hay confirmaci\u00f3n y s\u00ed van a la papelera). Entonces, con cuidado, asegurense que estan en Documentos y borren el archivo testfile . Danger \u00bfSe entendi\u00f3 que hay que tener cuidado con rm ? \u00bfSi? Buenisimo. Mover y copiar archivos y carpetas Adentro de Documentos creen una carpeta llamada testfolder2 y dos archivos de texto vacio, uno llamado testfile_mv y otro testfile_cp . Nuestro objetivo va a ser mover testfile_mv a la carpeta testfolder2 y copiar testfile_cp a la misma carpeta. Los archivos se mueven con mv y se copian con cp y ambos tienen un formato similar que es mv ARCHIVO_ORIGEN FOLDER_DESTINO Donde en este caso ARCHIVO_ORIGEN es el archivo a mover y FOLDER_DESTINO el path a donde moverlo. Prueben entonces mover testfile_mv y copiar testfile_cp adentro de la carpeta testfolder2 . Tip Usando la opci\u00f3n -i al comando, les va a pedir confirmaci\u00f3n si el archivo de destino ya existe. Recuerden que pueden usar man mv o man cp para ver mas opciones. Estos dos comandos tambi\u00e9n pueden ser usados como: mv ARCHIVO_ORIGEN ARCHIVO_DESTINO En este caso ARCHIVO_DESTINO no es una carpeta, sino un archivo adentro del FOLDER_DESTINO , lo que permite renombrar el ARCHIVO_ORIGEN al copiarlo / moverlo. Para que se entienda mejor este uso, ubiquens\u00e9 en Documentos y corran: cp testfile_cp testfolder2/testfile_cp_nuevo Con lo cual acabo de copiar testfile_cp de nuevo a la carpeta testfolder2 , pero ahora con otro nombre. Interesantemente, usar mv de esta manera es la forma de Ubuntu de renombrar archivos desde la terminal. Prueben entrar a testfolder2 y corran: mv testfile_cp_nuevo testfile_cp_otroNombre Y vean que pas\u00f3. Una vez que todo haya funcionado bien, usen rm para eliminar todos los testfile uno a uno y luego usen rmdir para eliminar testfolder2 . Ambos comandos funcionan tambi\u00e9n para copiar, mover y renombrar carpetas, en cuyo caso el formato es: mv FOLDER_ORIGEN FOLDER_DESTINO Danger Hay que ser cuidadosos al usar mv y cp ya que si el archivo de destino ya existe lo van a sobreescribir sin preguntar antes. A ambos comandos se le puede agregar la opci\u00f3n -i para que pregunte antes de sobreescribir de ya existir el archivo de destino. Bash: Archivos de texto Escribir archivos de texto En Lubuntu hay varias formas de escribir en archivos de texto, pero una de las m\u00e1s \u00fatiles para nosotros va a ser el > quien redirige la salida de informaci\u00f3n de la consola. Se usa: comando -opciones parametro1 parametro2 > ARCHIVO_DESTINO Donde lo de la izquierda de > es el comando como lo correr\u00edas normalmente y ARCHIVO_DESTINO es un archivo donde va a ser guardada la salida de ese comando (lo que normalmente ver\u00edan en la consola). Para entender un poco m\u00e1s, vayan a su home y corran: ls -l > Documentos/output_de_ls Ver\u00e1n que en un principio parece que no paso nada. Entren ahora a Documentos y van a ver que hay un nuevo archivo con el nombre output_de_ls . Vamos a abir el archivo usando Leafpad , el editor de texto de la interfaz \u01f5r\u00e1fica de Lubuntu. Asegurandose que estan Documentos , en la consola escriban: leafpad output_de_ls Van a ver que se abre el editor de texto de igual forma que si ubieran hecho doble click en el \u00edcono en el explorador de archivos de la GUI. Puede ser que aparezca un warning o advertencia en la consola, pero la podemos ignorar. Tip Por defecto Leafpad usa una fuente llamada \"Ubuntu\" , que si bien sirve para escribir cuentos, nos va a dar problemas al momento de ver ciertos archivos que vamos a usar en esta materia. En Leafpad vayan a Opciones Tipograf\u00eda... , seleccionen la fuente \"Ubuntu Mono\" y aprieten Aceptar . Las fuentes que tienen Mono en su nombre estan indicando que son monoespaciadas, o sea, que todos sus caracteres tienen el mismo ancho. Esto es ideal para cuando se quieren ver tablas o alineamientos con Leafpad , cosa que vamos a hacer bastante en esta materia. Leafpad funciona como un editor de texto bastante normal. Agreguen una nueva linea abajo de todo (con cualquier texto) y guarden el archivo. Al momento sabemos como guardar en un archivo de texto cualquier salida de un comando de Lubuntu, pero, \u00bfc\u00f3mo hacemos para poner lo que nosotros queremos en un archivo de texto? Simple, \u00a1con otro comando de Lubuntu! El comando echo hace lo que su nombre indica y devuelve por la terminal el texto que le pases. Prueben escribir echo TEXTO , donde TEXTO es cualquier oraci\u00f3n, por ejemplo: echo Probando, uno, dos, tres Tal vez ya se dieron cuenta, pero combinando echo con > podemos escribir nuestros propios archivos de texto desde la terminal. Asegurandose que estan adentro de Documentos , corran: echo Esta es la primera linea del documento > mi_documento Confirmen que se escribi\u00f3 el archivo y que tiene el texto adentro. \u00bfQu\u00e9 piensan que pasa si ahora corr\u00f3 el siguiente comando? Pruebenl\u00f3: echo Quiero agregar otra linea al documento > mi_documento Usen Leafpad para leer el documento. Van a ver que la primera linea que agregamos desapareci\u00f3. Esto es porque cada uso de > sobreescribe el archivo. Si queremos agregar otra linea a un documento que ya tiene informaci\u00f3n tenemos que usar el comando >> quien agrega el texto al archivo en una nueva linea al final sin modificar el contenido anterior. As\u00ed que ahora que sabemos esto podemos correr estos dos comandos: echo Esta es la primera linea del documento > mi_documento echo Esta es la segunda linea del documento >> mi_documento Y vean con Leafpad si funcion\u00f3 como quer\u00edamos. Danger Hay que ser cuidadosos al usar > ya que si el archivo de destino ya existe lo va a sobreescribir sin preguntar antes. Leer archivos de texto Qu\u00e9 comando usar al leer archivos de texto en la consola depende mucho de que tan largo es el archivo y que me interesa de \u00e9l: \u00bfTiene solo pocas lineas de texto? cat va a abrir el archivo y escribirlo todo en la terminal. \u00bfTiene muchas lineas de texto y quiero ver las primeras p\u00e1ginas a ver de que se trata? less va a abrir el archivo y mostrar solo el texto que entra en la terminal. Aprentando Space pasa a la pr\u00f3xima p\u00e1gina y apretando Q deja de leerlo. \u00bfTiene muchas lineas de texto y quiero ver solo las primeras lineas? head te muestra las primeras 10 lineas del archivo. Se puede especificar la cantidad de lineas agregando una opci\u00f3n, por ejemplo, head -3 muestra solo las primeras 3 l\u00edneas. \u00bfTiene muchas lineas de texto y quiero ver solo las \u00faltimas lineas? tail te muestra las \u00faltimas 10 l\u00edneas del archivo. Este n\u00famero se puede cambiar de la misma forma que para head . \u00bfNo saben que tan largo es un archivo dado? Pueden averiguarlo con el comando wc , que devuelve el numero de lineas, palabras y letras (en ese orden) en el archivo. De pasarle la opci\u00f3n -l , el comando devuelve solo el n\u00famero de lineas. Todos estos funcionan de la forma: comando ARCHIVO Usando el archivo martin_fierro que se encuentra en los materiales del TP (boton al principio de todo), prueben los 5 comandos anteriores. Buscar palabras en archivos de texto Va a ser com\u00fan cuando trabajemos con tablas que nos interese encontrar filas con cierto valor y una forma r\u00e1pida de hacer eso es usar grep , comando al que le pasas una palabra o patr\u00f3n y busca filas dentro de un archivo que contengan dicha palabra o patr\u00f3n. En formato general el comando es: grep PALABRA ARCHIVO Usando el archivo martin_fierro con en que trabajamos en la secci\u00f3n anterior podemos correr: grep cantar martin_fierro Y vamos a ver todas las lineas del documento donde aparece la palabra \"cantar\". Hay mucho para hablar sobre grep , pero por ahora lo que nos va a importar es: La opci\u00f3n -v devuelve las l\u00edneas que no contienen PALABRA La opci\u00f3n -c devuelve el n\u00famero de l\u00edneas que contienen PALABRA Es posible pasarle varias opciones a un programa. De hacer grep -v -c voy a estar contando el n\u00famero de l\u00edneas que no contengan PALABRA (el orden de las opciones no afecta el comportamiento) Info Mencion\u00e9 antes que grep tambi\u00e9n funciona con patrones, quienes son conocidos como Expresiones Regulares, o RegEx . Como este es un tema complejo y ya tenemos bastante que procesar no vamos a profundizar mas sobre ellos en este momento, pero explicaremos cualquier patr\u00f3n que usemos en la materia cuando aparezca. Combinar comandos En Bash es posible combinar comandos, lo que quiere decir pasarle la salida de un comando directamente como entrada a otro comando. Esto se hace dividiendo los diferentes comandos con | (o pipe ). Para entender un poco mejor veamos un ejemplo. Digamos que quiero ver las cuales de las primeras 10 lineas del archivo martin_fierro contienen la palabra \"cantar\". Para esto tengo que hacer: head -10 martin_fierro | grep cantar Fijens\u00e9 que en este caso parecer\u00eda que a grep no le estoy pasando ningun ARCHIVO , pero lo que pasa es que va usar como entrada la salida de head . De esta forma se puede concatenar cualquier cantidad de comandos que seran ejecutados de izquierda a derecha. Ejercicio 2. Archivos de texto Para este ejercicio vamos a seguir usando el archivo martin_fierro . \u00bfCu\u00e1ntas l\u00edneas tiene el archivo? \u00bfCu\u00e1ntas l\u00edneas contienen la palabra \"cantar\"? \u00bfCu\u00e1ntas l\u00edneas no contienen la palabra \"guitarra\"? Cree otro archivo de texto llamado martin_fierro_sinA con las l\u00edneas del archivo martin_fierro que no tengan la letra \"a\". Sin borrar el contenido y usando la consola, agregue una l\u00ednea al final de martin_fierro_sinA que indique el autor del Martin Fierro (Jos\u00e9 Hern\u00e1ndez). Volviendo al archivo original, \u00bfcu\u00e1ntas l\u00edneas no contienen la letra \"o\" y s\u00ed contienen la letra \"i\"? (Tip: use | para encadenar comandos) Bash: Programaci\u00f3n y Scripts Info A continuaci\u00f3n vamos a ver una peque\u00f1a introducci\u00f3n a la programaci\u00f3n usando Bash como lenguaje. El objetivo de lo que sigue no es aprenderse de memoria las estructuras y si hay que poner una llave aca o dejar un espacio all\u00e1, sino entender la l\u00f3gica detr\u00e1s de la programaci\u00f3n y como se pueden usar variables, condicionales y ciclos para obtener el resultado deseado. Scripts Los scripts de Bash son b\u00e1sicamente una lista de muchos de los comandos que nosotros corrimos en la terminal, pero escritos dentro de un archivo. Al ejecutar ese archivo todos los comandos dentro de \u00e9l ser\u00e1n corridos uno a uno de arriba a abajo. Para simplificar un poco la tarea y enfocarnos en lo que importa en esta secci\u00f3n, vamos a utilizar la interfaz gr\u00e1fica de Lubuntu. Vayan a Documentos y creen un archivo llamado primer_programa.sh (Boton derecho Crear nuevo... Archivo vac\u00edo). Luego abran el archivo en Leafpad (doble click) y escriban lo siguiente: echo \"----------------\" echo \"| Hello world! |\" echo \"----------------\" Ahora salven el archivo, abran la terminal en esa carpeta ( F4 ) y vamos a ejecutar el script con: bash primer_programa.sh \u00a1Felicidades, ya pueden decir que son programadores! Como pudieron observar, los scripts de Bash se corren con el comando bash SCRIPT y al hacerlo se ejecutaron los 3 comandos echo en el orden que estaban dentro del script. Este tipo de scripts son \u00fatiles si quiero dejar evidencia de los comandos que corr\u00ed en Bash, ya sea para volver a hacerlo otro d\u00eda o para pasarselos a algui\u00e9n m\u00e1s y que los corra en su propia computadora; sin embargo, para realmente programar necesitamos m\u00e1s herramientas. Variables Las variables son palabras que guardan dentro de ellas un n\u00famero o un string (texto), entre otro tipo de valores posibles que veremos m\u00e1s adelante. Veamos un ejemplo de como usar variables (vean ambas pesta\u00f1as): C\u00f3digo C\u00f3digo con comentarios nombre = \"Unsamer\" echo \"Hola $nombre , \u00bftodo bien?\" # Las lineas que empiezan con # son comentarios, no afectan el c\u00f3digo y sirven para aclarar que estas # haciendo en tu programa o script # Al declarar una variable en Bash no se puede poner espacio entre la variable, el = y el valor # Las comillas se usan para indicar que lo de adentro es una cadena de caracteres, o *string* nombre = \"Unsamer\" # Cuando se usa la variable, se le agrega el prefijo $ echo \"Hola $nombre , \u00bftodo bien?\" \u00bfQu\u00e9 piensan que va a pasar de correr este c\u00f3digo en un script? Pruebenl\u00f3. Info Desgraciadamente Bash es muy estricto al momento de programar y perdona bastante poco (como por ejemplo el tema de tener un espacio m\u00e1s o menos). M\u00e1s adelante vamos a usar el lenguaje R que va a ser una de nuestras principales herramientas al momento de analizar y plotear datos y es mucho m\u00e1s amigable. En este momento pueden estar pensando que hubiera sido mucho m\u00e1s f\u00e1cil poner solo echo \"Hola Unsamer, \u00bftodo bien?\" y ahorrarme el tema de la variable. Tienen raz\u00f3n. Por ahora. \u00bfSe acuerdan de los parametros de los comandos de Bash? Al pasarle par\u00e1metros a un script de Bash estos se asignan automaticamente a variables llamadas $1 , $2 , etc. Editemos ahora nuestro c\u00f3digo anterior: C\u00f3digo C\u00f3digo con comentarios nombre = $1 echo \"Hola $nombre , \u00bftodo bien?\" # $1 es el primer parametro que se le pasa al script de Bash # Le estoy asignando el valor de una variable a otra variable. $1 sigue existiendo, pero no la uso m\u00e1s nombre = $1 # Podr\u00eda usar $1 directamente aca, pero as\u00ed se entiende mucho m\u00e1s lo que hace el c\u00f3digo al leerlo # (y para programas muy complicados esto es muy importante) echo \"Hola $nombre , \u00bftodo bien?\" Y ahora corran: bash SCRIPT \"NOMBRE\" Por si la versi\u00f3n gen\u00e9rica no queda claro, si el script se llamara saludo.sh y quiero conseguir el mismo resultado que antes habr\u00eda que correr: bash saludo.sh \"Unsamer\" Info Tecnicamente si estoy pasando solo una palabra las comillas no son necesarias, pero si el string que estoy pasando tiene un espacio tengo que ponerlas si o si. Hay bastante m\u00e1s para hablar de las variables . Existen muchos tipos m\u00e1s de variables, como booleanos (variable que es verdadera o falsa), arreglos (o vectores) y listas. Otros lenguajes de programaci\u00f3n hasta tienen variables m\u00e1s complejas que pueden almacenar tablas enteras. Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre las variables en Bash se puede ver en esta p\u00e1gina . Condicionales Las variables son importantes, pero gran parte de la programaci\u00f3n es controlar el \"flujo\" del programa, es decir, que un script haga algo m\u00e1s que simplemente ir de arriba a abajo ejecutando comandos. La primera herramienta que vamos a aprender para controlar el flujo del programa son los condicionales que permiten crear secciones de c\u00f3digo que se van a ejecutar solo si se cumple (o no se cumple) una condici\u00f3n. Por ejemplo: C\u00f3digo C\u00f3digo con comentarios numero = $1 echo \" $numero es un numero\" if (( $numero > 10 )) then echo \" $numero es mayor a 10\" fi # Igual que antes estoy agarrando un par\u00e1metro al correr el script numero = $1 echo \" $numero es un numero\" # *if* es la estructura m\u00e1s usada para condicionales. # Adentro de los dobles par\u00e9ntesis va la condici\u00f3n. # > es el comparador, o sea, estamos preguntando si $numero es mayor que 10 if (( $numero > 10 )) then # El codigo entre *then* y *fi* solo si ejecuta si la condici\u00f3n es verdad, de otra forma se saltea # Este codigo esta m\u00e1s a la derecha, o *indentado*. Esto se hace con tab y en la mayor\u00eda de los lenguajes # es solo para entender m\u00e1s f\u00e1cil el c\u00f3digo echo \" $numero es mayor a 10\" fi # *fi* indica donde termina el condicional Copien este c\u00f3digo a un script y prueben pasarle n\u00fameros menores y mayores a 10 a ver que pasa. Info Es importante remarcar que la condici\u00f3n del if (lo que en este caso se encuentra entre los corchetes) es b\u00e1sicamente una pregunta que puede tener solo una de dos respuestas posibles: S\u00ed (llamada en programaci\u00f3n Verdadero o True ) \u00f3 No (llamada en programaci\u00f3n Falso o False ) Como dije antes a un condicional se le puede poner tambi\u00e9n que pase algo cuando no es verdad, por ejemplo: C\u00f3digo C\u00f3digo con comentarios numero = $1 echo \" $numero es un numero\" if (( $numero > 10 )) then echo \" $numero es mayor a 10\" else echo \" $numero es menor o igual a 10\" fi numero = $1 echo \" $numero es un numero\" if (( $numero > 10 )) then # Ahora si la condici\u00f3n es verdad se va a ejecutar el c\u00f3digo entre *then* y *else* y luego va a # seguir a partir de *fi* echo \" $numero es mayor a 10\" else # El c\u00f3digo entre *else* y *fi* se ejecuta solo cuando la condici\u00f3n no es verdad echo \" $numero es menor o igual a 10\" fi Hay bastante m\u00e1s para hablar de los ifs . Hay muchos m\u00e1s comparadores y son diferentes si estoy comparando n\u00fameros o strings . Hay formas de poner m\u00e1s de una condici\u00f3n por if y hay otras estructuras como son los case que cumplen una funci\u00f3n similar. Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre los condicionales en Bash, incluyendo una lista m\u00e1s detallada de los comparadores, se puede ver en esta p\u00e1gina y en esta p\u00e1gina (en Bash las condiciones pueden estar rodeadas por par\u00e9ntesis o corchetes y en cada caso los comparadores se comportan diferente, ojo con esto). Ciclos Digamos que por alguna extra\u00f1a raz\u00f3n quieren imprimir los numeros del 1 al 10 en la consola, tendr\u00edan que hacer echo 1 , echo 2 , etc, hasta llegar a echo 10 . \u00bfQu\u00e9 pasa si ahora les pido del 1 al 100, o al 1000?. Por suerte existen los ciclos , que son estructuras que nos permiten repetir algo varias veces y al usar variables podemos hacer que cada vez sea ligeramente diferente a la anterior. C\u00f3digo C\u00f3digo con comentarios for (( i = 1 ; i< = 1000 ; i++ )) do echo $i done # *for* es una de las estructuras m\u00e1s usadas para hacer ciclos # *i* es el nombre de la variable que va a cambiar de valor en cada ciclo. Se le podria poner cualquier nombre a # \u00e9sta variable, por ejemplo *numero* en nuestro caso, pero es costumbre ponele *i* # i=1 indica que el primer valor de $i es 1 # i<=1000 indica que el ciclo se va a repetir mientras $i sea menor o igual a 1000 # i++ indica que al final de cada ciclo el valor de $i va a subir en 1 for (( i = 1 ; i< = 1000 ; i++ )) do # El c\u00f3digo entre *do* y *done* se va a ejecutar una vez para cada posible $i en el rango echo $i done Hay otra versi\u00f3n del for que comunmente se denomina for each . En este caso $i no representa n\u00fameros que aumentan, sino diferentes elementos en una lista. Por ejemplo: C\u00f3digo C\u00f3digo con comentarios for color in rojo amarillo verde do echo \"Este es el color $color \" done # Como ahora la variable son elementos de una lista le pongo el nombre *color* para que se sepa que es, # pero podr\u00eda ser *i* # Esta es una forma bastante mala de usar listas de elementos, donde la estoy declarando en el mismo *for*; # comunmente las listas existen de antes en el programa o las obtengo de un archivo o comando de Lubuntu for color in rojo amarillo verde do echo \"Este es el color $color \" done Hay bastante m\u00e1s para hablar de los ciclos . Se pueden hacer ciclos que aumenten de 2 en 2 o hacer ciclos que disminuyan. Hay otros dos tipos de ciclos comunmente den\u00f3minados while y until (tambien llamado do ) y hay formas de forzar salir del ciclo o pasar a la pr\u00f3xima iteraci\u00f3n con break y continue (tambien llamado next ). Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre los ciclos en Bash se puede ver en esta p\u00e1gina . Ejercicio 3. Programaci\u00f3n en Bash El objetivo de este ejercicio es hacer un script que: Use por lo menos un for y un if Recorra los n\u00fameros del 1 al 10 Por cada uno de esos n\u00fameros cree un archivo llamado archivo_NUMERO , d\u00f3nde hay que reemplazar NUMERO por el n\u00famero correspondiente (de 1 a 10) En los primeros 5 archivos ( archivo_1 a archivo_5 ) escriba el texto: Primera parte. Este es el archivo NUMERO. Donde hay que reemplazar NUMERO por el n\u00famero correspondiente (de 1 a 5) En los \u00faltimos 5 archivos ( archivo_6 a archivo_10 ) escriba el texto: Segunda parte. Este es el archivo NUMERO. Donde hay que reemplazar NUMERO por el n\u00famero correspondiente (de 6 a 10). Noten que ambas oraciones est\u00e1n en lineas diferentes Ahora que sabemos nuestro objetivo vayan a Documentos y creen una nueva carpeta donde vamos a trabajar llamada TP01_EJ3 . Dentro de ella creen un archivo vacio llamado crear_archivos.sh que va a ser nuestro script. Al momento de hacer programas complejos, especialmente en un lenguaje que reci\u00e9n aprenden, es recomendado ir por partes e ir probando en el medio. Unos posibles pasos a seguir son: Info La idea de hacerlo as\u00ed es ir probando de a poco si aparece algun error. \u00a1Prueben el script entre cada paso! Modifiquen el script para que cree un archivo llamado archivo_1 que adentro tenga el texto: Primera parte. Este es el archivo 1. Agreguen un for que vaya de 1 a 5 y cree los archivos archivo_1 a archivo_5 que adentro tengan el texto: Primera parte. Este es el archivo NUMERO. Donde hay que reemplazar NUMERO por el n\u00famero correspondiente (de 1 a 5). Expandan el for para que vaya de 1 a 10. Agreguen un if adentro del for que haga que los archivos se creen solo para los primeros 5 ciclos. Tip Aca les puede venir bien el comparador <= , que significa \"menor o igual\". Un ejemplo de <= seria: if (( $1 < = 7 )) Que en este caso es verdadero cuando el par\u00e1metro $1 es menor o igual a 7. Agreguen un else al if , recordando que los comandos adentro del else se van a ejecutar cuando la condici\u00f3n no sea verdadera. Asumiendo que usaron <= en la condici\u00f3n del if , modifiquen los comandos adentro del else para que en ese caso se creen los archivos archivo_6 a archivo_10 que adentro tengan el texto: Segunda parte. Este es el archivo NUMERO. Donde hay que reemplazar NUMERO por el n\u00famero correspondiente (de 6 a 10). \u00a1Y listo, deber\u00edan tener su programa andando! Bash: Tablas Lo ultimo que vamos a aprender hoy es un peque\u00f1o vistazo a como se pueden manipular tablas desde la consola de Lubuntu. Descarguen el archivo mtcars que se encuentra en los materiales del TP (boton al principio de todo) y ponganlo en Documentos . Esta tabla viene por defecto con el lenguaje de programaci\u00f3n R y nos va a servir para aprender como manipular tablas en Bash. Abran el archivo con Leafpad (doble click). Podemos ver que es una tabla en formato texto, donde la primera l\u00ednea es el encabezado o header de la tabla y en cada l\u00ed\u0144ea las columnas est\u00e1n separadas entre ellas con un Tab (a estos archivos se los conoce como TSV o \"Tab-Separated Values\"). Es bioinform\u00e1tica es muy com\u00fan querer seleccionar columnas espec\u00edficas en una tabla, o filtrar filas debido al valor de una de sus columnas; esto es lo que vamos a aprender a continuaci\u00f3n. Columnas de mtcars mtcars es una tabla que viene por defecto con el lenguaje de programaci\u00f3n R , sus columnas son: Nombre Descripci\u00f3n car_name Name of the car mpg Miles/(US) gallon cyl Number of cylinders disp Displacement (cu.in.) hp Gross horsepower drat Rear axle ratio wt Weight (1000 lbs) qsec 1/4 mile time vs Engine (0 = V-shaped, 1 = straight) am Transmission (0 = automatic, 1 = manual) gear Number of forward gears carb Number of carburetors AWK El comando awk (que recibe su nombre de las iniciales de los apellidos de las 3 personas que lo crearon) es uno de los comandos mas usados en Bash para manipular tablas por su gran flexibilidad, hasta el punto que es posible incorporar condicionales y ciclos dentro de \u00e9l. La forma m\u00e1s simple del comando es: awk -opciones 'instrucciones' ARCHIVO_TABLA Donde ARCHIVO_TABLA es el archivo que contiene a la tabla e instrucciones es que hacer con ese archivo una vez que se abra (las instrucciones siempre tienen que estar delimitadas por comillas simples, o ' ). Colocando a nuestra terminal en Documentos podemos correr: awk -F \"\\t\" '{print}' mtcars Donde -F es la opci\u00f3n que le dice a awk cual es el caracter que separa las diferentes columnas (en este caso es \\t , que es el s\u00edmbolo de Tab ) y {print} es la instrucci\u00f3n que simplemente dice que imprima en pantalla la tabla. Lo importante de awk es que nos permite trabajar con columnas individuales. Por ejemplo si ponemos: awk -F \"\\t\" '{print $1}' mtcars Vemos que awk imprime solo la primera columna, que en este caso es el nombre de los autos. Podemos asumir entonces que cada columna se puede referir con $1 , $2 , etc. Probemos imprimir muchas columnas corriendo: awk -F \"\\t\" '{print $1 $3 $5}' mtcars \u00bfQu\u00e9 ven que pasa aca? Debido a como funciona print , las diferentes columnas se imprimeron una pegada a la otra sin dejar espacios. Si quisieramos imprimir las columnas separadas con Tab como la tabla original tenemos que hacer: awk -F \"\\t\" '{print $1 \"\\t\" $3 \"\\t\" $5}' mtcars Ahora bien, una actividad normal cuando se tienen tablas con muchos datos es filtrar mis datos por alguna columna, o dicho de otra forma, usar condicionales. Un ejemplo de esto en awk seria: awk -F \"\\t\" '{if ($3 == 6) {print}}' mtcars \u00bfQu\u00e9 les parece que hace ese comando? Piensen que estan viendo una estructura de if que no vieron antes, pero aun as\u00ed probablemente puedan inferir que va a hacer el comando pensando en como funcionaba el if de Bash que aprendimos arriba. Esto es super normal en la programaci\u00f3n, donde la estructura exacta cambia, pero la l\u00f3gica detr\u00e1s se mantiene constante. Entonces, aca le estan diciendo a awk que imprima en la pantalla todas las filas que tengan un valor de 6 en la columna 3 (que si se fijan es cyl , o el n\u00famero de cilindros). Como siempre hay mucho m\u00e1s para decir sobre awk , pero por hoy estamos bien. Sepan sin embargo que awk tiene su propio grep y su propio for , que se pueden declarar variables dentro de \u00e9l y que tiene hasta una lista de comandos propios. Pueden ver mucha m\u00e1s informaci\u00f3n de awk en esta p\u00e1gina . Ejercicio Adicional 1. Programaci\u00f3n en Bash v2 Info Algunas guias van a tener ejercicios adicionales, que son ejercicios que pueden hacer si quieren practicar m\u00e1s el tema, pero no son obligatorios. Estos ejercicios pueden llegar a ser un poco m\u00e1s complicados que los ejercicios de la gu\u00eda. El objetivo de este Ejercicio va a ser hacer un script que: Reciba un n\u00famero por consola (vamos a asumir que dicho n\u00famero va a ser siempre un n\u00famero entero entre 1 y 1000) Recorra todos los n\u00fameros entre 1 y el n\u00famero que recibi\u00f3 por consola Para cada uno de esos n\u00fameros vea si es par Imprima los n\u00fameros pares por consola Dos cosas que van a necesitar para hacer esto son: # El operador % calcula el resto entre 2 n\u00fameros # En este caso $resto va a contener el resto de dividir 5 por 2 (que es 1) # Una forma muy usada en programac\u00edon para ver si un n\u00famero es par es ver si su resto al dividirlo por 2 es 0 # Los par\u00e9ntesis y signo $ bordeando a la operaci\u00f3n son necesarios para que funcione bien en Bash resto = $(( 5 % 2 )) # == es el comparador para igualdad usado en los *ifs* # Va a ser verdadero solo si lo de la izquierda es identico a lo de la derecha. if (( $1 == 2 )) Para hacer este ejercicio pueden usar como base el c\u00f3digo creado en el Ejercicio 3 que ambos tienen una estructura general bastante similar. Bibliograf\u00eda Consola Comando man","title":"TP 1 - Linux"},{"location":"practicos/TP01_Linux/#tp-1-introduccion-a-lubuntu-bash-y-programacion","text":"Materiales","title":"data-toc-label"},{"location":"practicos/TP01_Linux/#recursos-online","text":"Command-line bootcamp Programando en Bash Comando AWK Consola de Linux online (y otra ) Compilador de Bash online (y otro )","title":"Recursos Online"},{"location":"practicos/TP01_Linux/#objetivos","text":"Familiarizarse un poco con Lubuntu y su estructura de directorios Familiarizarse con el uso b\u00e1sico de los comandos de Bash Familiarizarse con los bloques l\u00f3gicos b\u00e1sicos de la programaci\u00f3n","title":"Objetivos"},{"location":"practicos/TP01_Linux/#introduccion-al-tema","text":"En este trabajo pr\u00e1ctico vamos a aprender a usar la l\u00ednea de comando de Lubuntu (tambi\u00e9n referida como terminal , consola o shell ). Para muchos de nosotros, que estamos acostumbrados a la interfaz gr\u00e1fica de sistemas operativos como los de Windows o GUI (por las siglas en ingles: Graphic User Interface ), la linea de comando puede parecer un desaf\u00edo, pero con pr\u00e1ctica y algo de paciencia descubrir\u00e1n que puede resultar amena. Su uso tiene dos ventajas destacables para nuestro campo: Nos permitir\u00e1 trabajar en entornos o programas sin interfaz gr\u00e1fica (GUI) Mediante el uso de programas o scripts , nos permitir\u00e1 automatizar procesos, acelerando el trabajo y minimizando la cantidad de errores que podemos cometer con tareas repetitivas","title":"Introducci\u00f3n al Tema"},{"location":"practicos/TP01_Linux/#unix-linux-ubuntu-lubuntu","text":"Dependiendo que tan familiares esten con Linux, todos estos nombres pueden resultar un poco confusos. Vamos por partes: Unix es un sistema operativo creado en 1969 por dos programadores estadounidenses que trabajaban para Bell Labs, una compan\u00eda de investigaci\u00f3n y desarrollo cient\u00edfico que en su momento era propiedad de AT&T (compa\u00f1ia estadounidense de tel\u00e9fonos). Al ser un sistema operativo portable, multitarea y multiusuario se hizo r\u00e1pidamente popular y se difundi\u00f3 por instituciones acad\u00e9micas y empresas Debido a su popularidad, otros programadores quisieron hacer sus propias versiones de sistemas operativos basados en Unix, pero como sus sistemas operativos ten\u00edan c\u00f3digo original de Unix, AT&T los demand\u00f3, paralizando esta tendenc\u00eda En 1983 se crea el proyecto GNU con el objetivo de crear un sistema operativo similar a Unix, pero gratis y de c\u00f3digo abierto. GNU significa \"GNU's Not Unix\" (es un anagrama recursivo, los programadores se divierten barato). Hacia el fin de los 80s el proyecto ya ten\u00eda casi todos los programas que necesitaba, pero les faltaba conseguir un buen kernel (principal responsable de facilitar a los distintos programas acceso seguro al hardware de la computadora) En 1991, Linus Torvalds empieza a crear lo que terminar\u00eda siendo Linux , un sistema operativo con su propio kernel que usaba muchas de los programas del proyecto GNU. Esta versi\u00f3n se volvi\u00f3 r\u00e1pidamente la m\u00e1s popular de todas las versiones de GNU, llevando a que en 1993 se creara el Debian Project , un proyecto comunal con el objetivo de mejorar una distrubuci\u00f3n de Linux que denominaron Debian GNU/Linux (tambi\u00e9n llamada simplemente Debian ). Ubuntu es una distribuci\u00f3n de Linux creada en 2004 basada en Debian. Al d\u00eda de la fecha es la distrubuci\u00f3n m\u00e1s popular de Linux con m\u00e1s del 50% de los usuarios. Lubuntu es una distribuci\u00f3n de Linux creada en 2009 basada Ubuntu. Es bastante similar a Ubuntu en todo lo que es consola, pero tiene una interfaz gr\u00e1fica que consume menos recursos, haciendolo ideal para maquinas m\u00e1s viejas (o en nuestro caso, maquinas virtuales que pesen lo menos posible).","title":"\u00bfUnix? \u00bfLinux? \u00bfLubuntu?"},{"location":"practicos/TP01_Linux/#estructura-de-directorios-de-lubuntu","text":"La organizaci\u00f3n de archivos en Ubuntu y Lubuntu es bastante diferente a la de Windows. Si bien no vamos a detallar completamente toda la estructura y que es cada carpeta (porque el 95% no lo van a usar en esta materia), es importante tener una idea de lo b\u00e1sico: / Carpeta raiz, o root . Contiene al resto de las carpetas /etc Configuraciones del sistema para todos los usuarios (mucho cuidado al tocar) /home Ubicaci\u00f3n de los directorios de los diferentes usuarios (o en este caso el \u00fanico usuario) /home/ibioinfo Directorio del usuario ibioinfo . Es el lugar donde van a trabajar la mayor\u00eda del tiempo (incluye tanto el Escritorio como Documentos) y donde se abre por defecto la terminal (m\u00e1s sobre esto en un ratito). Comunmente referida como home directory o home del usuario ibioinfo /media Si fuera una computadora normal (no VM) aca aparecer\u00edan los pendrives. En nuestro caso aca aparecen por defecto las carpetas compartidas con la PC host /tmp Ubicaci\u00f3n de los archivos temporales de los programas /var Ubicaci\u00f3n de los archivos variables de los programas, como logs, bases de datos, paginas webs, etc /var/log Probablemente la subcarpeta m\u00e1s usada de /var . Contiene los logs de los programas (que a veces es la \u00fanica forma de saber porque algo no anduvo) Esto es simplemente un vistazo r\u00e1pido. Si quieren la lista completa de subdirectorios de Lubuntu la pueden encontrar en esta p\u00e1gina , pero tengan en cuenta que tocar cualquier cosa fuera de /home conlleva la posibilidad de arruinar la computadora. En esta materia vamos a usar principalmente /home y /media .","title":"Estructura de directorios"},{"location":"practicos/TP01_Linux/#linea-de-comando","text":"Como ya dijimos en la introducci\u00f3n la l\u00ednea de comando tiene varios nombres, y en esta guia nos vamos a referir a ella como terminal o consola . Hay varias formas de abrir la terminal: Desde cualquier lado: Ctrl + Alt + T Desde cualquier lado: Inicio (menu de abajo a la izquierda) Herramientas del sistema LXterminal Desde afuera de una carpeta: Boton derecho en la carpeta Abrir en el terminal Desde adentro de una carpeta: Herramientas Abrir la carpeta actual en un terminal (o apretar F4 ) La terminal funciona como un explorador de archivos que se mueve entre las carpetas. Los primeros dos m\u00e9todos van a abrir la terminal en /home/ibioinfo , mientras que los \u00faltimos dos m\u00e9todos van a abrir la terminal en la carpeta elegida. Si en algun momento les decimos que abran la terminal y no aclaramos otra cosa nos referimos a abrirla en /home/ibioinfo . Abran la terminal en /home/ibioinfo y deberian ver algo as\u00ed: ibioinfo@ibioinfo-VirtualBox:~$ Donde ibioinfo es el nombre del usuario actual e ibioinfo-VirtualBox el nombre de la computadora (que justo en este caso son similares, pero no es necesario). El ~ despu\u00e9s de los dos puntos (conocido como \"virgulilla\", \"t\u00edlde\" o \"cosito de la \u00f1\") parece ser parte de la terminal, pero en realidad est\u00e1 indicando la carpeta en la que se encuentra en este momento. Como cada usuario trabaja mas que nada en su carpeta, Lubuntu le asigna el s\u00edmbolo ~ a esa carpeta para simplificar los directorios que aparecen en la terminal. En nuestro caso ~ equivale a /home/ibioinfo y puede ser que nos refiramos a esa carpeta como su home directory o simplemente su home . Info Aclaraciones por si son fan\u00e1ticos de los atajos de teclado: Para copiar texto en la terminal hay que usar Ctrl + Shift + C . En en resto de Lubuntu es normal ( Ctrl + C ). Para pegar texto en la terminal hay que usar Ctrl + Shift + V . En en resto de Lubuntu es normal ( Ctrl + V ). De apretar Ctrl + C en la terminal le estan diciendo que corte forzosamente el programa que est\u00e1 corriendo. Si bien hay que tener cuidado con no cortar un proceso importante a la mitad, este atajo del teclado es util si un programa se te qued\u00f3 colgado o similar.","title":"L\u00ednea de comando"},{"location":"practicos/TP01_Linux/#bash-ubicarse-en-la-terminal","text":"La terminal acepta una variedad de comandos en lenguaje Bash , que es el lenguaje de la terminal de GNU. El formato general de los comandos es: comando -opciones parametro1 parametro2 etc Donde comando es el nombre del programa a correr, opciones son comunmente una o m\u00e1s letras luego de un gui\u00f3n que indican alguna modificaci\u00f3n a las opciones por defecto del programa, y los diferentes parametros son cosas que necesita el programa para correr, como puede ser un archivo que esta leyendo. Todo esto va a ir quedando m\u00e1s claro con los diferentes ejemplos.","title":"Bash: Ubicarse en la terminal"},{"location":"practicos/TP01_Linux/#usted-esta-aqui","text":"Al ser la terminal b\u00e1sicamente un explorador de archivos, es necesario saber en que carpeta estoy y que hay adentro de dicha carpeta. pwd es un comando que imprime el directorio actual en la terminal ( P rint W orking D irectory). Pruebenlo a ver si ~ era realmente /home/ibioinfo : pwd Bien, ahora que ganamos su confianza, vean que hay adentro de esa carpeta usando ls : ls Si bien por ahora todo lo que ven son carpetas azules, tengan en cuenta que ls va a colorear diferentes tipos de archivos (y de carpetas) de diferentes colores. Este comando es una buena oportunidad de entender un poco mas sobre opciones y parametros . Por defecto ls lista los archivos de la carpeta actual, pero de darle un par\u00e1metro muestra los de dicha carpeta. Prueben correr lo siguiente: ls /etc/perl/Net En este caso est\u00e1n viendo los contenidos de una carpeta diferente a donde estamos parados en la terminal. Si yo quisiera mas informaci\u00f3n sobre los archivos que se encuentran dentro de esta carpeta puedo hacer: Tip El pr\u00f3ximo comando es muy parecido al anterior. Pueden usar Up y Down en su terminal para navegar por los ultimos comandos utilizados y modificar lo necesario. ls -l /etc/perl/Net Donde la opcion -l agrega informaci\u00f3n sobre los permisos del archivo (quien puede leerlo o modificarlo). Con un poco de suerte esta es la primera y ultima vez en toda la materia que vamos a hablar de los permisos de Lubuntu (y de como a veces dan dolores de cabeza). Info La lista completa de las opciones para cada comando se puede ver con el comando man (de manual ). En este caso ser\u00eda man ls .","title":"Usted est\u00e1 aqu\u00ed"},{"location":"practicos/TP01_Linux/#moverse-entre-las-carpetas","text":"Ahora que ya saben donde estan y que carpetas hay adentro es importante saber como moverse entre ellas. Esto se hace principalmente con el comando cd . Asegurense que la terminal esta en su home y usen ls para ver nuevamente la lista de carpetas dentro. Primero vamos a la carpeta Escritorio y vemos que archivos hay adentro, para eso hacer: Tip Tab funciona como autocompletar en la consola. Al escribir el pr\u00f3ximo comando prueben escribir solo cd Es y apretar Tab cd Escritorio Ahora veran que la parte de la izquierda de la terminal cambio a: ibioinfo@ibioinfo-VirtualBox:~/Escritorio$ Indicando que estan en /home/ibioinfo/Escritorio . Usen el comando adecuado para ver que archivos hay adentro de esta carpeta. Ahora quiero volver a su home y para eso escribo: cd .. Vean ahora en que carpeta est\u00e1n. En todo lo que es Ubuntu y Lubuntu .. significa \"una carpeta para arriba\". \u00bfQu\u00e9 pasa entonces si estan en /home/ibioinfo/Escritorio/TP01/Version3/Intento2/Edicion1 y quieren volver a su home ? \u00bfTienen que escribir cd .. 5 veces? Tecnicamente funciona, pero por defecto el comando cd te lleva a tu home si no le das ningun par\u00e1metro. cd","title":"Moverse entre las carpetas"},{"location":"practicos/TP01_Linux/#paths-relativos-y-absolutos","text":"Cuando corrimos ls /etc/perl/Net estaban ubicados en su home ( /home/ibioinfo ) y si vemos las carpetas dentro de home resulta que no existe ninguna llamada /etc . \u00bfD\u00f3nde est\u00e1 la carpeta /etc en relaci\u00f3n a /home/ibioinfo ? (ver Estructura de directorio de Lubuntu arriba si no se acuerdan) \u00bfC\u00f3mo pudimos acceder a /etc/perl/Net si la terminal estaba ubicada en una carpeta sin ninguna relaci\u00f3n? La respuesta a todo esto son los paths relativos y absolutos:","title":"Paths relativos y absolutos"},{"location":"practicos/TP01_Linux/#paths-absolutos","text":"El path /etc/perl/Net es lo que se llama un path absoluto ; no importa donde est\u00e9n en la terminal en ese momento, /etc/perl/Net va a siempre apuntar al mismo lugar y el comando ls /etc/perl/Net va a siempre andar bien. Una forma f\u00e1cil de identificar paths absolutos es que siempre empiezan en el root o / . Recuerden que ~ apunta a /home/ibioinfo , y por lo tanto el comando cd ~/Escritorio est\u00e1 usando un path absoluto, ya que sin importar de donde se use va a funcionar y va a ir a /home/ibioinfo/Escritorio .","title":"Paths absolutos"},{"location":"practicos/TP01_Linux/#paths-relativos","text":"Ahora bien, cuando nosotros estabamos ubicados en home y corrimos cd Escritorio pudimos entrar a /home/ibioinfo/Escritorio , pero si volvieramos a correr cd Escritorio el comando no funcionar\u00eda, ya que no existe la carpeta /home/ibioinfo/Escritorio/Escritorio . Esto se debe a que en este caso Escritorio es un path relativo a la ubicaci\u00f3n actual de la terminal. Otra forma de escribir paths relativos en Ubuntu es empezar con . , simbolo que indica \"la carpeta actual\". Volviendo al ejemplo anterior, es equivalente escribir cd Escritorio o cd ./Escritorio . Otro caso de path relativo que ya vimos es cd .. , donde apunta a la \"carpeta de arriba\" de la posici\u00f3n actual de la terminal. Ambos tipos de paths tienen sus ventajas y desventajas. Los paths absolutos tienen la ventaja de funcionar siempre, pero al usar toda la estructura toman m\u00e1s tiempo de escribir y son mas suceptibles a cambios de directorios (si muevo un archivo de lugar tengo que reescribir el comando). Por otro lado los paths relativos son mucho m\u00e1s r\u00e1pidos de escribir y en muchos casos funcionan en diferentes ubicaciones (o computadoras), pero al depender de la ubicaci\u00f3n de la terminal esto puede causar problemas si pienso que estoy en una carpeta pero estoy realmente en otra. En esta cursada vamos a usar ambos para diferentes casos.","title":"Paths relativos"},{"location":"practicos/TP01_Linux/#ejercicio-1-ubicarse-en-la-terminal","text":"Identifique cual o cuales de los siguientes comandos te llevar\u00edan desde cualquier carpeta al home del usuario ibioinfo . cd ~ cd home/ibioinfo cd home / ibioinfo cd / home / ibioinfo cd /home/ibioinfo cd /ibioinfo/home cd ././ibioinfo cd ./home/ibioinfo \u00bfCambiarian la respuesta en algunos de los puntos anteriores si el usuario logueado actualmente en la computadora no es ibioinfo ? \u00bfPor qu\u00e9? Identifique en la siguiente lista cuales paths son paths relativos : /var/temp/tom_jerry var/temp/tom_jerry /home/tom/Documentos/catfood.png ../../jerry/Documentos/cheese.png ./Videos/Capitulos/ ~/Videos/Capitulos/ ./Descargas/tom_jerry_cap1.torrent /home/tom/Descargas/tom_jerry_cap1.torrent","title":"Ejercicio 1"},{"location":"practicos/TP01_Linux/#bash-crear-y-eliminar","text":"Todo lo que es crear, copiar, mover y eliminar archivos y directorios se puede hacer usando la interfaz gr\u00e1fica como lo har\u00edan en cualquier otro sistema operativo, sin embargo hay situaciones (por ejemplo dentro de un script ) donde es necesario hacerlo mediante la consola. Si bien por ahora les vamos a pedir que usen los siguientes comandos para pr\u00e1cticarlos, en el d\u00eda a d\u00eda hagan lo que les sea m\u00e1s c\u00f3modo.","title":"Bash: Crear y eliminar"},{"location":"practicos/TP01_Linux/#crear-y-eliminar-directorios","text":"Los directorios se pueden crear con: mkdir FOLDER Info En el resto de la guia van a aparecer ciertas palabras en may\u00fascula en los c\u00f3digos, como por ejemplo FOLDER . Estas palabras son variables o placeholders que tienen que ser reemplazadas por lo que corresponda. Donde FOLDER es un path absoluto o relativo con el nombre de la carpeta. Prueben ir en su terminal a /home/ibioinfo/Documentos y usar el comando: mkdir testfolder Y vean si efectivamente apareci\u00f3 una carpeta nueva. Luego usen el comando de nuevo a ver que pasa. Para eliminar directorios se puede usar: rmdir FOLDER Por defecto este comando solo puede eliminar directorios vacios (lo cual puede no ser muy util, pero a la vez es seguro). Usen el comando anterior y borren la carpeta que acaban de crear (reemplacen FOLDER por lo que corresponda). Prueben correr el comando una vez m\u00e1s a ver que pasa. Tip muy importante Este es un buen momento para hablar de que nombres ponerles a las cosas que uno crea un Lubuntu. Si bien cualquier nombre funciona en un principio, por un tema de compatibilidad entre los diferentes programas que pueden llegar a usar se recomienda: Muy recomendado: No usar comillas dobles, simples o ap\u00f3strofes Recomendado: No usar espacios, par\u00e9ntesis, \u00d1, acentos, di\u00e9resis u otros diacr\u00edticos (el espacio comunmente se remplaza por un gui\u00f3n o gui\u00f3n bajo)","title":"Crear y eliminar directorios"},{"location":"practicos/TP01_Linux/#crear-y-eliminar-archivos","text":"Hay varias formas de crear archivos en Lubuntu y la mas simple es touch ARCHIVO , que crea un archivo de texto vacio donde ARCHIVO es el nombre del archivo (que puede incluir un path antes). Para entender lo que quiero decir vayan a su home y corran: touch Documentos/testfile Aca estoy usando un path relativo para crear el archivo. Se van a dar cuenta que el archivo no tiene extensi\u00f3n (por ejemplo .txt ). En Lubuntu van a ver muchos archivos de texto sin extensi\u00f3n, pero se la pueden agregar sin problema si quieren. Entren a Documentos y vean si el archivo realmente existe. Lo que le vamos a ense\u00f1ar a continuaci\u00f3n es probablemente uno de los comandos m\u00e1s peligrosos de Bash si se usa incorrectamente. rm es el comando usado para eliminar archivos (o carpetas, o discos enteros) y es la base de cientos de historias en internet de como alguien se qued\u00f3 sin trabajo. El comando se usa: rm ARCHIVO Donde ARCHIVO es el archivo a eliminar. rm no les va a pedir confirmaci\u00f3n y el archivo va a ser borrado permanentemente (si borran archivos desde la interfaz gr\u00e1fica s\u00ed hay confirmaci\u00f3n y s\u00ed van a la papelera). Entonces, con cuidado, asegurense que estan en Documentos y borren el archivo testfile . Danger \u00bfSe entendi\u00f3 que hay que tener cuidado con rm ? \u00bfSi? Buenisimo.","title":"Crear y eliminar archivos"},{"location":"practicos/TP01_Linux/#mover-y-copiar-archivos-y-carpetas","text":"Adentro de Documentos creen una carpeta llamada testfolder2 y dos archivos de texto vacio, uno llamado testfile_mv y otro testfile_cp . Nuestro objetivo va a ser mover testfile_mv a la carpeta testfolder2 y copiar testfile_cp a la misma carpeta. Los archivos se mueven con mv y se copian con cp y ambos tienen un formato similar que es mv ARCHIVO_ORIGEN FOLDER_DESTINO Donde en este caso ARCHIVO_ORIGEN es el archivo a mover y FOLDER_DESTINO el path a donde moverlo. Prueben entonces mover testfile_mv y copiar testfile_cp adentro de la carpeta testfolder2 . Tip Usando la opci\u00f3n -i al comando, les va a pedir confirmaci\u00f3n si el archivo de destino ya existe. Recuerden que pueden usar man mv o man cp para ver mas opciones. Estos dos comandos tambi\u00e9n pueden ser usados como: mv ARCHIVO_ORIGEN ARCHIVO_DESTINO En este caso ARCHIVO_DESTINO no es una carpeta, sino un archivo adentro del FOLDER_DESTINO , lo que permite renombrar el ARCHIVO_ORIGEN al copiarlo / moverlo. Para que se entienda mejor este uso, ubiquens\u00e9 en Documentos y corran: cp testfile_cp testfolder2/testfile_cp_nuevo Con lo cual acabo de copiar testfile_cp de nuevo a la carpeta testfolder2 , pero ahora con otro nombre. Interesantemente, usar mv de esta manera es la forma de Ubuntu de renombrar archivos desde la terminal. Prueben entrar a testfolder2 y corran: mv testfile_cp_nuevo testfile_cp_otroNombre Y vean que pas\u00f3. Una vez que todo haya funcionado bien, usen rm para eliminar todos los testfile uno a uno y luego usen rmdir para eliminar testfolder2 . Ambos comandos funcionan tambi\u00e9n para copiar, mover y renombrar carpetas, en cuyo caso el formato es: mv FOLDER_ORIGEN FOLDER_DESTINO Danger Hay que ser cuidadosos al usar mv y cp ya que si el archivo de destino ya existe lo van a sobreescribir sin preguntar antes. A ambos comandos se le puede agregar la opci\u00f3n -i para que pregunte antes de sobreescribir de ya existir el archivo de destino.","title":"Mover y copiar"},{"location":"practicos/TP01_Linux/#bash-archivos-de-texto","text":"","title":"Bash: Archivos de texto"},{"location":"practicos/TP01_Linux/#escribir-archivos-de-texto","text":"En Lubuntu hay varias formas de escribir en archivos de texto, pero una de las m\u00e1s \u00fatiles para nosotros va a ser el > quien redirige la salida de informaci\u00f3n de la consola. Se usa: comando -opciones parametro1 parametro2 > ARCHIVO_DESTINO Donde lo de la izquierda de > es el comando como lo correr\u00edas normalmente y ARCHIVO_DESTINO es un archivo donde va a ser guardada la salida de ese comando (lo que normalmente ver\u00edan en la consola). Para entender un poco m\u00e1s, vayan a su home y corran: ls -l > Documentos/output_de_ls Ver\u00e1n que en un principio parece que no paso nada. Entren ahora a Documentos y van a ver que hay un nuevo archivo con el nombre output_de_ls . Vamos a abir el archivo usando Leafpad , el editor de texto de la interfaz \u01f5r\u00e1fica de Lubuntu. Asegurandose que estan Documentos , en la consola escriban: leafpad output_de_ls Van a ver que se abre el editor de texto de igual forma que si ubieran hecho doble click en el \u00edcono en el explorador de archivos de la GUI. Puede ser que aparezca un warning o advertencia en la consola, pero la podemos ignorar. Tip Por defecto Leafpad usa una fuente llamada \"Ubuntu\" , que si bien sirve para escribir cuentos, nos va a dar problemas al momento de ver ciertos archivos que vamos a usar en esta materia. En Leafpad vayan a Opciones Tipograf\u00eda... , seleccionen la fuente \"Ubuntu Mono\" y aprieten Aceptar . Las fuentes que tienen Mono en su nombre estan indicando que son monoespaciadas, o sea, que todos sus caracteres tienen el mismo ancho. Esto es ideal para cuando se quieren ver tablas o alineamientos con Leafpad , cosa que vamos a hacer bastante en esta materia. Leafpad funciona como un editor de texto bastante normal. Agreguen una nueva linea abajo de todo (con cualquier texto) y guarden el archivo. Al momento sabemos como guardar en un archivo de texto cualquier salida de un comando de Lubuntu, pero, \u00bfc\u00f3mo hacemos para poner lo que nosotros queremos en un archivo de texto? Simple, \u00a1con otro comando de Lubuntu! El comando echo hace lo que su nombre indica y devuelve por la terminal el texto que le pases. Prueben escribir echo TEXTO , donde TEXTO es cualquier oraci\u00f3n, por ejemplo: echo Probando, uno, dos, tres Tal vez ya se dieron cuenta, pero combinando echo con > podemos escribir nuestros propios archivos de texto desde la terminal. Asegurandose que estan adentro de Documentos , corran: echo Esta es la primera linea del documento > mi_documento Confirmen que se escribi\u00f3 el archivo y que tiene el texto adentro. \u00bfQu\u00e9 piensan que pasa si ahora corr\u00f3 el siguiente comando? Pruebenl\u00f3: echo Quiero agregar otra linea al documento > mi_documento Usen Leafpad para leer el documento. Van a ver que la primera linea que agregamos desapareci\u00f3. Esto es porque cada uso de > sobreescribe el archivo. Si queremos agregar otra linea a un documento que ya tiene informaci\u00f3n tenemos que usar el comando >> quien agrega el texto al archivo en una nueva linea al final sin modificar el contenido anterior. As\u00ed que ahora que sabemos esto podemos correr estos dos comandos: echo Esta es la primera linea del documento > mi_documento echo Esta es la segunda linea del documento >> mi_documento Y vean con Leafpad si funcion\u00f3 como quer\u00edamos. Danger Hay que ser cuidadosos al usar > ya que si el archivo de destino ya existe lo va a sobreescribir sin preguntar antes.","title":"Escribir archivos de texto"},{"location":"practicos/TP01_Linux/#leer-archivos-de-texto","text":"Qu\u00e9 comando usar al leer archivos de texto en la consola depende mucho de que tan largo es el archivo y que me interesa de \u00e9l: \u00bfTiene solo pocas lineas de texto? cat va a abrir el archivo y escribirlo todo en la terminal. \u00bfTiene muchas lineas de texto y quiero ver las primeras p\u00e1ginas a ver de que se trata? less va a abrir el archivo y mostrar solo el texto que entra en la terminal. Aprentando Space pasa a la pr\u00f3xima p\u00e1gina y apretando Q deja de leerlo. \u00bfTiene muchas lineas de texto y quiero ver solo las primeras lineas? head te muestra las primeras 10 lineas del archivo. Se puede especificar la cantidad de lineas agregando una opci\u00f3n, por ejemplo, head -3 muestra solo las primeras 3 l\u00edneas. \u00bfTiene muchas lineas de texto y quiero ver solo las \u00faltimas lineas? tail te muestra las \u00faltimas 10 l\u00edneas del archivo. Este n\u00famero se puede cambiar de la misma forma que para head . \u00bfNo saben que tan largo es un archivo dado? Pueden averiguarlo con el comando wc , que devuelve el numero de lineas, palabras y letras (en ese orden) en el archivo. De pasarle la opci\u00f3n -l , el comando devuelve solo el n\u00famero de lineas. Todos estos funcionan de la forma: comando ARCHIVO Usando el archivo martin_fierro que se encuentra en los materiales del TP (boton al principio de todo), prueben los 5 comandos anteriores.","title":"Leer archivos de texto"},{"location":"practicos/TP01_Linux/#buscar-palabras-en-archivos-de-texto","text":"Va a ser com\u00fan cuando trabajemos con tablas que nos interese encontrar filas con cierto valor y una forma r\u00e1pida de hacer eso es usar grep , comando al que le pasas una palabra o patr\u00f3n y busca filas dentro de un archivo que contengan dicha palabra o patr\u00f3n. En formato general el comando es: grep PALABRA ARCHIVO Usando el archivo martin_fierro con en que trabajamos en la secci\u00f3n anterior podemos correr: grep cantar martin_fierro Y vamos a ver todas las lineas del documento donde aparece la palabra \"cantar\". Hay mucho para hablar sobre grep , pero por ahora lo que nos va a importar es: La opci\u00f3n -v devuelve las l\u00edneas que no contienen PALABRA La opci\u00f3n -c devuelve el n\u00famero de l\u00edneas que contienen PALABRA Es posible pasarle varias opciones a un programa. De hacer grep -v -c voy a estar contando el n\u00famero de l\u00edneas que no contengan PALABRA (el orden de las opciones no afecta el comportamiento) Info Mencion\u00e9 antes que grep tambi\u00e9n funciona con patrones, quienes son conocidos como Expresiones Regulares, o RegEx . Como este es un tema complejo y ya tenemos bastante que procesar no vamos a profundizar mas sobre ellos en este momento, pero explicaremos cualquier patr\u00f3n que usemos en la materia cuando aparezca.","title":"Buscar palabras"},{"location":"practicos/TP01_Linux/#combinar-comandos","text":"En Bash es posible combinar comandos, lo que quiere decir pasarle la salida de un comando directamente como entrada a otro comando. Esto se hace dividiendo los diferentes comandos con | (o pipe ). Para entender un poco mejor veamos un ejemplo. Digamos que quiero ver las cuales de las primeras 10 lineas del archivo martin_fierro contienen la palabra \"cantar\". Para esto tengo que hacer: head -10 martin_fierro | grep cantar Fijens\u00e9 que en este caso parecer\u00eda que a grep no le estoy pasando ningun ARCHIVO , pero lo que pasa es que va usar como entrada la salida de head . De esta forma se puede concatenar cualquier cantidad de comandos que seran ejecutados de izquierda a derecha.","title":"Combinar comandos"},{"location":"practicos/TP01_Linux/#ejercicio-2-archivos-de-texto","text":"Para este ejercicio vamos a seguir usando el archivo martin_fierro . \u00bfCu\u00e1ntas l\u00edneas tiene el archivo? \u00bfCu\u00e1ntas l\u00edneas contienen la palabra \"cantar\"? \u00bfCu\u00e1ntas l\u00edneas no contienen la palabra \"guitarra\"? Cree otro archivo de texto llamado martin_fierro_sinA con las l\u00edneas del archivo martin_fierro que no tengan la letra \"a\". Sin borrar el contenido y usando la consola, agregue una l\u00ednea al final de martin_fierro_sinA que indique el autor del Martin Fierro (Jos\u00e9 Hern\u00e1ndez). Volviendo al archivo original, \u00bfcu\u00e1ntas l\u00edneas no contienen la letra \"o\" y s\u00ed contienen la letra \"i\"? (Tip: use | para encadenar comandos)","title":"Ejercicio 2"},{"location":"practicos/TP01_Linux/#bash-programacion-y-scripts","text":"Info A continuaci\u00f3n vamos a ver una peque\u00f1a introducci\u00f3n a la programaci\u00f3n usando Bash como lenguaje. El objetivo de lo que sigue no es aprenderse de memoria las estructuras y si hay que poner una llave aca o dejar un espacio all\u00e1, sino entender la l\u00f3gica detr\u00e1s de la programaci\u00f3n y como se pueden usar variables, condicionales y ciclos para obtener el resultado deseado.","title":"Bash: Programaci\u00f3n y Scripts"},{"location":"practicos/TP01_Linux/#scripts","text":"Los scripts de Bash son b\u00e1sicamente una lista de muchos de los comandos que nosotros corrimos en la terminal, pero escritos dentro de un archivo. Al ejecutar ese archivo todos los comandos dentro de \u00e9l ser\u00e1n corridos uno a uno de arriba a abajo. Para simplificar un poco la tarea y enfocarnos en lo que importa en esta secci\u00f3n, vamos a utilizar la interfaz gr\u00e1fica de Lubuntu. Vayan a Documentos y creen un archivo llamado primer_programa.sh (Boton derecho Crear nuevo... Archivo vac\u00edo). Luego abran el archivo en Leafpad (doble click) y escriban lo siguiente: echo \"----------------\" echo \"| Hello world! |\" echo \"----------------\" Ahora salven el archivo, abran la terminal en esa carpeta ( F4 ) y vamos a ejecutar el script con: bash primer_programa.sh \u00a1Felicidades, ya pueden decir que son programadores! Como pudieron observar, los scripts de Bash se corren con el comando bash SCRIPT y al hacerlo se ejecutaron los 3 comandos echo en el orden que estaban dentro del script. Este tipo de scripts son \u00fatiles si quiero dejar evidencia de los comandos que corr\u00ed en Bash, ya sea para volver a hacerlo otro d\u00eda o para pasarselos a algui\u00e9n m\u00e1s y que los corra en su propia computadora; sin embargo, para realmente programar necesitamos m\u00e1s herramientas.","title":"Scripts"},{"location":"practicos/TP01_Linux/#variables","text":"Las variables son palabras que guardan dentro de ellas un n\u00famero o un string (texto), entre otro tipo de valores posibles que veremos m\u00e1s adelante. Veamos un ejemplo de como usar variables (vean ambas pesta\u00f1as): C\u00f3digo C\u00f3digo con comentarios nombre = \"Unsamer\" echo \"Hola $nombre , \u00bftodo bien?\" # Las lineas que empiezan con # son comentarios, no afectan el c\u00f3digo y sirven para aclarar que estas # haciendo en tu programa o script # Al declarar una variable en Bash no se puede poner espacio entre la variable, el = y el valor # Las comillas se usan para indicar que lo de adentro es una cadena de caracteres, o *string* nombre = \"Unsamer\" # Cuando se usa la variable, se le agrega el prefijo $ echo \"Hola $nombre , \u00bftodo bien?\" \u00bfQu\u00e9 piensan que va a pasar de correr este c\u00f3digo en un script? Pruebenl\u00f3. Info Desgraciadamente Bash es muy estricto al momento de programar y perdona bastante poco (como por ejemplo el tema de tener un espacio m\u00e1s o menos). M\u00e1s adelante vamos a usar el lenguaje R que va a ser una de nuestras principales herramientas al momento de analizar y plotear datos y es mucho m\u00e1s amigable. En este momento pueden estar pensando que hubiera sido mucho m\u00e1s f\u00e1cil poner solo echo \"Hola Unsamer, \u00bftodo bien?\" y ahorrarme el tema de la variable. Tienen raz\u00f3n. Por ahora. \u00bfSe acuerdan de los parametros de los comandos de Bash? Al pasarle par\u00e1metros a un script de Bash estos se asignan automaticamente a variables llamadas $1 , $2 , etc. Editemos ahora nuestro c\u00f3digo anterior: C\u00f3digo C\u00f3digo con comentarios nombre = $1 echo \"Hola $nombre , \u00bftodo bien?\" # $1 es el primer parametro que se le pasa al script de Bash # Le estoy asignando el valor de una variable a otra variable. $1 sigue existiendo, pero no la uso m\u00e1s nombre = $1 # Podr\u00eda usar $1 directamente aca, pero as\u00ed se entiende mucho m\u00e1s lo que hace el c\u00f3digo al leerlo # (y para programas muy complicados esto es muy importante) echo \"Hola $nombre , \u00bftodo bien?\" Y ahora corran: bash SCRIPT \"NOMBRE\" Por si la versi\u00f3n gen\u00e9rica no queda claro, si el script se llamara saludo.sh y quiero conseguir el mismo resultado que antes habr\u00eda que correr: bash saludo.sh \"Unsamer\" Info Tecnicamente si estoy pasando solo una palabra las comillas no son necesarias, pero si el string que estoy pasando tiene un espacio tengo que ponerlas si o si. Hay bastante m\u00e1s para hablar de las variables . Existen muchos tipos m\u00e1s de variables, como booleanos (variable que es verdadera o falsa), arreglos (o vectores) y listas. Otros lenguajes de programaci\u00f3n hasta tienen variables m\u00e1s complejas que pueden almacenar tablas enteras. Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre las variables en Bash se puede ver en esta p\u00e1gina .","title":"Variables"},{"location":"practicos/TP01_Linux/#condicionales","text":"Las variables son importantes, pero gran parte de la programaci\u00f3n es controlar el \"flujo\" del programa, es decir, que un script haga algo m\u00e1s que simplemente ir de arriba a abajo ejecutando comandos. La primera herramienta que vamos a aprender para controlar el flujo del programa son los condicionales que permiten crear secciones de c\u00f3digo que se van a ejecutar solo si se cumple (o no se cumple) una condici\u00f3n. Por ejemplo: C\u00f3digo C\u00f3digo con comentarios numero = $1 echo \" $numero es un numero\" if (( $numero > 10 )) then echo \" $numero es mayor a 10\" fi # Igual que antes estoy agarrando un par\u00e1metro al correr el script numero = $1 echo \" $numero es un numero\" # *if* es la estructura m\u00e1s usada para condicionales. # Adentro de los dobles par\u00e9ntesis va la condici\u00f3n. # > es el comparador, o sea, estamos preguntando si $numero es mayor que 10 if (( $numero > 10 )) then # El codigo entre *then* y *fi* solo si ejecuta si la condici\u00f3n es verdad, de otra forma se saltea # Este codigo esta m\u00e1s a la derecha, o *indentado*. Esto se hace con tab y en la mayor\u00eda de los lenguajes # es solo para entender m\u00e1s f\u00e1cil el c\u00f3digo echo \" $numero es mayor a 10\" fi # *fi* indica donde termina el condicional Copien este c\u00f3digo a un script y prueben pasarle n\u00fameros menores y mayores a 10 a ver que pasa. Info Es importante remarcar que la condici\u00f3n del if (lo que en este caso se encuentra entre los corchetes) es b\u00e1sicamente una pregunta que puede tener solo una de dos respuestas posibles: S\u00ed (llamada en programaci\u00f3n Verdadero o True ) \u00f3 No (llamada en programaci\u00f3n Falso o False ) Como dije antes a un condicional se le puede poner tambi\u00e9n que pase algo cuando no es verdad, por ejemplo: C\u00f3digo C\u00f3digo con comentarios numero = $1 echo \" $numero es un numero\" if (( $numero > 10 )) then echo \" $numero es mayor a 10\" else echo \" $numero es menor o igual a 10\" fi numero = $1 echo \" $numero es un numero\" if (( $numero > 10 )) then # Ahora si la condici\u00f3n es verdad se va a ejecutar el c\u00f3digo entre *then* y *else* y luego va a # seguir a partir de *fi* echo \" $numero es mayor a 10\" else # El c\u00f3digo entre *else* y *fi* se ejecuta solo cuando la condici\u00f3n no es verdad echo \" $numero es menor o igual a 10\" fi Hay bastante m\u00e1s para hablar de los ifs . Hay muchos m\u00e1s comparadores y son diferentes si estoy comparando n\u00fameros o strings . Hay formas de poner m\u00e1s de una condici\u00f3n por if y hay otras estructuras como son los case que cumplen una funci\u00f3n similar. Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre los condicionales en Bash, incluyendo una lista m\u00e1s detallada de los comparadores, se puede ver en esta p\u00e1gina y en esta p\u00e1gina (en Bash las condiciones pueden estar rodeadas por par\u00e9ntesis o corchetes y en cada caso los comparadores se comportan diferente, ojo con esto).","title":"Condicionales"},{"location":"practicos/TP01_Linux/#ciclos","text":"Digamos que por alguna extra\u00f1a raz\u00f3n quieren imprimir los numeros del 1 al 10 en la consola, tendr\u00edan que hacer echo 1 , echo 2 , etc, hasta llegar a echo 10 . \u00bfQu\u00e9 pasa si ahora les pido del 1 al 100, o al 1000?. Por suerte existen los ciclos , que son estructuras que nos permiten repetir algo varias veces y al usar variables podemos hacer que cada vez sea ligeramente diferente a la anterior. C\u00f3digo C\u00f3digo con comentarios for (( i = 1 ; i< = 1000 ; i++ )) do echo $i done # *for* es una de las estructuras m\u00e1s usadas para hacer ciclos # *i* es el nombre de la variable que va a cambiar de valor en cada ciclo. Se le podria poner cualquier nombre a # \u00e9sta variable, por ejemplo *numero* en nuestro caso, pero es costumbre ponele *i* # i=1 indica que el primer valor de $i es 1 # i<=1000 indica que el ciclo se va a repetir mientras $i sea menor o igual a 1000 # i++ indica que al final de cada ciclo el valor de $i va a subir en 1 for (( i = 1 ; i< = 1000 ; i++ )) do # El c\u00f3digo entre *do* y *done* se va a ejecutar una vez para cada posible $i en el rango echo $i done Hay otra versi\u00f3n del for que comunmente se denomina for each . En este caso $i no representa n\u00fameros que aumentan, sino diferentes elementos en una lista. Por ejemplo: C\u00f3digo C\u00f3digo con comentarios for color in rojo amarillo verde do echo \"Este es el color $color \" done # Como ahora la variable son elementos de una lista le pongo el nombre *color* para que se sepa que es, # pero podr\u00eda ser *i* # Esta es una forma bastante mala de usar listas de elementos, donde la estoy declarando en el mismo *for*; # comunmente las listas existen de antes en el programa o las obtengo de un archivo o comando de Lubuntu for color in rojo amarillo verde do echo \"Este es el color $color \" done Hay bastante m\u00e1s para hablar de los ciclos . Se pueden hacer ciclos que aumenten de 2 en 2 o hacer ciclos que disminuyan. Hay otros dos tipos de ciclos comunmente den\u00f3minados while y until (tambien llamado do ) y hay formas de forzar salir del ciclo o pasar a la pr\u00f3xima iteraci\u00f3n con break y continue (tambien llamado next ). Sin embargo, lo que acabamos de aprender es la base y va a ser suficiente por ahora. M\u00e1s informaci\u00f3n sobre los ciclos en Bash se puede ver en esta p\u00e1gina .","title":"Ciclos"},{"location":"practicos/TP01_Linux/#ejercicio-3-programacion-en-bash","text":"El objetivo de este ejercicio es hacer un script que: Use por lo menos un for y un if Recorra los n\u00fameros del 1 al 10 Por cada uno de esos n\u00fameros cree un archivo llamado archivo_NUMERO , d\u00f3nde hay que reemplazar NUMERO por el n\u00famero correspondiente (de 1 a 10) En los primeros 5 archivos ( archivo_1 a archivo_5 ) escriba el texto: Primera parte. Este es el archivo NUMERO. Donde hay que reemplazar NUMERO por el n\u00famero correspondiente (de 1 a 5) En los \u00faltimos 5 archivos ( archivo_6 a archivo_10 ) escriba el texto: Segunda parte. Este es el archivo NUMERO. Donde hay que reemplazar NUMERO por el n\u00famero correspondiente (de 6 a 10). Noten que ambas oraciones est\u00e1n en lineas diferentes Ahora que sabemos nuestro objetivo vayan a Documentos y creen una nueva carpeta donde vamos a trabajar llamada TP01_EJ3 . Dentro de ella creen un archivo vacio llamado crear_archivos.sh que va a ser nuestro script. Al momento de hacer programas complejos, especialmente en un lenguaje que reci\u00e9n aprenden, es recomendado ir por partes e ir probando en el medio. Unos posibles pasos a seguir son: Info La idea de hacerlo as\u00ed es ir probando de a poco si aparece algun error. \u00a1Prueben el script entre cada paso! Modifiquen el script para que cree un archivo llamado archivo_1 que adentro tenga el texto: Primera parte. Este es el archivo 1. Agreguen un for que vaya de 1 a 5 y cree los archivos archivo_1 a archivo_5 que adentro tengan el texto: Primera parte. Este es el archivo NUMERO. Donde hay que reemplazar NUMERO por el n\u00famero correspondiente (de 1 a 5). Expandan el for para que vaya de 1 a 10. Agreguen un if adentro del for que haga que los archivos se creen solo para los primeros 5 ciclos. Tip Aca les puede venir bien el comparador <= , que significa \"menor o igual\". Un ejemplo de <= seria: if (( $1 < = 7 )) Que en este caso es verdadero cuando el par\u00e1metro $1 es menor o igual a 7. Agreguen un else al if , recordando que los comandos adentro del else se van a ejecutar cuando la condici\u00f3n no sea verdadera. Asumiendo que usaron <= en la condici\u00f3n del if , modifiquen los comandos adentro del else para que en ese caso se creen los archivos archivo_6 a archivo_10 que adentro tengan el texto: Segunda parte. Este es el archivo NUMERO. Donde hay que reemplazar NUMERO por el n\u00famero correspondiente (de 6 a 10). \u00a1Y listo, deber\u00edan tener su programa andando!","title":"Ejercicio 3"},{"location":"practicos/TP01_Linux/#bash-tablas","text":"Lo ultimo que vamos a aprender hoy es un peque\u00f1o vistazo a como se pueden manipular tablas desde la consola de Lubuntu. Descarguen el archivo mtcars que se encuentra en los materiales del TP (boton al principio de todo) y ponganlo en Documentos . Esta tabla viene por defecto con el lenguaje de programaci\u00f3n R y nos va a servir para aprender como manipular tablas en Bash. Abran el archivo con Leafpad (doble click). Podemos ver que es una tabla en formato texto, donde la primera l\u00ednea es el encabezado o header de la tabla y en cada l\u00ed\u0144ea las columnas est\u00e1n separadas entre ellas con un Tab (a estos archivos se los conoce como TSV o \"Tab-Separated Values\"). Es bioinform\u00e1tica es muy com\u00fan querer seleccionar columnas espec\u00edficas en una tabla, o filtrar filas debido al valor de una de sus columnas; esto es lo que vamos a aprender a continuaci\u00f3n. Columnas de mtcars mtcars es una tabla que viene por defecto con el lenguaje de programaci\u00f3n R , sus columnas son: Nombre Descripci\u00f3n car_name Name of the car mpg Miles/(US) gallon cyl Number of cylinders disp Displacement (cu.in.) hp Gross horsepower drat Rear axle ratio wt Weight (1000 lbs) qsec 1/4 mile time vs Engine (0 = V-shaped, 1 = straight) am Transmission (0 = automatic, 1 = manual) gear Number of forward gears carb Number of carburetors","title":"Bash: Tablas"},{"location":"practicos/TP01_Linux/#awk","text":"El comando awk (que recibe su nombre de las iniciales de los apellidos de las 3 personas que lo crearon) es uno de los comandos mas usados en Bash para manipular tablas por su gran flexibilidad, hasta el punto que es posible incorporar condicionales y ciclos dentro de \u00e9l. La forma m\u00e1s simple del comando es: awk -opciones 'instrucciones' ARCHIVO_TABLA Donde ARCHIVO_TABLA es el archivo que contiene a la tabla e instrucciones es que hacer con ese archivo una vez que se abra (las instrucciones siempre tienen que estar delimitadas por comillas simples, o ' ). Colocando a nuestra terminal en Documentos podemos correr: awk -F \"\\t\" '{print}' mtcars Donde -F es la opci\u00f3n que le dice a awk cual es el caracter que separa las diferentes columnas (en este caso es \\t , que es el s\u00edmbolo de Tab ) y {print} es la instrucci\u00f3n que simplemente dice que imprima en pantalla la tabla. Lo importante de awk es que nos permite trabajar con columnas individuales. Por ejemplo si ponemos: awk -F \"\\t\" '{print $1}' mtcars Vemos que awk imprime solo la primera columna, que en este caso es el nombre de los autos. Podemos asumir entonces que cada columna se puede referir con $1 , $2 , etc. Probemos imprimir muchas columnas corriendo: awk -F \"\\t\" '{print $1 $3 $5}' mtcars \u00bfQu\u00e9 ven que pasa aca? Debido a como funciona print , las diferentes columnas se imprimeron una pegada a la otra sin dejar espacios. Si quisieramos imprimir las columnas separadas con Tab como la tabla original tenemos que hacer: awk -F \"\\t\" '{print $1 \"\\t\" $3 \"\\t\" $5}' mtcars Ahora bien, una actividad normal cuando se tienen tablas con muchos datos es filtrar mis datos por alguna columna, o dicho de otra forma, usar condicionales. Un ejemplo de esto en awk seria: awk -F \"\\t\" '{if ($3 == 6) {print}}' mtcars \u00bfQu\u00e9 les parece que hace ese comando? Piensen que estan viendo una estructura de if que no vieron antes, pero aun as\u00ed probablemente puedan inferir que va a hacer el comando pensando en como funcionaba el if de Bash que aprendimos arriba. Esto es super normal en la programaci\u00f3n, donde la estructura exacta cambia, pero la l\u00f3gica detr\u00e1s se mantiene constante. Entonces, aca le estan diciendo a awk que imprima en la pantalla todas las filas que tengan un valor de 6 en la columna 3 (que si se fijan es cyl , o el n\u00famero de cilindros). Como siempre hay mucho m\u00e1s para decir sobre awk , pero por hoy estamos bien. Sepan sin embargo que awk tiene su propio grep y su propio for , que se pueden declarar variables dentro de \u00e9l y que tiene hasta una lista de comandos propios. Pueden ver mucha m\u00e1s informaci\u00f3n de awk en esta p\u00e1gina .","title":"AWK"},{"location":"practicos/TP01_Linux/#ejercicio-adicional-1-programacion-en-bash-v2","text":"Info Algunas guias van a tener ejercicios adicionales, que son ejercicios que pueden hacer si quieren practicar m\u00e1s el tema, pero no son obligatorios. Estos ejercicios pueden llegar a ser un poco m\u00e1s complicados que los ejercicios de la gu\u00eda. El objetivo de este Ejercicio va a ser hacer un script que: Reciba un n\u00famero por consola (vamos a asumir que dicho n\u00famero va a ser siempre un n\u00famero entero entre 1 y 1000) Recorra todos los n\u00fameros entre 1 y el n\u00famero que recibi\u00f3 por consola Para cada uno de esos n\u00fameros vea si es par Imprima los n\u00fameros pares por consola Dos cosas que van a necesitar para hacer esto son: # El operador % calcula el resto entre 2 n\u00fameros # En este caso $resto va a contener el resto de dividir 5 por 2 (que es 1) # Una forma muy usada en programac\u00edon para ver si un n\u00famero es par es ver si su resto al dividirlo por 2 es 0 # Los par\u00e9ntesis y signo $ bordeando a la operaci\u00f3n son necesarios para que funcione bien en Bash resto = $(( 5 % 2 )) # == es el comparador para igualdad usado en los *ifs* # Va a ser verdadero solo si lo de la izquierda es identico a lo de la derecha. if (( $1 == 2 )) Para hacer este ejercicio pueden usar como base el c\u00f3digo creado en el Ejercicio 3 que ambos tienen una estructura general bastante similar.","title":"Ejercicio Adicional 1"},{"location":"practicos/TP01_Linux/#bibliografia","text":"","title":"Bibliograf\u00eda"},{"location":"practicos/TP01_Linux/#consola","text":"Comando man","title":" Consola"},{"location":"practicos/TP01_Linux/88_BU/","text":"TP1. Titulo del Trabajo Pr\u00e1ctico Materiales Software a usar Programa 1 www.donde.lo.bajo.com Programa 2 www.donde.lo.bajo2.com Recursos Online Recurso 1 www.webAusar.com Recurso 2 www.webAusar.com Objetivos Introduccion al Tema Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non onsequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Existen distintos de Admonitions Atenci\u00f3n esto es un admonition!! Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Admonition desplegable (Esto est\u00e1 bueno para ver las soluciones a las cosas o tipo los ayuda memoria, c\u00f3digo de amino\u00e1cidos de una letra, etc) Atenci\u00f3n !! Sin desplegar Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Definici\u00f3n de Inline Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Esto en teor\u00eda ser\u00eda para que me entre ac\u00e1 y me quede a la izquierda LO QUE EST\u00c1 PUESTO ARRIBA ladito Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Todos los tipos disponibles ac\u00e1 Todo lo que sea c\u00f3digo y se muestre la soluci\u00f3n se recomienda usar las tabs C\u00f3digo Ouput Esto es una prueba Y esta es la otra prueba Ejercicio 1. Titulo del Ejercicio a realizar probado el titulo en codigo 1 2 3 4 5 6 import tensorflow as tf def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Ejercicio 2. Titulo del Ejercicio a realizar The range() function is used to generate a sequence of numbers. >seq1 ARTPLKMNSDADASDASDASJFGDAKJFGKJDAHGFKJDHALFKDHFLKJHAKF DLKFJHALKDFHKLJHDLFKJHDAKFHLKADJHFLKJHALDKFHLAKDHFLKHA DSDADSSA Ctrl + Alt + Del Ctrl + V Bibliograf\u00eda Libros Libro 1 Libro 2 Online Material 1 Material 2","title":"Index"},{"location":"practicos/TP01_Linux/88_BU/#tp1-titulo-del-trabajo-practico","text":"Materiales","title":"Label que aparece en Table Of Contents"},{"location":"practicos/TP01_Linux/88_BU/#software-a-usar","text":"Programa 1 www.donde.lo.bajo.com Programa 2 www.donde.lo.bajo2.com","title":"Software a usar"},{"location":"practicos/TP01_Linux/88_BU/#recursos-online","text":"Recurso 1 www.webAusar.com Recurso 2 www.webAusar.com","title":"Recursos Online"},{"location":"practicos/TP01_Linux/88_BU/#objetivos","text":"","title":"Objetivos"},{"location":"practicos/TP01_Linux/88_BU/#introduccion-al-tema","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non onsequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Existen distintos de Admonitions Atenci\u00f3n esto es un admonition!! Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Admonition desplegable (Esto est\u00e1 bueno para ver las soluciones a las cosas o tipo los ayuda memoria, c\u00f3digo de amino\u00e1cidos de una letra, etc) Atenci\u00f3n !! Sin desplegar Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Definici\u00f3n de Inline Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Esto en teor\u00eda ser\u00eda para que me entre ac\u00e1 y me quede a la izquierda LO QUE EST\u00c1 PUESTO ARRIBA ladito Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Todos los tipos disponibles ac\u00e1 Todo lo que sea c\u00f3digo y se muestre la soluci\u00f3n se recomienda usar las tabs C\u00f3digo Ouput Esto es una prueba Y esta es la otra prueba","title":"Introduccion al Tema"},{"location":"practicos/TP01_Linux/88_BU/#ejercicio-1-titulo-del-ejercicio-a-realizar","text":"probado el titulo en codigo 1 2 3 4 5 6 import tensorflow as tf def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Ejercicio 1"},{"location":"practicos/TP01_Linux/88_BU/#ejercicio-2-titulo-del-ejercicio-a-realizar","text":"The range() function is used to generate a sequence of numbers. >seq1 ARTPLKMNSDADASDASDASJFGDAKJFGKJDAHGFKJDHALFKDHFLKJHAKF DLKFJHALKDFHKLJHDLFKJHDAKFHLKADJHFLKJHALDKFHLAKDHFLKHA DSDADSSA Ctrl + Alt + Del Ctrl + V","title":"Ejercicio 2"},{"location":"practicos/TP01_Linux/88_BU/#bibliografia","text":"","title":"Bibliograf\u00eda"},{"location":"practicos/TP01_Linux/88_BU/#libros","text":"Libro 1 Libro 2","title":" Libros"},{"location":"practicos/TP01_Linux/88_BU/#online","text":"Material 1 Material 2","title":" Online"},{"location":"practicos/TP02_EMBOSS/","text":"TP 2 . EMBOSS Materiales Software a usar EMBOSS (ya instalado en la VM). Objetivos Familiarizarse con el uso de herramientas bioinform\u00e1ticas por l\u00ednea de comandos. Familiarizarse con los formatos caracter\u00edsticos de datos biol\u00f3gicos. Practicar conceptos aprendidos en el TP 1. Introduccion al Tema EMBOSS es una suite bioinform\u00e1tica creada y mantenida por EMBnet que incluye una multitud de herramientas elementales en biolog\u00eda molecular y gen\u00e9tica. Algunas ventajas de EMBOSS son: Maneja informaci\u00f3n biol\u00f3gica en varios formatos para realizar distintos tipos de tareas. Es muy r\u00e1pida, lo cual significa que es computacionalmente escalable. Si bien cada uno de sus programas individuales podr\u00edan ser reemplazados por otros softwares o un script propio, EMBOSS agrupa todos estos programas en un solo paquete y le provee al usuario una interfaz unificada para todas las aplicaciones. A continuaci\u00f3n se encuentra una lista de 256 programas que contiene EMBOSS y un resumen corto de lo que hace cada uno: Programas de EMBOSS Program name Description aaindexextract Extract amino acid property data from AAINDEX abiview Display the trace in an ABI sequencer file acdc Test an application ACD file acdpretty Correctly reformat an application ACD file acdtable Generate an HTML table of parameters from an application ACD file acdtrace Trace processing of an application ACD file (for testing) acdvalid Validate an application ACD file aligncopy Read and write alignments aligncopypair Read and write pairs from alignments antigenic Find antigenic sites in proteins assemblyget Get assembly of sequence reads backtranambig Back-translate a protein sequence to ambiguous nucleotide sequence backtranseq Back-translate a protein sequence to a nucleotide sequence banana Plot bending and curvature data for B-DNA biosed Replace or delete sequence sections btwisted Calculate the twisting in a B-DNA sequence cachedas Generate server cache file for DAS servers or for the DAS registry cachedbfetch Generate server cache file for Dbfetch/WSDbfetch data sources cacheebeyesearch Generate server cache file for EB-eye search domains cacheensembl Generate server cache file for an Ensembl server cai Calculate codon adaptation index chaos Draw a chaos game representation plot for a nucleotide sequence charge Draw a protein charge plot checktrans Report STOP codons and ORF statistics of a protein chips Calculate Nc codon usage statistic cirdna Draw circular map of DNA constructs codcmp Codon usage table comparison codcopy Copy and reformat a codon usage table coderet Extract CDS, mRNA and translations from feature tables compseq Calculate the composition of unique words in sequences cons Create a consensus sequence from a multiple alignment consambig Create an ambiguous consensus sequence from a multiple alignment cpgplot Identify and plot CpG islands in nucleotide sequence(s) cpgreport Identify and report CpG-rich regions in nucleotide sequence(s) cusp Create a codon usage table from nucleotide sequence(s) cutgextract Extract codon usage tables from CUTG database cutseq Remove a section from a sequence dan Calculate nucleic acid melting temperature dbiblast Index a BLAST database dbifasta Index a fasta file database dbiflat Index a flat file database dbigcg Index a GCG formatted database dbtell Display information about a public database dbxcompress Compress an uncompressed dbx index dbxedam Index the EDAM ontology using b+tree indices dbxfasta Index a fasta file database using b+tree indices dbxflat Index a flat file database using b+tree indices dbxgcg Index a GCG formatted database using b+tree indices dbxobo Index an obo ontology using b+tree indices dbxreport Validate index and report internals for dbx databases dbxresource Index a data resource catalogue using b+tree indices dbxstat Dump statistics for dbx databases dbxtax Index NCBI taxonomy using b+tree indices dbxuncompress Uncompress a compressed dbx index degapseq Remove non-alphabetic (e.g. gap) characters from sequences density Draw a nucleic acid density plot descseq Alter the name or description of a sequence diffseq Compare and report features of two similar sequences distmat Create a distance matrix from a multiple sequence alignment dotmatcher Draw a threshold dotplot of two sequences dotpath Draw a non-overlapping wordmatch dotplot of two sequences dottup Display a wordmatch dotplot of two sequences dreg Regular expression search of nucleotide sequence(s) drfinddata Find public databases by data type drfindformat Find public databases by format drfindid Find public databases by identifier drfindresource Find public databases by resource drget Get data resource entries drtext Get data resource entries complete text edamdef Find EDAM ontology terms by definition edamhasinput Find EDAM ontology terms by has_input relation edamhasoutput Find EDAM ontology terms by has_output relation edamisformat Find EDAM ontology terms by is_format_of relation edamisid Find EDAM ontology terms by is_identifier_of relation edamname Find EDAM ontology terms by name edialign Local multiple alignment of sequences einverted Find inverted repeats in nucleotide sequences embossdata Find and retrieve EMBOSS data files embossupdate Checks for more recent updates to EMBOSS embossversion Report the current EMBOSS version number emma Multiple sequence alignment (ClustalW wrapper) emowse Search protein sequences by digest fragment molecular weight entret Retrieve sequence entries from flatfile databases and files epestfind Find PEST motifs as potential proteolytic cleavage sites eprimer3 Pick PCR primers and hybridization oligos eprimer32 Pick PCR primers and hybridization oligos equicktandem Find tandem repeats in nucleotide sequences est2genome Align EST sequences to genomic DNA sequence etandem Find tandem repeats in a nucleotide sequence extractalign Extract regions from a sequence alignment extractfeat Extract features from sequence(s) extractseq Extract regions from a sequence featcopy Read and write a feature table featmerge Merge two overlapping feature tables featreport Read and write a feature table feattext Return a feature table original text findkm Calculate and plot enzyme reaction data freak Generate residue/base frequency table or plot fuzznuc Search for patterns in nucleotide sequences fuzzpro Search for patterns in protein sequences fuzztran Search for patterns in protein sequences (translated) garnier Predict protein secondary structure using GOR method geecee Calculate fractional GC content of nucleic acid sequences getorf Find and extract open reading frames (ORFs) godef Find GO ontology terms by definition goname Find GO ontology terms by name helixturnhelix Identify nucleic acid-binding motifs in protein sequences hmoment Calculate and plot hydrophobic moment for protein sequence(s) iep Calculate the isoelectric point of proteins infoalign Display basic information about a multiple sequence alignment infoassembly Display information about assemblies infobase Return information on a given nucleotide base inforesidue Return information on a given amino acid residue infoseq Display basic information about sequences isochore Plot isochores in DNA sequences jaspextract Extract data from JASPAR jaspscan Scan DNA sequences for transcription factors lindna Draw linear maps of DNA constructs listor Write a list file of the logical OR of two sets of sequences makenucseq Create random nucleotide sequences makeprotseq Create random protein sequences marscan Find matrix/scaffold recognition (MRS) signatures in DNA sequences maskambignuc Mask all ambiguity characters in nucleotide sequences with N maskambigprot Mask all ambiguity characters in protein sequences with X maskfeat Write a sequence with masked features maskseq Write a sequence with masked regions matcher Waterman-Eggert local alignment of two sequences megamerger Merge two large overlapping DNA sequences merger Merge two overlapping sequences msbar Mutate a sequence mwcontam Find weights common to multiple molecular weights files mwfilter Filter noisy data from molecular weights file needle Needleman-Wunsch global alignment of two sequences needleall Many-to-many pairwise alignments of two sequence sets newcpgreport Identify CpG islands in nucleotide sequence(s) newcpgseek Identify and report CpG-rich regions in nucleotide sequence(s) newseq Create a sequence file from a typed-in sequence nohtml Remove mark-up (e.g. HTML tags) from an ASCII text file noreturn Remove carriage return from ASCII files nospace Remove whitespace from an ASCII text file notab Replace tabs with spaces in an ASCII text file notseq Write to file a subset of an input stream of sequences nthseq Write to file a single sequence from an input stream of sequences nthseqset Read and write (return) one set of sequences from many octanol Draw a White-Wimley protein hydropathy plot oddcomp Identify proteins with specified sequence word composition ontocount Count ontology term(s) ontoget Get ontology term(s) ontogetcommon Get common ancestor for terms ontogetdown Get ontology term(s) by parent id ontogetobsolete Get ontology ontology terms ontogetroot Get ontology root terms by child identifier ontogetsibs Get ontology term(s) by id with common parent ontogetup Get ontology term(s) by id of child ontoisobsolete Report whether an ontology term id is obsolete ontotext Get ontology term(s) original full text palindrome Find inverted repeats in nucleotide sequence(s) pasteseq Insert one sequence into another patmatdb Search protein sequences with a sequence motif patmatmotifs Scan a protein sequence with motifs from the PROSITE database pepcoil Predict coiled coil regions in protein sequences pepdigest Report on protein proteolytic enzyme or reagent cleavage sites pepinfo Plot amino acid properties of a protein sequence in parallel pepnet Draw a helical net for a protein sequence pepstats Calculate statistics of protein properties pepwheel Draw a helical wheel diagram for a protein sequence pepwindow Draw a hydropathy plot for a protein sequence pepwindowall Draw Kyte-Doolittle hydropathy plot for a protein alignment plotcon Plot conservation of a sequence alignment plotorf Plot potential open reading frames in a nucleotide sequence polydot Draw dotplots for all-against-all comparison of a sequence set preg Regular expression search of protein sequence(s) prettyplot Draw a sequence alignment with pretty formatting prettyseq Write a nucleotide sequence and its translation to file primersearch Search DNA sequences for matches with primer pairs printsextract Extract data from PRINTS database for use by pscan profit Scan one or more sequences with a simple frequency matrix prophecy Create frequency matrix or profile from a multiple alignment prophet Scan one or more sequences with a Gribskov or Henikoff profile prosextract Process the PROSITE motif database for use by patmatmotifs pscan Scan protein sequence(s) with fingerprints from the PRINTS database psiphi Calculates phi and psi torsion angles from protein coordinates rebaseextract Process the REBASE database for use by restriction enzyme applications recoder Find restriction sites to remove (mutate) with no translation change redata Retrieve information from REBASE restriction enzyme database refseqget Get reference sequence remap Display restriction enzyme binding sites in a nucleotide sequence restover Find restriction enzymes producing a specific overhang restrict Report restriction enzyme cleavage sites in a nucleotide sequence revseq Reverse and complement a nucleotide sequence seealso Find programs with similar function to a specified program seqcount Read and count sequences seqmatchall All-against-all word comparison of a sequence set seqret Read and write (return) sequences seqretsetall Read and write (return) many sets of sequences seqretsplit Read sequences and write them to individual files seqxref Retrieve all database cross-references for a sequence entry seqxrefget Retrieve all cross-referenced data for a sequence entry servertell Display information about a public server showalign Display a multiple sequence alignment in pretty format showdb Display information on configured databases showfeat Display features of a sequence in pretty format showorf Display a nucleotide sequence and translation in pretty format showpep Display protein sequences with features in pretty format showseq Display sequences with features in pretty format showserver Display information on configured servers shuffleseq Shuffle a set of sequences maintaining composition sigcleave Report on signal cleavage sites in a protein sequence silent Find restriction sites to insert (mutate) with no translation change sirna Find siRNA duplexes in mRNA sixpack Display a DNA sequence with 6-frame translation and ORFs sizeseq Sort sequences by size skipredundant Remove redundant sequences from an input set skipseq Read and write (return) sequences, skipping first few splitsource Split sequence(s) into original source sequences splitter Split sequence(s) into smaller sequences stretcher Needleman-Wunsch rapid global alignment of two sequences stssearch Search a DNA database for matches with a set of STS primers supermatcher Calculate approximate local pair-wise alignments of larger sequences syco Draw synonymous codon usage statistic plot for a nucleotide sequence taxget Get taxon(s) taxgetdown Get descendants of taxon(s) taxgetrank Get parents of taxon(s) taxgetspecies Get all species under taxon(s) taxgetup Get parents of taxon(s) tcode Identify protein-coding regions using Fickett TESTCODE statistic textget Get text data entries textsearch Search the textual description of sequence(s) tfextract Process TRANSFAC transcription factor database for use by tfscan tfm Display full documentation for an application tfscan Identify transcription factor binding sites in DNA sequences tmap Predict and plot transmembrane segments in protein sequences tranalign Generate an alignment of nucleic coding regions from aligned proteins transeq Translate nucleic acid sequences trimest Remove poly-A tails from nucleotide sequences trimseq Remove unwanted characters from start and end of sequence(s) trimspace Remove extra whitespace from an ASCII text file twofeat Find neighbouring pairs of features in sequence(s) union Concatenate multiple sequences into a single sequence urlget Get URLs of data resources variationget Get sequence variations vectorstrip Remove vectors from the ends of nucleotide sequence(s) water Smith-Waterman local alignment of sequences whichdb Search all sequence databases for an entry and retrieve it wobble Plot third base position variability in a nucleotide sequence wordcount Count and extract unique words in molecular sequence(s) wordfinder Match large sequences against one or more other sequences wordmatch Find regions of identity (exact matches) of two sequences wossdata Find programs by EDAM data wossinput Find programs by EDAM input data wossname Find programs by keywords in their short description wossoperation Find programs by EDAM operation wossoutput Find programs by EDAM output data wossparam Find programs by EDAM parameter wosstopic Find programs by EDAM topic yank Add a sequence reference (a full USA) to a list file Como obviamente es imposible acordarse de todos estos programas, EMBOSS tiene un comando llamado wossname que permite listar comandos que tengan cierta palabra en su descripci\u00f3n (en ingl\u00e9s). Abran la consola y prueben correr: wossname dna Por otro lado, una vez que encuentran un programa que les interesa pueden leer detalladamente como funciona usando el comando tfm ( The Funny? Full? Manual ). Por ejemplo pueden ejecutar: tfm jaspscan El texto que aparece funciona similar al comando less que vimos en el TP 1, donde Space pasa a la pr\u00f3xima p\u00e1gina y apretando Q deja de leerlo. Como mencionamos antes es posible hacer bioinform\u00e1tica sin usar EMBOSS, ya sea porque queremos controlar hasta el \u00faltimo detalle que hace nuestro programa, porque queremos agregar alguna opci\u00f3n que EMBOSS no tiene, o simplemente porque era una tarea simple y no quer\u00edamos aprender a usar un programa de EMBOSS para hacerla. Son todas razones v\u00e1lidas. Lo que queremos que se lleven hoy es que EMBOSS existe y que puede hacer algunas tareas que les van a resultar \u00fatiles en el d\u00eda a d\u00eda de hacer bioinform\u00e1tica. Si no estan usando la Maquina Virtual de Introducci\u00f3n a la Bioinform\u00e1tica lean esto: EMBOSS y su documentaci\u00f3n est\u00e1 ya instalado en la m\u00e1quina virtual que les pasamos. Si no estas usando la m\u00e1quina virtual tenes que instalarlo usando: sudo apt-get install emboss emboss-data emboss-doc Aplicaciones en Biotecnolog\u00eda En el TP de hoy vamos a familiarizarnos con EMBOSS y algunas herramientas del paquete, aplic\u00e1ndolas al dise\u00f1o de una estrategia de clonado, puntualmente para dise\u00f1ar/optimizar prote\u00ednas para expresi\u00f3n recombinante heter\u00f3loga. En los \u00faltimos a\u00f1os se ha simplificado considerablemente la ejecuci\u00f3n del proceso de clonado/expresi\u00f3n. Esto se debe a la aparici\u00f3n de m\u00faltiples herramientas de Ingenieria Gen\u00e9tica y a la posibilidad de sintetizar largas secuencias de \u00e1cidos nucleicos in vitro , lo que quita el peso de levantar un gen de inter\u00e9s o el riesgo de meter errores durante la PCR que ejecutamos para hacerlo. Una de las industrias biotecnol\u00f3gicas m\u00e1s antigua es la industria alimenticia. Centenares de microorganismos distintos y decenas de enzimas son utilizados en esta industria para distintos procesos. Algunos de estos procesos son muy complejos, como la fermentaci\u00f3n de un vino, mientras que otros son simples y puntuales, como la degradaci\u00f3n de lactosa en productos l\u00e1cteos para personas intolerantes a este az\u00facar. Los procesos enzim\u00e1ticos simples pueden resolverse f\u00e1cilmente mediante la producci\u00f3n de la enzima de inter\u00e9s en forma heter\u00f3loga. Con el fin de dar rienda suelta a nuestro emprendedor interior, montaremos las bases de una empresa biotecnol\u00f3gica: vamos a producir enzimas. La primera enzima que queremos producir es la VpVan , la cual es la encargada de convertir el \u00e1cido fer\u00falico en vanillina . La vainillina es un compuesto de alto inter\u00e9s econ\u00f3mico debido a su uso como saborizante (a que no adivinan que sabor tiene). Archivos FASTA Esta enzima ha sido aislada (y secuenciada) a partir de Vanilla planifolia . Encontrar\u00e1n la secuencia correspondiente entre sus materiales de trabajo ( VpVAN.fasta ) y m\u00e1s informaci\u00f3n sobre el descubrimiento en este paper . Por si no lo saben o no lo recuerdan, el formato FASTA es la forma m\u00e1s usada para trabajar secuencias biol\u00f3gicas (ADN, ARN, amino\u00e1cidos) en forma digital. Son archivos de texto plano, donde se asume un formato muy sencillo de interpretar para el ojo humano: Un archivo FASTA tiene dos elementos importantes: Header : Est\u00e1 indicado con un > . Es la l\u00ednea con el nombre o identificador de la secuencia. Puede contener informaci\u00f3n adicional como alguna descripci\u00f3n extra sobre la secuencia, tal como las condiciones en que fue obtenida u otra descripci\u00f3n opcional. Secuencia : El resto de las l\u00edneas que contin\u00faan contienen la secuencia propiamente dicha. El largo de cada fila de la secuencia no significa nada; una secuencia de 800 amino\u00e1cidos puede ser escrita en una sola l\u00ednea de 800 amino\u00e1cidos o en 10 l\u00edneas de 80 amino\u00e1cidos cada una. La secuencia sigue hasta el pr\u00f3ximo > o hasta el final del archivo, lo que pase primero. Info Cuando un FASTA tiene m\u00e1s de una secuencia se lo denomina multiFASTA . En los archivos multiFASTA cada secuencia tiene su header y su secuencia propiamente dicha. Repaso biol\u00f3gico Nuestro objetivo en esta gu\u00eda va a ser dise\u00f1ar una secuencia de ADN sint\u00e9tico que: Exprese VpVan Tenga sitios de corte para enzimas de restricci\u00f3n para que pueda ser insertado en un pl\u00e1smido o vector de expresi\u00f3n de un organismo hu\u00e9sped. En este caso, dichos sitios de corte van a pertenecer a diferentes enzimas de restricci\u00f3n para facilitar la inserci\u00f3n del gen en el sentido correcto Marque a VpVan de alguna forma para facilitar su posterior purificaci\u00f3n A continuaci\u00f3n vamos a dar una versi\u00f3n super resumida de los conceptos anteriores. Si ya saben como funciona todo lo mencionado pueden ir a la pr\u00f3xima secci\u00f3n ( Bases del experimento ). Repaso biol\u00f3gico - Pl\u00e1smidos Pl\u00e1smidos Los pl\u00e1smidos son mol\u00e9culas de ADN de forma circular presentes principalmente en bacterias, arqueas y levaduras. Estas mol\u00e9culas se encuentran fuera de los cromosomas y se replican de manera aut\u00f3noma. Debido a estas caracter\u00edsticas, es posible generar pl\u00e1smidos artificiales con el objetivo de amplificar ( vector de clonaci\u00f3n ) o de expresar ( vector de expresi\u00f3n ) un gen de inter\u00e9s. Esto generalmente se realiza cuando la expresi\u00f3n de dicho gen en su organismo original no es factible, ya sea por problemas de volumen, log\u00edstica o \u00e9tica. Los principales componentes de vector de expresi\u00f3n son: Origen de la replicaci\u00f3n: punto inicial para la replicaci\u00f3n del pl\u00e1smido Gen de resistencia a antibi\u00f3ticos: gen que se expresa y da resistencia al organismo hu\u00e9sped, permite quedarnos solo con los organismos que tienen el pl\u00e1smido dentro de ellos Promotor: controla la transcripci\u00f3n de una determinada secuencia (en este caso el gen insertado) Sitio de restricci\u00f3n: secuencia que es cortada por una enzima de restricci\u00f3n y donde ser\u00e1 insertado el gen de inter\u00e9s (m\u00e1s de esto a continuaci\u00f3n) Repaso biol\u00f3gico - Enzimas de Restricci\u00f3n Enzimas de Restricci\u00f3n Las enzimas de restricci\u00f3n son prote\u00ednas que reconocen una secuencia espec\u00edfica de nucle\u00f3tidos dentro de una mol\u00e9cula de ADN y cortan el ADN en ese punto en concreto o en un punto cercano. A esas secuencias de ADN se las denomina sitios de restricci\u00f3n y tienen entre cuatro a seis pares de bases. Hay dos grandes grupos de enzimas de restricci\u00f3n, aquellas que dejan extremos cohesivos y aquellas que dejan extremos romos: Al momento de insertar genes en pl\u00e1smidos se usan generalmente enzimas de restricci\u00f3n que dejan extremos cohesivos ya que facilitan la inserci\u00f3n del gen debido a su especificidad y a que pueden volverse a unir espontaneamente. La idea detr\u00e1s de su uso es colocar un sitio de restricci\u00f3n en el pl\u00e1smido y colocar el mismo sitio de restricci\u00f3n a cada lado del gen de inter\u00e9s (en el ADN que uno sintetiza). Luego los pl\u00e1smidos vacios se colocan en una soluci\u00f3n con el ADN sint\u00e9tico y se les agrega la enzima de restricci\u00f3n correspondiente que va a cortar el ADN dejando los extremos cohesivos en cada sitio de restricci\u00f3n. Como el sitio de restricci\u00f3n es el mismo en el pl\u00e1stido y en la secuencia de ADN, es posible entonces que el ADN sint\u00e9tico se insert\u00e9 en el pl\u00e1smido, ya sea espontaneamente o ayudado por una ligasa. Esta p\u00e1gina tiene muy buenos esquemas sobre el proceso. En el experimento anterior, luego de cortar el sitio de restricci\u00f3n con la enzima, pueden pasar tres cosas: El pl\u00e1smido se vuelve a cerrar sin ningun inserto Se inserta el gen de inter\u00e9s en la direcci\u00f3n correcta (respecto al promotor en el pl\u00e1smido) Se inserta el gen de inter\u00e9s en la direcci\u00f3n contraria (respecto al promotor en el pl\u00e1smido) Es posible evitar el caso donde el gen se inserta en la direcci\u00f3n contraria combinando 2 enzimas de restricci\u00f3n diferentes, donde ahora va a haber 2 sitios de restricci\u00f3n en el pl\u00e1smido (uno para cada enzima) y los dos sitios de restricci\u00f3n en el ADN sint\u00e9tico van a ser diferentes (uno para cada enzima, en el mismo orden que en el pl\u00e1smido). Si bien en esta versi\u00f3n no es posible que el gen sea insertado en la direcci\u00f3n contraria, s\u00ed es posible que se vuelva a insertar el fragmento de pl\u00e1smido entre los sitios de restricci\u00f3n, pero hay formas de controlar estos casos. Cuando usamos 2 enzimas de reestricci\u00f3n en esta forma decimos que estamos \"clonando en forma direccional\". Danger Es importante cuando se usan enzimas de restricci\u00f3n asegurarse que no haya ning\u00fan sitio de corte para las enzimas elegidas en el pl\u00e1smido ni en el ADN sint\u00e9tico fuera de los sitios involucrados en el proceso de inserci\u00f3n (ya que de existir tambi\u00e9n ser\u00e1n cortados y la inserci\u00f3n fracasar\u00e1). Repaso biol\u00f3gico - Purificaci\u00f3n y Tags Purificaci\u00f3n y Tags Una vez que nuestros organismos hu\u00e9sped tienen el vector de expresi\u00f3n con el gen de inter\u00e9s, se los deja crecer, reproducirse y expresar la prote\u00edna de inter\u00e9s en grandes cantidades. Una vez hecho esto, es necesario extraer esa prote\u00edna de la soluci\u00f3n, lo que no es trivial. Hay varias formas de purificar prote\u00ednas y una de ellas es la cromatograf\u00eda por afinidad, la cual se basa en la uni\u00f3n reversible entre el analito de inter\u00e9s (en nuestro caso la VpVan ) y un ligando espec\u00edfico, inmovilizado en un soporte s\u00f3lido inerte. Cuando la muestra pasa por la columna, s\u00f3lo son retenidas las mol\u00e9culas que se unen de manera selectiva al ligando por afinidad y las que no se unen avanzan con la fase m\u00f3vil. La figura a continuaci\u00f3n muestra un ejemplo donde se usan anticuerpos inmovilizados en una columna para purificar a la prote\u00edna roja del resto de la soluci\u00f3n: Uno podr\u00eda asumir entonces que para poder construir estas columnas es necesario conseguir un ligando que reconozca a nuestra prote\u00edna de inter\u00e9s. Si bien esto es te\u00f3ricamente cierto, como nosotros estamos sintetizando el ADN desde cero podemos pensar lateralmente y agregarle a nuestra prote\u00edna una secuenc\u00eda aminoac\u00eddica en uno de sus extremos para la cual ya conozcamos ligandos. Estas secuencias pueden ser desde pocos amino\u00e1cidos hasta a prote\u00ednas peque\u00f1as y son denominadas tags . Bases del experimento Volviendo a nuestro experimento, queremos insertar el gen de VpVan en un vector de expresi\u00f3n. Nuestro organismo hu\u00e9sped es: E. coli BL21 Como queremos clonar en forma direccional tenemos que usar dos enzimas de restricci\u00f3n . Ellas son: BamHI HindIII Al momento de purificar necesitamos agregarle un tag a la prote\u00edna. Vamos a probar 3 tags diferentes: FLAG-tag His-tag MBP-tag Por cuestiones de practicidad, todos los tags van a estar en el C-terminal. En los siguientes ejercicios vamos a: Ejercicio 1: Generar secuencias quim\u00e9ricas VpVan-Tag agregando diferentes tags de inter\u00e9s a la secuencia prote\u00edca de VpVan Ejercicio 2: Obtener el genoma del organismo hu\u00e9sped E. coli BL21 (necesario para el Ejercicio 3 ) Ejercicio 3: Generar una tabla de frecuencia de uso de codones del organismo hu\u00e9sped Ejercicio 4: Generar la secuencia nucleot\u00eddica VpVan-Tag con los codones optimizados para el organismo hu\u00e9sped Ejercicio 5: Verificar que no hayan quedado sitios de corte para nuestras enzimas de restricci\u00f3n dentro de la secuencia VpVan-Tag optimizada y luego agregar los sitios de restricci\u00f3n en los bordes de la secuencia Ejercicio 1. Secuencias aminoac\u00eddicas VpVan-Tag Vamos a generar las secuencias de amino\u00e1cidos quim\u00e9ricas VpVan-Tag (donde Tag = FLAG/His/MBP). Para esto van a necesitar los siguientes archivos que se encuentras en sus materiales de trabajo: VpVan.fasta FLAG-tag.fasta His-tag.fasta MBP-tag.fasta Es altamente recomendado que creen diferentes carpetas para los diferentes TPs y en algunos casos para los diferentes ejercicios (especialemente en este). El nombre y la ubicaci\u00f3n lo pueden decidir ustedes, pero un ejemplo para este ejercicio ser\u00eda ~/Documentos/TP_02/EJ_1 . Una vez creada la carpeta para este ejercicio, muevan los cuatro archivos anteriores a dicha carpeta. Tip Recuerden que es preferible no usar espacios al crear directorios o archivos Nuestro objetivo ahora es crear 3 nuevos archivos FASTA que contengan las diferentes construcciones ( VpVan + cada uno de los tags). Vamos a llamarlos VpVan-FLAG-tag.fasta y similar (reemplazando el nombre del tag en cada caso). Ahora bien, como son solo 3 tags esto se podr\u00eda hacer a mano copiando y pegando, pero es un buen momento para profundizar en dos conceptos que aprendimos la clase pasada: scripts y ciclos . Creen un archivo vacio de texto en esa carpeta y llamenl\u00f3 agregar_tags.sh . Dentr\u00f3 del archivo pongan lo siguiente: C\u00f3digo C\u00f3digo con comentarios vpvan_sequence = ` cat VpVAN.fasta | grep -v \">\" ` lista_de_archivos_tags = ` ls *-tag.fasta ` for archivo_tag in $lista_de_archivos_tags do tag_sequence = ` cat $archivo_tag | grep -v \">\" ` new_header = \">VpVAN- $archivo_tag \" combined_sequence = \" $vpvan_sequence$tag_sequence \" echo \" $new_header \" > VpVAN- $archivo_tag echo \" $combined_sequence \" >> VpVAN- $archivo_tag done # Aca estamos ejecutando comandos de Linux y guardando su output en una variable # En estos casos hay que rodear a los comandos con ` (acento grave o comilla invertida) # Leemos el FASTA de VpVAN y nos quedamos solo con la secuencia # (estamos removiendo con grep cualquier linea que tenga >, que aca es solo el header) vpvan_sequence = ` cat VpVAN.fasta | grep -v \">\" ` # Creamos una lista que contiene a todos los archivos que terminan con -tag.fasta # (esto va a mirar solo archivos que est\u00e9n en la carpeta donde se corre el script) lista_de_archivos_tags = ` ls *-tag.fasta ` # Este es una estructura a la que llamamos *for each* en el TP 1. Es un *for*, pero en vez de tener # una cantidad determinada de ciclos, recorre cada uno de los elementos de una lista for archivo_tag in $lista_de_archivos_tags do # Leemos el FASTA del tag y nos quedamos solo con la secuencia tag_sequence = ` cat $archivo_tag | grep -v \">\" ` # Creamos una variable que almacene el nuevo header para la secuencia de VpVAN + tag new_header = \">VpVAN- $archivo_tag \" # Calculamos la nueva secuencia VpVAN + tag combined_sequence = \" $vpvan_sequence$tag_sequence \" # Escribimos el nuevo header y la nueva secuencia en un nuevo archivo echo \" $new_header \" > VpVAN- $archivo_tag echo \" $combined_sequence \" >> VpVAN- $archivo_tag done Como recordatorio del TP 1: cat lee archivos de texto y los escribe en la consola | desvia la salida de un programa para que funcione como entrada del siguiente grep filtra texto, quedandos\u00e9 solo con aquellas l\u00edneas que contengan un texto dado (y de usar la opci\u00f3n -v se queda solo con aquellas que no lo contengan) ls lista los archivos y carpetas dentro del directorio actual echo escribe un texto por consola > desvia la salida que \u00edria a consola hacia un archivo de texto, sobrescribiendolo >> desvia la salida que \u00edria a consola hacia un archivo de texto, sin sobreescribirlo (agrega lineas al final) for , in , do y done son todas partes del ciclo for each . El c\u00f3digo entre do y done se va a repetir por cada elemento en $lista_de_archivos_tags , donde en cada iteraci\u00f3n la variable $archivo_tag toma el valor de uno de esos elementos Hay dos cosas en este script que no vimos en el TP 1. La primera es que estamos ejecutando comandos de Bash y guardando su salida en variables. En estos casos es necesario rodear el comando con ` , llamado acento grave o comilla invertida. Por ejemplo: variable = ` comando -opciones parametro1 parametro2 ` La segunda novedad es el uso de * con el comando ls . En todo lo que es Linux el caracter * funciona como comod\u00edn, tomando cualquier valor. Esto quiere decir que ls *-tag.fasta va a listar todos los archivos cuyos nombres terminen con \"-tag.fasta\" , sin importar como empiecen (pueden probar correr el comando ls *-tag.fasta a mano en la consola y ver que devuelve). \u00bfEntienden ahora lo que hace el script? Lean la pesta\u00f1a C\u00f3digo con comentarios para aclarar cualquier duda que tengan sobre \u00e9l (y si todav\u00eda no se entiende no duden en preguntar). Ahora abran la consola y corran el script que acabamos de crear, generando as\u00ed los nuevos 3 archivos. Tip Recuerden que los script se corren con bash ARCHIVO_SCRIPT \u00a1Ya tenemos nuestras secuencias quim\u00e9ricas! Tip Este script va a dar problemas si se lo corre multiples veces. Esto se debe a que al correrlo la primera vez estamos creando m\u00e1s archivos que terminan con \"-tag.fasta\", que en una segunda corrida van a ser detectados por el ls . Si no quieren tener problemas con esto pueden agregar el siguiente c\u00f3digo luego de dicho comando: | grep -v \"VpVAN\" Ejercicio 2. Genoma de E. coli Nosotros queremos expresar el gen de un organismo en otro organismo. Si bien el c\u00f3digo gen\u00e9tico es practicamente universal, diferentes organismos pueden tener preferencia para diferentes codones que generan un mismo amino\u00e1cido. Por esta raz\u00f3n, al hacer expresi\u00f3n recombinante heter\u00f3loga es una buena idea cambiar los codones del gen de inter\u00e9s para que matcheen mejor con los codones que prefiere el organismo hu\u00e9sped (se modifica el ADN pero se sigue produciendo la misma prote\u00edna). El primer paso para realizar esta modificaci\u00f3n es conocer cuales son los codones preferidos por dicho organismo. Busquen usando el comando wossname que programas de EMBOSS trabajan con codones (recuerden que est\u00e1 en ingl\u00e9s, asi que tienen que buscar \"codon\"). Lean la descripci\u00f3n de dichos programas, \u00bfcual les parece que vamos a usar para calcular la tabla de uso de codones? Respuesta cusp , cuya descripci\u00f3n es \"Create a codon usage table from nucleotide sequence(s)\" Si leen la descripci\u00f3n del programa, ver\u00e1n que pide una secuencia de nucle\u00f3tidos, es decir, que necesitamos un FASTA del genoma completo de E. coli (ya que \u00e9ste es nuestro organismo hu\u00e9sped). Un buen lugar para obtener informaci\u00f3n de genomas, genes, y prote\u00ednas es RefSeq , que es una colecci\u00f3n curada de secuencias nucleot\u00eddicas y sus productos. En su FAQ ( Frequently Asked Questions , o preguntas frecuentes ) hay una pregunta que es b\u00e1sicamente lo que queremos hacer nosotros: How can I download RefSeq data for all complete bacterial genomes? Si bien los comandos que ellos sugieren son un poco complejos, vamos a utilizarlos y tratar de explicarlos lo mejor posible. Tip Antes de seguir les recomendamos crear una carpeta nueva para este ejercicio, por ejemplo ~/Documentos/TP_02/EJ_2 . RefSeq - Paso 1 - Bajar y filtrar la tabla con los genomas El primer paso indicado en el FAQ es descargar el archivo assembly_summary.txt y ponerlo en la carpeta de este ejercicio. Esto lo pueden hacer desde la p\u00e1gina de RefSeq a mano o abriendo la consola en la carpeta de este ejercicio y corriendo: wget ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/assembly_summary.txt Question \u00bfQu\u00e9 piensan que hace wget ? \u00bfC\u00f3mo pueden averiguarlo si no lo saben? Una vez descargado ese archivo (que pesa bastante) queremos ver sus contenidos. Sabiendo que es un archivo que tiene m\u00e1s de 250.000 lineas: \u00bfQu\u00e9 comando usar\u00edan para ver que tipo de datos tiene adentro? Pruebenlo. Dado que es un archivo con muchas columnas, probablemente les cueste entender lo que est\u00e1n viendo aunque hayan usado el comando correcto. Para entender la estructura de nuestro archivo vamos a crear un archivo temporal que tenga solo las primeras 20 filas de este archivo: head -20 assembly_summary.txt > assembly_summary_temporal.tsv Lo \u00fanico que les deber\u00eda llamar la atenci\u00f3n del comando anterior es que el nuevo archivo tiene la extensi\u00f3n tsv . Esto lo mencionamos por arriba en el TP 1, pero los archivos TSV o \"Tab-Separated Values\" son archivos de texto que contienen una tabla donde sus columnas est\u00e1n separadas entre ellas por un Tab , lo cual es exactamente el caso de la tabla actual. Hagan doble click sobre el archivo assembly_summary_temporal.tsv . La extensi\u00f3n tsv en nuestra m\u00e1quina virtual est\u00e1 asociada al programa Gnumeric (similar a Excell o a Google Sheets). Gnumeric va a detectar autom\u00e1ticamente que las columnas est\u00e1n separadas por Tab . Identifiquen la columna correspondiente a la especie (son solo las primeras 20 filas, no van a encontrar a E. coli ), la cepa y el link a la ubicaci\u00f3n del genoma. Ahora que conocen la estructura de la tabla, y sabiendo que tiene muchos mas organismos que E. coli , tenemos que filtrar el archivo y quedarnos solo con nuestro organismo y cepa de inter\u00e9s. Para esto, corran los siguientes comandos uno a la vez: C\u00f3digo C\u00f3digo con comentarios head -2 assembly_summary.txt > assembly_summary_coli.tsv grep \"Escherichia coli\" assembly_summary.txt | grep \"BL21\" >> assembly_summary_coli.tsv # Generamos un nuevo archivo con el header de la tabla (que en este caso son 2 filas) head -2 assembly_summary.txt > assembly_summary_coli.tsv # Buscamos dentro del archivo las filas que contengan \"Escherichia coli\" y \"BL21\" y # las agregamos a la nuevo archivo head grep \"Escherichia coli\" assembly_summary.txt | grep \"BL21\" >> assembly_summary_coli.tsv RefSeq - Paso 2 - Crear un archivo con links a las carpetas de los genomas Ahora que tenemos y entendemos la tabla con nuestros datos de E. coli la podemos abrir en Gnumeric haciendo doble click. Van a ver que no hay solo un genoma de E. coli BL21, sino varios, por lo cual nuestro objetivo de crear una tabla de codones acaba de volverse un poco m\u00e1s complicado. Lo que vamos a hacer entonces es bajar todos los genomas de E. coli BL21 que vemos en la tabla, as\u00ed que continuamos al segundo paso en el FAQ de RefSeq : awk -F \"\\t\" '{if ($12==\"Complete Genome\" && $11==\"latest\") {print $20}}' assembly_summary_coli.tsv > ftpdirpaths Al comando awk lo vimos brevemente al final del TP 1 y sirve para trabajar con tablas en Bash (entre otras cosas). Las diferentes partes de este comando son: -F \"\\t\" indica que el separador de columnas es \\t , o sea, Tab $12==\"Complete Genome\" es una condici\u00f3n que filtra las filas, qued\u00e1ndose solo con aquellas donde la columna 12 ( assembly_level ) es \"Complete Genome\" $11==\"latest\" es una condici\u00f3n que filtra las filas, qued\u00e1ndose solo con aquellas donde la columna 11 ( version_status ) es \"latest\" && se denomina and y une ambas condiciones, pidiendo que ambas se cumplan para que la condici\u00f3n total se cumpla {print $20} indica que se va a devolver la columna 20 ( ftp_path , contiene el path del genoma, o sea, la carpeta) Este comando va a crear el archivo ftpdirpaths , que contiene links a las carpetas que contienen los genomas. Investiguen cuantos links quedaron en ftpdirpaths . \u00bfEntienden por qu\u00e9? Sino consulten. RefSeq - Paso 3 - Crear un archivo con links a los genomas Los links que tenemos de momento tienen el formato: ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/833/145/GCF_000833145.1_ASM83314v1 Sin embargo, estos son links a las carpetas que contienen los genomas. Siguiendo las instrucciones del FAQ de RefSeq podemos crear el link de los genomas, que para el ejemplo anterior ser\u00eda: ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/833/145/GCF_000833145.1_ASM83314v1/GCF_000833145.1_ASM83314v1_cds_from_genomic.fna.gz Donde el nombre del archivo es el nombre de la \u00faltima carpeta + \"_cds_from_genomic.fna.gz\" Los archivos terminados en .fna.gz son secuencias en formato FASTA ( f ) de nucle\u00f3tidos ( na ) comprimidas ( gz ). Hay varias formas de crear estos nuevos links. Nosotros lo vamos a hacer de la siguiente manera: awk -F \"/\" '{print $0 \"/\" $10 \"_cds_from_genomic.fna.gz\"}' ftpdirpaths > ftpfilepaths Donde: -F \"/\" indica que el separador de columnas es / . Lo que est\u00e1 haciendo este c\u00f3digo es leer nuestros paths como si fueran tablas de varias columnas, haciendo que cada carpeta quede en su propia columna. $0 parecer\u00eda indicar la columna 0, pero las columnas en awk van de 1 en adelante ( $1 , $2 , etc). El \u00edndice $0 es un \u00edndice especial que devuelve toda la fila (que en este caso es todo el path a la carpeta del genoma). $10 es la columna 10, la cual contiene el nombre del genoma (es el nombre de la \u00faltima carpeta en el path ). print va a concatenar $0 (el path a la carpeta del genoma), \"/\" (una barra para separar los directorios), $10 (la primera parte del nombre del archivo a descargar) y \"_cds_from_genomic.fna.gz\" (la segunda parte del nombre del archivo a descargar). awk va a hacer esto por cada fila del archivo ftpdirpaths . Una vez que entienden lo que hace este comando abran la terminal y corranl\u00f3. Por si se quedaron con curiosidad de el comando que propon\u00eda el FAQ de RefSeq El comando awk que sugeria el FAQ de RefSeq es un poco m\u00e1s complejo, pero llegaba al mismo resultado. Noten que en este comando el archivo tiene la extensi\u00f3n .gbff.gz que hace referencia al formato de GenBank , que no es el con el que vamos a trabajar. Hay que cambiarlo por \"cds_from_genomic.fna.gz\" awk 'BEGIN{FS=OFS=\"/\";filesuffix=\"genomic.gbff.gz\"}{ftpdir=$0;asm=$10;file=asm\"_\"filesuffix;print ftpdir,file}' ftpdirpaths > ftpfilepaths No es necesario que lo entiendan 100%, pero vamos a aclarar algunas cosas: BEGIN significa que las cosas entre las primeras llaves se van a ejecutar solo una vez, y no una vez por fila (como el resto). FS es una variable interna de awk que indica como se separan las columnas en la tabla a leer (es equivalente a usar -F ). La variable OFS indica lo mismo, pero para la salida de awk . Con FS=OFS=\"/\" estamos indicando que ambos ser\u00e1n la barra / . Lo que est\u00e1 haciendo este c\u00f3digo es leer nuestros paths como si fueran tablas de varias columnas, haciendo que cada carpeta quede en su propia columna. En filesuffix=\"cds_from_genomic.fna.gz\" est\u00e1 definiendo una variable en la que va a almacenar la cadena de texto que queremos agregar al final de cada link. En ftpdir=$0 est\u00e1 definiendo una variable en la que parece almacenar la columna 0. Ahora bien, las columnas en awk van de 1 en adelante ( $1 , $2 , etc), pero el \u00edndice $0 es un \u00edndice especial que devuelve toda la fila (que en este caso es todo el path a la carpeta del genoma). En asm=$10 est\u00e1 definiendo una variable en la que va a almacenar la columna 10, la cual contiene el nombre del genoma (es el nombre de la \u00faltima carpeta en el path ). En file=asm\"_\"filesuffix est\u00e1 definiendo una nueva variable como la concatenaci\u00f3n de asm , un gui\u00f3n bajo y filesuffix . Este va a ser el nombre del archivo a descargar (pero todav\u00eda le falta el path ). print ftpdir,file va a imprimir el valor de ftpdir (el path a la carpeta del genoma) seguido por el valor de file (el nombre del archivo a descargar) por cada fila del archivo ftpdirpaths . La barra entre ambos ( / ) es agregada automaticamente debido a que declaramos OFS=\"/\" al principio. RefSeq - Paso 4 - Descargar genomas de E. coli Ya falta poco para tener nuestros genomas, solo hay que descargar todos los links que tenemos adentro del archivo ftpfilepaths . Esto se puede hacer usando el comando wget . Ahora bien, por defecto a wget hay que pasarle un link de descarga como hicimos arriba, pero por suerte existe una opci\u00f3n que permite pasarle un archivo de entrada y que descargue todos los links que se encuentran en \u00e9l. Usen wget -h (mas conciso) o man wget (mas extenso) para ver las diferentes opciones de wget , encuentren la que se usa para pasarle un archivo de entrada (o fichero o input file ) con links (o URLs ) y usen wget con ftpfilepaths para bajar todos los genomas que seleccionamos. Tip wget tiene bastantes opciones, asi que para hacerla un poco m\u00e1s f\u00e1cil sepan que la opci\u00f3n que necesitan es una de las 15 primeras y est\u00e1 en la secci\u00f3n Ficheros de registro y de entrada (o Logging and input file ) Este comando puede tardar un rato en descargar todo y va a bajar 11 archivos con extensi\u00f3n .fna.gz donde .fna es una extensi\u00f3n que hace referencia a que el archivo contiene informaci\u00f3n de secuencia (similar a FASTA) y .gz es la extensi\u00f3n de los archivos comprimidos de Linux. Ejercicio 3. Construir tabla de frecuencias de uso de codones Tras lo que parece una eternidad por fin tenemos nuestros genomas. Ahora es momento de usar el comando cusp del que hablamos al principio del ejercicio anterior para transformar nuestros genomas en tablas con frecuencias de uso de codones. Como tenemos varios archivos .fna.gz vamos a tener que correr el comando cusp varias veces, y la mejor forma de hacer esto es creando un script con un ciclo for each que lo haga por nosotros. Usando las siguientes 2 lineas de c\u00f3digo, creen un script que contenga un for each que recorra todos los archivos .fna.gz que acabamos de descargar, los descomprima y ejecute el comando cusp para cada uno: # Creamos una lista que contiene a todos los archivos que empiezan con \"GCF\" y terminan con \".gz\" lista_de_archivos_genomas = ` ls GCF*.gz ` # Descomprimimos el archivo \".gz\" y corremos el comando *cusp* para cada $archivo_genoma de la lista zcat $archivo_genoma | cusp -auto -sequence \"stdin\" -outfile \" ${ archivo_genoma } .cusp\" Donde: zcat es un comando que descomprime archivos .gz y devuelve su contenido por consola (similar a cat ). -auto hace que cusp use los par\u00e1metros por defecto y no nos consulte cuales usar. -sequence \"stdin\" le esta diciendo a cusp que el genoma se lo estamos dando por la consola (mediante el pipe o | ). -outfile \"${archivo_genoma}.cusp\" define el nombre del archivo de salida de cusp , que en este caso es el nombre del genoma seguido de .cusp . Si bien las llaves no son necesarias en este caso, ayudan a entender donde termina la variable y empieza el string . Idealmente habria que sacarle la extensi\u00f3n anterior al archivo (ya que ahora va a quedar .fna.gz.cusp ), pero ya tenemos bastante que hacer. Tip Lo unico que falta en el script es la estructura del for each propiamente dicho. Si no se la acuerdan pueden ver el for each que usamos en el Ejercicio 1 como gu\u00eda. Una vez creado el script, corranl\u00f3. Si ven que este script tarda mucho tiempo en correr (varios minutos sin indicar que avanza) lean esto: Cancelen la corrida apretando Ctrl + C en la terminal Usen para la pr\u00f3xima seccion los archivos ecoli_BL21_codon_table_1.cusp y ecoli_BL21_codon_table_2.cusp que se encuentra en sus materiales de trabajo Comparar tablas de codones Recordando nuestro objetivo, nosotros quer\u00edamos una tabla de codones de E. coli para saber como modificar el ADN de nuestra prote\u00edna de inter\u00e9s ( VpVan ) para que use aquellos codones preferidos por el organismo hu\u00e9sped. En este momento tenemos varias tablas de codones, asi que tenemos que elegir alguna. Abran uno de los archivos .cusp que acabamos de crear y vean que informaci\u00f3n tiene: Si en la tabla dentro del archivo .cusp las columnas no est\u00e1n alineadas lean esto: Por defecto Leafpad usa una fuente llamada \"Ubuntu\" , que si bien sirve para escribir cuentos, nos va a dar problemas al momento de ver ciertos archivos que vamos a usar en esta materia. En Leafpad vayan a Opciones Tipograf\u00eda... , seleccionen la fuente \"Ubuntu Mono\" y aprieten Aceptar . Las fuentes que tienen Mono en su nombre estan indicando que son monoespaciadas, o sea, que todos sus caracteres tienen el mismo ancho. Esto es ideal para cuando se quieren ver tablas o alineamientos con Leafpad , cosa que vamos a hacer bastante en esta materia. Ayuda-memoria con amino\u00e1cidos y sus abreviaturas Full Name Abbreviation (3 Letter) Abbreviation (1 Letter) Alanine Ala A Arginine Arg R Asparagine Asn N Aspartate Asp D Aspartate or Asparagine Asx B Cysteine Cys C Glutamate Glu E Glutamine Gln Q Glutamate or Glutamine Glx Z Glycine Gly G Histidine His H Isoleucine Ile I Leucine Leu L Lysine Lys K Methionine Met M Phenylalanine Phe F Proline Pro P Serine Ser S Threonine Thr T Tryptophans Trp W Tyrosine Tyr Y Valine Val V \u00bfPor qu\u00e9 hay m\u00e1s de un cod\u00f3n para cada amino\u00e1cido? \u00bfQu\u00e9 indica la columna Fraction ? \u00bfQu\u00e9 indica la columna Frequency ? (pueden encontra la respuesta usando tfm cusp , pero est\u00e1 mas claro en la ayuda online ) Ahora abran otro archivo .cusp , \u00bfnotan diferencias entre las frecuencias de uso de codones de los distintos proyectos genoma de E.Coli BL21? En un principio pareceria que ambos archivos .cusp son bastante parecidos, pero queremos estar seguros. EMBOSS tiene un programa llamado codcmp que permite comparar tablas de codones, calculando ciertos estad\u00edsticos. El programa se usa: codcmp ARCHIVO_CUSP_1 ARCHIVO_CUSP_2 ARCHIVO_SALIDA Usen este comando para comparar los dos archivos .cusp que miraron previamente y guarden la comparaci\u00f3n en un archivo llamado cusp_comparison.out . Abran cusp_comparison.out y vean los estad\u00edsticos calculados. \u00bfSon compatibles estos resultados con nuestras observaciones previas de que ambos archivos .cusp son muy parecidos? Hay entoces una noticia buena y una mala: Noticia Buena Todos las tablas de frecuencias de codones son casi id\u00e9nticas, asi que podemos usar cualquiera de ellas y va a funcionar bien. Aclaraci\u00f3n 1: Los resultados de codcmp no alcanzan para decir que las diferencias no son \"estadisticamente signficativas\" (aunque en este caso es bastante obvio). En el manual de codcmp dan algunas ideas para calcular esto. Aclaraci\u00f3n 2: Otra forma de resolver el \"problema\" de tener muchas tablas de codones podr\u00eda haber sido calcular una nueva tabla de frecuencias de codones que sea un promedio de todas las anteriores, pero esto es un trabajo complejo y no se amerita hacerlo para este caso debido a los similar que son las diferentes tablas entre s\u00ed. Noticia Mala Todos las tablas de frecuencias de codones son casi id\u00e9nticas, asi que podr\u00edamos haber bajado solo una de ellas y ahorrarnos bastante trabajo (aunque no ten\u00edamos forma de saber esto previamente). Ejercicio 4. Optimizar secuencia a insertar en base a la tabla de codones Ya casi estamos. En este momento tenemos la tabla de frecuencia de uso de codones para E. coli BL21 y queremos aplicar dichos codones a las 3 secuencias quim\u00e9ricas que creamos en el Ejercicio 1 , es decir, codificar una secuencia amionac\u00eddica de planta en la forma m\u00e1s \u00f3ptima para su traducci\u00f3n en E. coli . Para organizar un poco los archivos volvemos a recomendar crear una carpeta para este ejercicio, por ejemplo ~/Documentos/TP_02/EJ_4 . Dentro de la carpeta copien los siguientes archivos: VpVAN-FLAG-tag.fasta (creado en el Ejercicio 1) VpVAN-His-tag.fasta (creado en el Ejercicio 1) VpVAN-MBP-tag.fasta (creado en el Ejercicio 1) Elijan alguno de los archivos .cusp creados en el Ejercicio 3, copienlo a la nueva carpeta y cambienl\u00e9 el nombre a ecoli_BL21_codon_table.cusp . Ahora bien, para hacer esta optimizaci\u00f3n de secuencias podemos usar otro de los programas de EMBOSS llamado backtranseq . Este programa toma una secuencia de amino\u00e1cidos correspondiente a una prote\u00edna de inter\u00e9s y una tabla de frecuencia de uso de codones y usa ambos para hacer una traducci\u00f3n inversa desde la secuencia prote\u00edca hacia la secuencia de ADN que, con mayor probabilidad, le dio origen. Es decir, backtranseq devuelve una secuencia de ADN a partir de una secuencia de amino\u00e1cidos. Este comando se usa: backtranseq -auto -sequence ARCHIVO_PROTEINA_FASTA -cfile ARCHIVO_CUSP -outfile ARCHIVO_SALIDA_ADN_FASTA Corran este comando 3 veces pas\u00e1ndole los archivos correctos y creen los siguientes archivos (si quieren pueden hacer script con un for each , pero no hace falta): Ecoli-DNA-VpVAN-FLAG-tag.fasta Ecoli-DNA-VpVAN-His-tag.fasta Ecoli-DNA-VpVAN-MBP-tag.fasta Tip De hacerlo a mano, aca van a tener que ejecutar tres comandos muy similares. Recuerden que pueden usar Up y Down en su terminal para navegar por los ultimos comandos utilizados y modificar lo necesario. Tambi\u00e9n puede serles \u00fatiles la tecla Home ( Inicio ) y End ( Fin ) para moverse al principio o al final del comando que est\u00e1n editando. Ejercicio 5. Agregar enzimas de restricci\u00f3n El \u00faltimo paso es agregar los sitios de corte de enzimas de restricci\u00f3n a los costados de mi secuencia quim\u00e9rica, pero antes de eso tengo que asegurarme que dichas enzimas no tengan sitios de corte dentro de mi secuencia. Probablemente ya no les sorprenda que existe un programa de EMBOSS para hacer esto llamado remap ; sin embargo, dicho programa necesita que previamente le hayamos pasado a EMBOSS una base de datos de enzimas de restricci\u00f3n. En los materiales de trabajo van a encontrar dos archivos llamados proto.207 y withrefm.207 que contienen la informaci\u00f3n para crear la base de datos de enzimas de restricci\u00f3n. Copienlos a la carpeta donde estan trabajando y corran el comando: rebaseextract -infile withrefm.207 -protofile proto.207 Este comando les va a tirar un error, pero no porque est\u00e9 mal escrito. El problema es que este comando quiere editar archivos que no son del usuario ibioinfo , por lo que en un principio no tenemos permisos para editarlos. En estos casos hay que agregar el prefijo sudo y puede ser que Lubuntu les pida la contrase\u00f1a (parece que no escribe nada, pero eso es por seguridad, si se las pide escriban \"unsam\" y aprieten Enter ). Asi que corran: sudo rebaseextract -infile withrefm.207 -protofile proto.207 Info Solo para que sepan, los archivos proto.207 y withrefm.207 se pueden descargar de aca o aca usando wget (con los links anteriores van a bajar un \u00edndice general y luego tienen que pasarle a wget el link de los archivos que quieran). Dependiendo de cuando vayan a esa p\u00e1gina puede ser que encuentren versiones incluso mas recientes. Ahora que ya tenemos la base de datos configurada podemos usar remap , pero antes veamos un poco mas informaci\u00f3n sobre nuestras enzimas de restricci\u00f3n. Usando grep busquen dentro del archivo proto.207 a nuestras enzimas de restricci\u00f3n de inter\u00e9s ( BamHI y HindIII ). \u00bfQu\u00e9 longitud tienen los sitios de restricci\u00f3n de BamHI y HindIII ? \u00bfQu\u00e9 piensan que significa el s\u00edmbolo ^ en el sitio de restricci\u00f3n? (pueden buscar informaci\u00f3n sobre dichas enzimas online y se van a dar cuenta enseguida) Ahora que sabemos un poco m\u00e1s sobre nuestras enzimas vamos a usar el comando remap con las siguientes opciones: remap -auto -sequence ARCHIVO_ADN_FASTA -width 80 -commercial -sitelen 6 -frame 1 -enzymes all -outfile ARCHIVO_SALIDA_REMAP Donde: -auto hace que remap use los par\u00e1metros por defecto y no nos consulte cuales usar. -width indica el ancho de secuencia a mostrar en el archivo de salida. -commercial analiza solo las enzimas de restricci\u00f3n de uso comercial (entre las que se encuentran nuestras enzimas de inter\u00e9s). -sitelen indica el m\u00ednimo de longitud del sitio de restricci\u00f3n (como sabemos que los sitios de restricci\u00f3n de nuestras enzimas de inter\u00e9s tienen 6 amino\u00e1cidos ponemos ese n\u00famero). frame indica el marco de lectura a traducir (ya que el output tambien va a dar informaci\u00f3n a nivel prote\u00edna). En nuestro caso el frame es 1 (estamos en la hebra codificante y hay que traducir a partir del primer nucle\u00f3tido). enzymes indica los nombres de las enzimas a probar. Si bien podr\u00edamos haber puesto nuestras enzimas de inter\u00e9s, ponemos all para ver m\u00e1s informaci\u00f3n del output. Corran este comando 3 veces pas\u00e1ndole los archivos correctos y creen los siguientes archivos: enzimas_FLAG.out enzimas_His.out enzimas_MBP.out Una vez creados, abran los archivos con Leafpad . \u00bfEntienden lo que simboliza el archivo? (es necesario que esten usando la fuente Ubuntu Mono en Leafpad para verlo bien) Busquen nuestras enzimas de restricci\u00f3n de inter\u00e9s. \u00bfLas encuentran? \u00bfEn que categor\u00eda est\u00e1n? \u00bfSe pueden usar entonces estas enzimas de restricci\u00f3n para insertar nuestra secuencia en un pl\u00e1smido? \u00bfHay alg\u00fan tag de los tres que estabamos considerando que no se pueda usar debido a las enzimas de restricci\u00f3n que elegimos? Elijan el tag que quieren usar, copien su construcci\u00f3n Ecoli-DNA-VpVAN-???-tag.fasta a un nuevo archivo y luego cambienl\u00e9 el nombre a secuencia_final.fasta . Abran secuencia_final.fasta en Leafpad y agreguen a mano el sitio de restricci\u00f3n de BamHI al principio y el de HindIII al final. \u00a1Felicitaciones, tenemos nuestra secuencia lista para mandar a secuenciar! Bibliograf\u00eda Online Insertar secuencias de ADN en pl\u00e1smidos Cromatograf\u00eda de afinidad","title":"TP 2 - EMBOSS"},{"location":"practicos/TP02_EMBOSS/#tp-2-emboss","text":"Materiales","title":"data-toc-label"},{"location":"practicos/TP02_EMBOSS/#software-a-usar","text":"EMBOSS (ya instalado en la VM).","title":"Software a usar"},{"location":"practicos/TP02_EMBOSS/#objetivos","text":"Familiarizarse con el uso de herramientas bioinform\u00e1ticas por l\u00ednea de comandos. Familiarizarse con los formatos caracter\u00edsticos de datos biol\u00f3gicos. Practicar conceptos aprendidos en el TP 1.","title":"Objetivos"},{"location":"practicos/TP02_EMBOSS/#introduccion-al-tema","text":"EMBOSS es una suite bioinform\u00e1tica creada y mantenida por EMBnet que incluye una multitud de herramientas elementales en biolog\u00eda molecular y gen\u00e9tica. Algunas ventajas de EMBOSS son: Maneja informaci\u00f3n biol\u00f3gica en varios formatos para realizar distintos tipos de tareas. Es muy r\u00e1pida, lo cual significa que es computacionalmente escalable. Si bien cada uno de sus programas individuales podr\u00edan ser reemplazados por otros softwares o un script propio, EMBOSS agrupa todos estos programas en un solo paquete y le provee al usuario una interfaz unificada para todas las aplicaciones. A continuaci\u00f3n se encuentra una lista de 256 programas que contiene EMBOSS y un resumen corto de lo que hace cada uno: Programas de EMBOSS Program name Description aaindexextract Extract amino acid property data from AAINDEX abiview Display the trace in an ABI sequencer file acdc Test an application ACD file acdpretty Correctly reformat an application ACD file acdtable Generate an HTML table of parameters from an application ACD file acdtrace Trace processing of an application ACD file (for testing) acdvalid Validate an application ACD file aligncopy Read and write alignments aligncopypair Read and write pairs from alignments antigenic Find antigenic sites in proteins assemblyget Get assembly of sequence reads backtranambig Back-translate a protein sequence to ambiguous nucleotide sequence backtranseq Back-translate a protein sequence to a nucleotide sequence banana Plot bending and curvature data for B-DNA biosed Replace or delete sequence sections btwisted Calculate the twisting in a B-DNA sequence cachedas Generate server cache file for DAS servers or for the DAS registry cachedbfetch Generate server cache file for Dbfetch/WSDbfetch data sources cacheebeyesearch Generate server cache file for EB-eye search domains cacheensembl Generate server cache file for an Ensembl server cai Calculate codon adaptation index chaos Draw a chaos game representation plot for a nucleotide sequence charge Draw a protein charge plot checktrans Report STOP codons and ORF statistics of a protein chips Calculate Nc codon usage statistic cirdna Draw circular map of DNA constructs codcmp Codon usage table comparison codcopy Copy and reformat a codon usage table coderet Extract CDS, mRNA and translations from feature tables compseq Calculate the composition of unique words in sequences cons Create a consensus sequence from a multiple alignment consambig Create an ambiguous consensus sequence from a multiple alignment cpgplot Identify and plot CpG islands in nucleotide sequence(s) cpgreport Identify and report CpG-rich regions in nucleotide sequence(s) cusp Create a codon usage table from nucleotide sequence(s) cutgextract Extract codon usage tables from CUTG database cutseq Remove a section from a sequence dan Calculate nucleic acid melting temperature dbiblast Index a BLAST database dbifasta Index a fasta file database dbiflat Index a flat file database dbigcg Index a GCG formatted database dbtell Display information about a public database dbxcompress Compress an uncompressed dbx index dbxedam Index the EDAM ontology using b+tree indices dbxfasta Index a fasta file database using b+tree indices dbxflat Index a flat file database using b+tree indices dbxgcg Index a GCG formatted database using b+tree indices dbxobo Index an obo ontology using b+tree indices dbxreport Validate index and report internals for dbx databases dbxresource Index a data resource catalogue using b+tree indices dbxstat Dump statistics for dbx databases dbxtax Index NCBI taxonomy using b+tree indices dbxuncompress Uncompress a compressed dbx index degapseq Remove non-alphabetic (e.g. gap) characters from sequences density Draw a nucleic acid density plot descseq Alter the name or description of a sequence diffseq Compare and report features of two similar sequences distmat Create a distance matrix from a multiple sequence alignment dotmatcher Draw a threshold dotplot of two sequences dotpath Draw a non-overlapping wordmatch dotplot of two sequences dottup Display a wordmatch dotplot of two sequences dreg Regular expression search of nucleotide sequence(s) drfinddata Find public databases by data type drfindformat Find public databases by format drfindid Find public databases by identifier drfindresource Find public databases by resource drget Get data resource entries drtext Get data resource entries complete text edamdef Find EDAM ontology terms by definition edamhasinput Find EDAM ontology terms by has_input relation edamhasoutput Find EDAM ontology terms by has_output relation edamisformat Find EDAM ontology terms by is_format_of relation edamisid Find EDAM ontology terms by is_identifier_of relation edamname Find EDAM ontology terms by name edialign Local multiple alignment of sequences einverted Find inverted repeats in nucleotide sequences embossdata Find and retrieve EMBOSS data files embossupdate Checks for more recent updates to EMBOSS embossversion Report the current EMBOSS version number emma Multiple sequence alignment (ClustalW wrapper) emowse Search protein sequences by digest fragment molecular weight entret Retrieve sequence entries from flatfile databases and files epestfind Find PEST motifs as potential proteolytic cleavage sites eprimer3 Pick PCR primers and hybridization oligos eprimer32 Pick PCR primers and hybridization oligos equicktandem Find tandem repeats in nucleotide sequences est2genome Align EST sequences to genomic DNA sequence etandem Find tandem repeats in a nucleotide sequence extractalign Extract regions from a sequence alignment extractfeat Extract features from sequence(s) extractseq Extract regions from a sequence featcopy Read and write a feature table featmerge Merge two overlapping feature tables featreport Read and write a feature table feattext Return a feature table original text findkm Calculate and plot enzyme reaction data freak Generate residue/base frequency table or plot fuzznuc Search for patterns in nucleotide sequences fuzzpro Search for patterns in protein sequences fuzztran Search for patterns in protein sequences (translated) garnier Predict protein secondary structure using GOR method geecee Calculate fractional GC content of nucleic acid sequences getorf Find and extract open reading frames (ORFs) godef Find GO ontology terms by definition goname Find GO ontology terms by name helixturnhelix Identify nucleic acid-binding motifs in protein sequences hmoment Calculate and plot hydrophobic moment for protein sequence(s) iep Calculate the isoelectric point of proteins infoalign Display basic information about a multiple sequence alignment infoassembly Display information about assemblies infobase Return information on a given nucleotide base inforesidue Return information on a given amino acid residue infoseq Display basic information about sequences isochore Plot isochores in DNA sequences jaspextract Extract data from JASPAR jaspscan Scan DNA sequences for transcription factors lindna Draw linear maps of DNA constructs listor Write a list file of the logical OR of two sets of sequences makenucseq Create random nucleotide sequences makeprotseq Create random protein sequences marscan Find matrix/scaffold recognition (MRS) signatures in DNA sequences maskambignuc Mask all ambiguity characters in nucleotide sequences with N maskambigprot Mask all ambiguity characters in protein sequences with X maskfeat Write a sequence with masked features maskseq Write a sequence with masked regions matcher Waterman-Eggert local alignment of two sequences megamerger Merge two large overlapping DNA sequences merger Merge two overlapping sequences msbar Mutate a sequence mwcontam Find weights common to multiple molecular weights files mwfilter Filter noisy data from molecular weights file needle Needleman-Wunsch global alignment of two sequences needleall Many-to-many pairwise alignments of two sequence sets newcpgreport Identify CpG islands in nucleotide sequence(s) newcpgseek Identify and report CpG-rich regions in nucleotide sequence(s) newseq Create a sequence file from a typed-in sequence nohtml Remove mark-up (e.g. HTML tags) from an ASCII text file noreturn Remove carriage return from ASCII files nospace Remove whitespace from an ASCII text file notab Replace tabs with spaces in an ASCII text file notseq Write to file a subset of an input stream of sequences nthseq Write to file a single sequence from an input stream of sequences nthseqset Read and write (return) one set of sequences from many octanol Draw a White-Wimley protein hydropathy plot oddcomp Identify proteins with specified sequence word composition ontocount Count ontology term(s) ontoget Get ontology term(s) ontogetcommon Get common ancestor for terms ontogetdown Get ontology term(s) by parent id ontogetobsolete Get ontology ontology terms ontogetroot Get ontology root terms by child identifier ontogetsibs Get ontology term(s) by id with common parent ontogetup Get ontology term(s) by id of child ontoisobsolete Report whether an ontology term id is obsolete ontotext Get ontology term(s) original full text palindrome Find inverted repeats in nucleotide sequence(s) pasteseq Insert one sequence into another patmatdb Search protein sequences with a sequence motif patmatmotifs Scan a protein sequence with motifs from the PROSITE database pepcoil Predict coiled coil regions in protein sequences pepdigest Report on protein proteolytic enzyme or reagent cleavage sites pepinfo Plot amino acid properties of a protein sequence in parallel pepnet Draw a helical net for a protein sequence pepstats Calculate statistics of protein properties pepwheel Draw a helical wheel diagram for a protein sequence pepwindow Draw a hydropathy plot for a protein sequence pepwindowall Draw Kyte-Doolittle hydropathy plot for a protein alignment plotcon Plot conservation of a sequence alignment plotorf Plot potential open reading frames in a nucleotide sequence polydot Draw dotplots for all-against-all comparison of a sequence set preg Regular expression search of protein sequence(s) prettyplot Draw a sequence alignment with pretty formatting prettyseq Write a nucleotide sequence and its translation to file primersearch Search DNA sequences for matches with primer pairs printsextract Extract data from PRINTS database for use by pscan profit Scan one or more sequences with a simple frequency matrix prophecy Create frequency matrix or profile from a multiple alignment prophet Scan one or more sequences with a Gribskov or Henikoff profile prosextract Process the PROSITE motif database for use by patmatmotifs pscan Scan protein sequence(s) with fingerprints from the PRINTS database psiphi Calculates phi and psi torsion angles from protein coordinates rebaseextract Process the REBASE database for use by restriction enzyme applications recoder Find restriction sites to remove (mutate) with no translation change redata Retrieve information from REBASE restriction enzyme database refseqget Get reference sequence remap Display restriction enzyme binding sites in a nucleotide sequence restover Find restriction enzymes producing a specific overhang restrict Report restriction enzyme cleavage sites in a nucleotide sequence revseq Reverse and complement a nucleotide sequence seealso Find programs with similar function to a specified program seqcount Read and count sequences seqmatchall All-against-all word comparison of a sequence set seqret Read and write (return) sequences seqretsetall Read and write (return) many sets of sequences seqretsplit Read sequences and write them to individual files seqxref Retrieve all database cross-references for a sequence entry seqxrefget Retrieve all cross-referenced data for a sequence entry servertell Display information about a public server showalign Display a multiple sequence alignment in pretty format showdb Display information on configured databases showfeat Display features of a sequence in pretty format showorf Display a nucleotide sequence and translation in pretty format showpep Display protein sequences with features in pretty format showseq Display sequences with features in pretty format showserver Display information on configured servers shuffleseq Shuffle a set of sequences maintaining composition sigcleave Report on signal cleavage sites in a protein sequence silent Find restriction sites to insert (mutate) with no translation change sirna Find siRNA duplexes in mRNA sixpack Display a DNA sequence with 6-frame translation and ORFs sizeseq Sort sequences by size skipredundant Remove redundant sequences from an input set skipseq Read and write (return) sequences, skipping first few splitsource Split sequence(s) into original source sequences splitter Split sequence(s) into smaller sequences stretcher Needleman-Wunsch rapid global alignment of two sequences stssearch Search a DNA database for matches with a set of STS primers supermatcher Calculate approximate local pair-wise alignments of larger sequences syco Draw synonymous codon usage statistic plot for a nucleotide sequence taxget Get taxon(s) taxgetdown Get descendants of taxon(s) taxgetrank Get parents of taxon(s) taxgetspecies Get all species under taxon(s) taxgetup Get parents of taxon(s) tcode Identify protein-coding regions using Fickett TESTCODE statistic textget Get text data entries textsearch Search the textual description of sequence(s) tfextract Process TRANSFAC transcription factor database for use by tfscan tfm Display full documentation for an application tfscan Identify transcription factor binding sites in DNA sequences tmap Predict and plot transmembrane segments in protein sequences tranalign Generate an alignment of nucleic coding regions from aligned proteins transeq Translate nucleic acid sequences trimest Remove poly-A tails from nucleotide sequences trimseq Remove unwanted characters from start and end of sequence(s) trimspace Remove extra whitespace from an ASCII text file twofeat Find neighbouring pairs of features in sequence(s) union Concatenate multiple sequences into a single sequence urlget Get URLs of data resources variationget Get sequence variations vectorstrip Remove vectors from the ends of nucleotide sequence(s) water Smith-Waterman local alignment of sequences whichdb Search all sequence databases for an entry and retrieve it wobble Plot third base position variability in a nucleotide sequence wordcount Count and extract unique words in molecular sequence(s) wordfinder Match large sequences against one or more other sequences wordmatch Find regions of identity (exact matches) of two sequences wossdata Find programs by EDAM data wossinput Find programs by EDAM input data wossname Find programs by keywords in their short description wossoperation Find programs by EDAM operation wossoutput Find programs by EDAM output data wossparam Find programs by EDAM parameter wosstopic Find programs by EDAM topic yank Add a sequence reference (a full USA) to a list file Como obviamente es imposible acordarse de todos estos programas, EMBOSS tiene un comando llamado wossname que permite listar comandos que tengan cierta palabra en su descripci\u00f3n (en ingl\u00e9s). Abran la consola y prueben correr: wossname dna Por otro lado, una vez que encuentran un programa que les interesa pueden leer detalladamente como funciona usando el comando tfm ( The Funny? Full? Manual ). Por ejemplo pueden ejecutar: tfm jaspscan El texto que aparece funciona similar al comando less que vimos en el TP 1, donde Space pasa a la pr\u00f3xima p\u00e1gina y apretando Q deja de leerlo. Como mencionamos antes es posible hacer bioinform\u00e1tica sin usar EMBOSS, ya sea porque queremos controlar hasta el \u00faltimo detalle que hace nuestro programa, porque queremos agregar alguna opci\u00f3n que EMBOSS no tiene, o simplemente porque era una tarea simple y no quer\u00edamos aprender a usar un programa de EMBOSS para hacerla. Son todas razones v\u00e1lidas. Lo que queremos que se lleven hoy es que EMBOSS existe y que puede hacer algunas tareas que les van a resultar \u00fatiles en el d\u00eda a d\u00eda de hacer bioinform\u00e1tica. Si no estan usando la Maquina Virtual de Introducci\u00f3n a la Bioinform\u00e1tica lean esto: EMBOSS y su documentaci\u00f3n est\u00e1 ya instalado en la m\u00e1quina virtual que les pasamos. Si no estas usando la m\u00e1quina virtual tenes que instalarlo usando: sudo apt-get install emboss emboss-data emboss-doc","title":"Introduccion al Tema"},{"location":"practicos/TP02_EMBOSS/#aplicaciones-en-biotecnologia","text":"En el TP de hoy vamos a familiarizarnos con EMBOSS y algunas herramientas del paquete, aplic\u00e1ndolas al dise\u00f1o de una estrategia de clonado, puntualmente para dise\u00f1ar/optimizar prote\u00ednas para expresi\u00f3n recombinante heter\u00f3loga. En los \u00faltimos a\u00f1os se ha simplificado considerablemente la ejecuci\u00f3n del proceso de clonado/expresi\u00f3n. Esto se debe a la aparici\u00f3n de m\u00faltiples herramientas de Ingenieria Gen\u00e9tica y a la posibilidad de sintetizar largas secuencias de \u00e1cidos nucleicos in vitro , lo que quita el peso de levantar un gen de inter\u00e9s o el riesgo de meter errores durante la PCR que ejecutamos para hacerlo. Una de las industrias biotecnol\u00f3gicas m\u00e1s antigua es la industria alimenticia. Centenares de microorganismos distintos y decenas de enzimas son utilizados en esta industria para distintos procesos. Algunos de estos procesos son muy complejos, como la fermentaci\u00f3n de un vino, mientras que otros son simples y puntuales, como la degradaci\u00f3n de lactosa en productos l\u00e1cteos para personas intolerantes a este az\u00facar. Los procesos enzim\u00e1ticos simples pueden resolverse f\u00e1cilmente mediante la producci\u00f3n de la enzima de inter\u00e9s en forma heter\u00f3loga. Con el fin de dar rienda suelta a nuestro emprendedor interior, montaremos las bases de una empresa biotecnol\u00f3gica: vamos a producir enzimas. La primera enzima que queremos producir es la VpVan , la cual es la encargada de convertir el \u00e1cido fer\u00falico en vanillina . La vainillina es un compuesto de alto inter\u00e9s econ\u00f3mico debido a su uso como saborizante (a que no adivinan que sabor tiene).","title":"Aplicaciones en Biotecnolog\u00eda"},{"location":"practicos/TP02_EMBOSS/#archivos-fasta","text":"Esta enzima ha sido aislada (y secuenciada) a partir de Vanilla planifolia . Encontrar\u00e1n la secuencia correspondiente entre sus materiales de trabajo ( VpVAN.fasta ) y m\u00e1s informaci\u00f3n sobre el descubrimiento en este paper . Por si no lo saben o no lo recuerdan, el formato FASTA es la forma m\u00e1s usada para trabajar secuencias biol\u00f3gicas (ADN, ARN, amino\u00e1cidos) en forma digital. Son archivos de texto plano, donde se asume un formato muy sencillo de interpretar para el ojo humano: Un archivo FASTA tiene dos elementos importantes: Header : Est\u00e1 indicado con un > . Es la l\u00ednea con el nombre o identificador de la secuencia. Puede contener informaci\u00f3n adicional como alguna descripci\u00f3n extra sobre la secuencia, tal como las condiciones en que fue obtenida u otra descripci\u00f3n opcional. Secuencia : El resto de las l\u00edneas que contin\u00faan contienen la secuencia propiamente dicha. El largo de cada fila de la secuencia no significa nada; una secuencia de 800 amino\u00e1cidos puede ser escrita en una sola l\u00ednea de 800 amino\u00e1cidos o en 10 l\u00edneas de 80 amino\u00e1cidos cada una. La secuencia sigue hasta el pr\u00f3ximo > o hasta el final del archivo, lo que pase primero. Info Cuando un FASTA tiene m\u00e1s de una secuencia se lo denomina multiFASTA . En los archivos multiFASTA cada secuencia tiene su header y su secuencia propiamente dicha.","title":"Archivos FASTA"},{"location":"practicos/TP02_EMBOSS/#repaso-biologico","text":"Nuestro objetivo en esta gu\u00eda va a ser dise\u00f1ar una secuencia de ADN sint\u00e9tico que: Exprese VpVan Tenga sitios de corte para enzimas de restricci\u00f3n para que pueda ser insertado en un pl\u00e1smido o vector de expresi\u00f3n de un organismo hu\u00e9sped. En este caso, dichos sitios de corte van a pertenecer a diferentes enzimas de restricci\u00f3n para facilitar la inserci\u00f3n del gen en el sentido correcto Marque a VpVan de alguna forma para facilitar su posterior purificaci\u00f3n A continuaci\u00f3n vamos a dar una versi\u00f3n super resumida de los conceptos anteriores. Si ya saben como funciona todo lo mencionado pueden ir a la pr\u00f3xima secci\u00f3n ( Bases del experimento ). Repaso biol\u00f3gico - Pl\u00e1smidos","title":"Repaso biol\u00f3gico"},{"location":"practicos/TP02_EMBOSS/#plasmidos","text":"Los pl\u00e1smidos son mol\u00e9culas de ADN de forma circular presentes principalmente en bacterias, arqueas y levaduras. Estas mol\u00e9culas se encuentran fuera de los cromosomas y se replican de manera aut\u00f3noma. Debido a estas caracter\u00edsticas, es posible generar pl\u00e1smidos artificiales con el objetivo de amplificar ( vector de clonaci\u00f3n ) o de expresar ( vector de expresi\u00f3n ) un gen de inter\u00e9s. Esto generalmente se realiza cuando la expresi\u00f3n de dicho gen en su organismo original no es factible, ya sea por problemas de volumen, log\u00edstica o \u00e9tica. Los principales componentes de vector de expresi\u00f3n son: Origen de la replicaci\u00f3n: punto inicial para la replicaci\u00f3n del pl\u00e1smido Gen de resistencia a antibi\u00f3ticos: gen que se expresa y da resistencia al organismo hu\u00e9sped, permite quedarnos solo con los organismos que tienen el pl\u00e1smido dentro de ellos Promotor: controla la transcripci\u00f3n de una determinada secuencia (en este caso el gen insertado) Sitio de restricci\u00f3n: secuencia que es cortada por una enzima de restricci\u00f3n y donde ser\u00e1 insertado el gen de inter\u00e9s (m\u00e1s de esto a continuaci\u00f3n) Repaso biol\u00f3gico - Enzimas de Restricci\u00f3n","title":"Pl\u00e1smidos"},{"location":"practicos/TP02_EMBOSS/#enzimas-de-restriccion","text":"Las enzimas de restricci\u00f3n son prote\u00ednas que reconocen una secuencia espec\u00edfica de nucle\u00f3tidos dentro de una mol\u00e9cula de ADN y cortan el ADN en ese punto en concreto o en un punto cercano. A esas secuencias de ADN se las denomina sitios de restricci\u00f3n y tienen entre cuatro a seis pares de bases. Hay dos grandes grupos de enzimas de restricci\u00f3n, aquellas que dejan extremos cohesivos y aquellas que dejan extremos romos: Al momento de insertar genes en pl\u00e1smidos se usan generalmente enzimas de restricci\u00f3n que dejan extremos cohesivos ya que facilitan la inserci\u00f3n del gen debido a su especificidad y a que pueden volverse a unir espontaneamente. La idea detr\u00e1s de su uso es colocar un sitio de restricci\u00f3n en el pl\u00e1smido y colocar el mismo sitio de restricci\u00f3n a cada lado del gen de inter\u00e9s (en el ADN que uno sintetiza). Luego los pl\u00e1smidos vacios se colocan en una soluci\u00f3n con el ADN sint\u00e9tico y se les agrega la enzima de restricci\u00f3n correspondiente que va a cortar el ADN dejando los extremos cohesivos en cada sitio de restricci\u00f3n. Como el sitio de restricci\u00f3n es el mismo en el pl\u00e1stido y en la secuencia de ADN, es posible entonces que el ADN sint\u00e9tico se insert\u00e9 en el pl\u00e1smido, ya sea espontaneamente o ayudado por una ligasa. Esta p\u00e1gina tiene muy buenos esquemas sobre el proceso. En el experimento anterior, luego de cortar el sitio de restricci\u00f3n con la enzima, pueden pasar tres cosas: El pl\u00e1smido se vuelve a cerrar sin ningun inserto Se inserta el gen de inter\u00e9s en la direcci\u00f3n correcta (respecto al promotor en el pl\u00e1smido) Se inserta el gen de inter\u00e9s en la direcci\u00f3n contraria (respecto al promotor en el pl\u00e1smido) Es posible evitar el caso donde el gen se inserta en la direcci\u00f3n contraria combinando 2 enzimas de restricci\u00f3n diferentes, donde ahora va a haber 2 sitios de restricci\u00f3n en el pl\u00e1smido (uno para cada enzima) y los dos sitios de restricci\u00f3n en el ADN sint\u00e9tico van a ser diferentes (uno para cada enzima, en el mismo orden que en el pl\u00e1smido). Si bien en esta versi\u00f3n no es posible que el gen sea insertado en la direcci\u00f3n contraria, s\u00ed es posible que se vuelva a insertar el fragmento de pl\u00e1smido entre los sitios de restricci\u00f3n, pero hay formas de controlar estos casos. Cuando usamos 2 enzimas de reestricci\u00f3n en esta forma decimos que estamos \"clonando en forma direccional\". Danger Es importante cuando se usan enzimas de restricci\u00f3n asegurarse que no haya ning\u00fan sitio de corte para las enzimas elegidas en el pl\u00e1smido ni en el ADN sint\u00e9tico fuera de los sitios involucrados en el proceso de inserci\u00f3n (ya que de existir tambi\u00e9n ser\u00e1n cortados y la inserci\u00f3n fracasar\u00e1). Repaso biol\u00f3gico - Purificaci\u00f3n y Tags","title":"Enzimas de Restricci\u00f3n"},{"location":"practicos/TP02_EMBOSS/#purificacion-y-tags","text":"Una vez que nuestros organismos hu\u00e9sped tienen el vector de expresi\u00f3n con el gen de inter\u00e9s, se los deja crecer, reproducirse y expresar la prote\u00edna de inter\u00e9s en grandes cantidades. Una vez hecho esto, es necesario extraer esa prote\u00edna de la soluci\u00f3n, lo que no es trivial. Hay varias formas de purificar prote\u00ednas y una de ellas es la cromatograf\u00eda por afinidad, la cual se basa en la uni\u00f3n reversible entre el analito de inter\u00e9s (en nuestro caso la VpVan ) y un ligando espec\u00edfico, inmovilizado en un soporte s\u00f3lido inerte. Cuando la muestra pasa por la columna, s\u00f3lo son retenidas las mol\u00e9culas que se unen de manera selectiva al ligando por afinidad y las que no se unen avanzan con la fase m\u00f3vil. La figura a continuaci\u00f3n muestra un ejemplo donde se usan anticuerpos inmovilizados en una columna para purificar a la prote\u00edna roja del resto de la soluci\u00f3n: Uno podr\u00eda asumir entonces que para poder construir estas columnas es necesario conseguir un ligando que reconozca a nuestra prote\u00edna de inter\u00e9s. Si bien esto es te\u00f3ricamente cierto, como nosotros estamos sintetizando el ADN desde cero podemos pensar lateralmente y agregarle a nuestra prote\u00edna una secuenc\u00eda aminoac\u00eddica en uno de sus extremos para la cual ya conozcamos ligandos. Estas secuencias pueden ser desde pocos amino\u00e1cidos hasta a prote\u00ednas peque\u00f1as y son denominadas tags .","title":"Purificaci\u00f3n y Tags"},{"location":"practicos/TP02_EMBOSS/#bases-del-experimento","text":"Volviendo a nuestro experimento, queremos insertar el gen de VpVan en un vector de expresi\u00f3n. Nuestro organismo hu\u00e9sped es: E. coli BL21 Como queremos clonar en forma direccional tenemos que usar dos enzimas de restricci\u00f3n . Ellas son: BamHI HindIII Al momento de purificar necesitamos agregarle un tag a la prote\u00edna. Vamos a probar 3 tags diferentes: FLAG-tag His-tag MBP-tag Por cuestiones de practicidad, todos los tags van a estar en el C-terminal. En los siguientes ejercicios vamos a: Ejercicio 1: Generar secuencias quim\u00e9ricas VpVan-Tag agregando diferentes tags de inter\u00e9s a la secuencia prote\u00edca de VpVan Ejercicio 2: Obtener el genoma del organismo hu\u00e9sped E. coli BL21 (necesario para el Ejercicio 3 ) Ejercicio 3: Generar una tabla de frecuencia de uso de codones del organismo hu\u00e9sped Ejercicio 4: Generar la secuencia nucleot\u00eddica VpVan-Tag con los codones optimizados para el organismo hu\u00e9sped Ejercicio 5: Verificar que no hayan quedado sitios de corte para nuestras enzimas de restricci\u00f3n dentro de la secuencia VpVan-Tag optimizada y luego agregar los sitios de restricci\u00f3n en los bordes de la secuencia","title":"Bases del experimento"},{"location":"practicos/TP02_EMBOSS/#ejercicio-1-secuencias-aminoacidicas-vpvan-tag","text":"Vamos a generar las secuencias de amino\u00e1cidos quim\u00e9ricas VpVan-Tag (donde Tag = FLAG/His/MBP). Para esto van a necesitar los siguientes archivos que se encuentras en sus materiales de trabajo: VpVan.fasta FLAG-tag.fasta His-tag.fasta MBP-tag.fasta Es altamente recomendado que creen diferentes carpetas para los diferentes TPs y en algunos casos para los diferentes ejercicios (especialemente en este). El nombre y la ubicaci\u00f3n lo pueden decidir ustedes, pero un ejemplo para este ejercicio ser\u00eda ~/Documentos/TP_02/EJ_1 . Una vez creada la carpeta para este ejercicio, muevan los cuatro archivos anteriores a dicha carpeta. Tip Recuerden que es preferible no usar espacios al crear directorios o archivos Nuestro objetivo ahora es crear 3 nuevos archivos FASTA que contengan las diferentes construcciones ( VpVan + cada uno de los tags). Vamos a llamarlos VpVan-FLAG-tag.fasta y similar (reemplazando el nombre del tag en cada caso). Ahora bien, como son solo 3 tags esto se podr\u00eda hacer a mano copiando y pegando, pero es un buen momento para profundizar en dos conceptos que aprendimos la clase pasada: scripts y ciclos . Creen un archivo vacio de texto en esa carpeta y llamenl\u00f3 agregar_tags.sh . Dentr\u00f3 del archivo pongan lo siguiente: C\u00f3digo C\u00f3digo con comentarios vpvan_sequence = ` cat VpVAN.fasta | grep -v \">\" ` lista_de_archivos_tags = ` ls *-tag.fasta ` for archivo_tag in $lista_de_archivos_tags do tag_sequence = ` cat $archivo_tag | grep -v \">\" ` new_header = \">VpVAN- $archivo_tag \" combined_sequence = \" $vpvan_sequence$tag_sequence \" echo \" $new_header \" > VpVAN- $archivo_tag echo \" $combined_sequence \" >> VpVAN- $archivo_tag done # Aca estamos ejecutando comandos de Linux y guardando su output en una variable # En estos casos hay que rodear a los comandos con ` (acento grave o comilla invertida) # Leemos el FASTA de VpVAN y nos quedamos solo con la secuencia # (estamos removiendo con grep cualquier linea que tenga >, que aca es solo el header) vpvan_sequence = ` cat VpVAN.fasta | grep -v \">\" ` # Creamos una lista que contiene a todos los archivos que terminan con -tag.fasta # (esto va a mirar solo archivos que est\u00e9n en la carpeta donde se corre el script) lista_de_archivos_tags = ` ls *-tag.fasta ` # Este es una estructura a la que llamamos *for each* en el TP 1. Es un *for*, pero en vez de tener # una cantidad determinada de ciclos, recorre cada uno de los elementos de una lista for archivo_tag in $lista_de_archivos_tags do # Leemos el FASTA del tag y nos quedamos solo con la secuencia tag_sequence = ` cat $archivo_tag | grep -v \">\" ` # Creamos una variable que almacene el nuevo header para la secuencia de VpVAN + tag new_header = \">VpVAN- $archivo_tag \" # Calculamos la nueva secuencia VpVAN + tag combined_sequence = \" $vpvan_sequence$tag_sequence \" # Escribimos el nuevo header y la nueva secuencia en un nuevo archivo echo \" $new_header \" > VpVAN- $archivo_tag echo \" $combined_sequence \" >> VpVAN- $archivo_tag done Como recordatorio del TP 1: cat lee archivos de texto y los escribe en la consola | desvia la salida de un programa para que funcione como entrada del siguiente grep filtra texto, quedandos\u00e9 solo con aquellas l\u00edneas que contengan un texto dado (y de usar la opci\u00f3n -v se queda solo con aquellas que no lo contengan) ls lista los archivos y carpetas dentro del directorio actual echo escribe un texto por consola > desvia la salida que \u00edria a consola hacia un archivo de texto, sobrescribiendolo >> desvia la salida que \u00edria a consola hacia un archivo de texto, sin sobreescribirlo (agrega lineas al final) for , in , do y done son todas partes del ciclo for each . El c\u00f3digo entre do y done se va a repetir por cada elemento en $lista_de_archivos_tags , donde en cada iteraci\u00f3n la variable $archivo_tag toma el valor de uno de esos elementos Hay dos cosas en este script que no vimos en el TP 1. La primera es que estamos ejecutando comandos de Bash y guardando su salida en variables. En estos casos es necesario rodear el comando con ` , llamado acento grave o comilla invertida. Por ejemplo: variable = ` comando -opciones parametro1 parametro2 ` La segunda novedad es el uso de * con el comando ls . En todo lo que es Linux el caracter * funciona como comod\u00edn, tomando cualquier valor. Esto quiere decir que ls *-tag.fasta va a listar todos los archivos cuyos nombres terminen con \"-tag.fasta\" , sin importar como empiecen (pueden probar correr el comando ls *-tag.fasta a mano en la consola y ver que devuelve). \u00bfEntienden ahora lo que hace el script? Lean la pesta\u00f1a C\u00f3digo con comentarios para aclarar cualquier duda que tengan sobre \u00e9l (y si todav\u00eda no se entiende no duden en preguntar). Ahora abran la consola y corran el script que acabamos de crear, generando as\u00ed los nuevos 3 archivos. Tip Recuerden que los script se corren con bash ARCHIVO_SCRIPT \u00a1Ya tenemos nuestras secuencias quim\u00e9ricas! Tip Este script va a dar problemas si se lo corre multiples veces. Esto se debe a que al correrlo la primera vez estamos creando m\u00e1s archivos que terminan con \"-tag.fasta\", que en una segunda corrida van a ser detectados por el ls . Si no quieren tener problemas con esto pueden agregar el siguiente c\u00f3digo luego de dicho comando: | grep -v \"VpVAN\"","title":"Ejercicio 1 - Tags"},{"location":"practicos/TP02_EMBOSS/#ejercicio-2-genoma-de-e-coli","text":"Nosotros queremos expresar el gen de un organismo en otro organismo. Si bien el c\u00f3digo gen\u00e9tico es practicamente universal, diferentes organismos pueden tener preferencia para diferentes codones que generan un mismo amino\u00e1cido. Por esta raz\u00f3n, al hacer expresi\u00f3n recombinante heter\u00f3loga es una buena idea cambiar los codones del gen de inter\u00e9s para que matcheen mejor con los codones que prefiere el organismo hu\u00e9sped (se modifica el ADN pero se sigue produciendo la misma prote\u00edna). El primer paso para realizar esta modificaci\u00f3n es conocer cuales son los codones preferidos por dicho organismo. Busquen usando el comando wossname que programas de EMBOSS trabajan con codones (recuerden que est\u00e1 en ingl\u00e9s, asi que tienen que buscar \"codon\"). Lean la descripci\u00f3n de dichos programas, \u00bfcual les parece que vamos a usar para calcular la tabla de uso de codones? Respuesta cusp , cuya descripci\u00f3n es \"Create a codon usage table from nucleotide sequence(s)\" Si leen la descripci\u00f3n del programa, ver\u00e1n que pide una secuencia de nucle\u00f3tidos, es decir, que necesitamos un FASTA del genoma completo de E. coli (ya que \u00e9ste es nuestro organismo hu\u00e9sped). Un buen lugar para obtener informaci\u00f3n de genomas, genes, y prote\u00ednas es RefSeq , que es una colecci\u00f3n curada de secuencias nucleot\u00eddicas y sus productos. En su FAQ ( Frequently Asked Questions , o preguntas frecuentes ) hay una pregunta que es b\u00e1sicamente lo que queremos hacer nosotros: How can I download RefSeq data for all complete bacterial genomes? Si bien los comandos que ellos sugieren son un poco complejos, vamos a utilizarlos y tratar de explicarlos lo mejor posible. Tip Antes de seguir les recomendamos crear una carpeta nueva para este ejercicio, por ejemplo ~/Documentos/TP_02/EJ_2 .","title":"Ejercicio 2 - Genoma de E. coli"},{"location":"practicos/TP02_EMBOSS/#refseq-paso-1-bajar-y-filtrar-la-tabla-con-los-genomas","text":"El primer paso indicado en el FAQ es descargar el archivo assembly_summary.txt y ponerlo en la carpeta de este ejercicio. Esto lo pueden hacer desde la p\u00e1gina de RefSeq a mano o abriendo la consola en la carpeta de este ejercicio y corriendo: wget ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/bacteria/assembly_summary.txt Question \u00bfQu\u00e9 piensan que hace wget ? \u00bfC\u00f3mo pueden averiguarlo si no lo saben? Una vez descargado ese archivo (que pesa bastante) queremos ver sus contenidos. Sabiendo que es un archivo que tiene m\u00e1s de 250.000 lineas: \u00bfQu\u00e9 comando usar\u00edan para ver que tipo de datos tiene adentro? Pruebenlo. Dado que es un archivo con muchas columnas, probablemente les cueste entender lo que est\u00e1n viendo aunque hayan usado el comando correcto. Para entender la estructura de nuestro archivo vamos a crear un archivo temporal que tenga solo las primeras 20 filas de este archivo: head -20 assembly_summary.txt > assembly_summary_temporal.tsv Lo \u00fanico que les deber\u00eda llamar la atenci\u00f3n del comando anterior es que el nuevo archivo tiene la extensi\u00f3n tsv . Esto lo mencionamos por arriba en el TP 1, pero los archivos TSV o \"Tab-Separated Values\" son archivos de texto que contienen una tabla donde sus columnas est\u00e1n separadas entre ellas por un Tab , lo cual es exactamente el caso de la tabla actual. Hagan doble click sobre el archivo assembly_summary_temporal.tsv . La extensi\u00f3n tsv en nuestra m\u00e1quina virtual est\u00e1 asociada al programa Gnumeric (similar a Excell o a Google Sheets). Gnumeric va a detectar autom\u00e1ticamente que las columnas est\u00e1n separadas por Tab . Identifiquen la columna correspondiente a la especie (son solo las primeras 20 filas, no van a encontrar a E. coli ), la cepa y el link a la ubicaci\u00f3n del genoma. Ahora que conocen la estructura de la tabla, y sabiendo que tiene muchos mas organismos que E. coli , tenemos que filtrar el archivo y quedarnos solo con nuestro organismo y cepa de inter\u00e9s. Para esto, corran los siguientes comandos uno a la vez: C\u00f3digo C\u00f3digo con comentarios head -2 assembly_summary.txt > assembly_summary_coli.tsv grep \"Escherichia coli\" assembly_summary.txt | grep \"BL21\" >> assembly_summary_coli.tsv # Generamos un nuevo archivo con el header de la tabla (que en este caso son 2 filas) head -2 assembly_summary.txt > assembly_summary_coli.tsv # Buscamos dentro del archivo las filas que contengan \"Escherichia coli\" y \"BL21\" y # las agregamos a la nuevo archivo head grep \"Escherichia coli\" assembly_summary.txt | grep \"BL21\" >> assembly_summary_coli.tsv","title":"RefSeq - Paso 1"},{"location":"practicos/TP02_EMBOSS/#refseq-paso-2-crear-un-archivo-con-links-a-las-carpetas-de-los-genomas","text":"Ahora que tenemos y entendemos la tabla con nuestros datos de E. coli la podemos abrir en Gnumeric haciendo doble click. Van a ver que no hay solo un genoma de E. coli BL21, sino varios, por lo cual nuestro objetivo de crear una tabla de codones acaba de volverse un poco m\u00e1s complicado. Lo que vamos a hacer entonces es bajar todos los genomas de E. coli BL21 que vemos en la tabla, as\u00ed que continuamos al segundo paso en el FAQ de RefSeq : awk -F \"\\t\" '{if ($12==\"Complete Genome\" && $11==\"latest\") {print $20}}' assembly_summary_coli.tsv > ftpdirpaths Al comando awk lo vimos brevemente al final del TP 1 y sirve para trabajar con tablas en Bash (entre otras cosas). Las diferentes partes de este comando son: -F \"\\t\" indica que el separador de columnas es \\t , o sea, Tab $12==\"Complete Genome\" es una condici\u00f3n que filtra las filas, qued\u00e1ndose solo con aquellas donde la columna 12 ( assembly_level ) es \"Complete Genome\" $11==\"latest\" es una condici\u00f3n que filtra las filas, qued\u00e1ndose solo con aquellas donde la columna 11 ( version_status ) es \"latest\" && se denomina and y une ambas condiciones, pidiendo que ambas se cumplan para que la condici\u00f3n total se cumpla {print $20} indica que se va a devolver la columna 20 ( ftp_path , contiene el path del genoma, o sea, la carpeta) Este comando va a crear el archivo ftpdirpaths , que contiene links a las carpetas que contienen los genomas. Investiguen cuantos links quedaron en ftpdirpaths . \u00bfEntienden por qu\u00e9? Sino consulten.","title":"RefSeq - Paso 2"},{"location":"practicos/TP02_EMBOSS/#refseq-paso-3-crear-un-archivo-con-links-a-los-genomas","text":"Los links que tenemos de momento tienen el formato: ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/833/145/GCF_000833145.1_ASM83314v1 Sin embargo, estos son links a las carpetas que contienen los genomas. Siguiendo las instrucciones del FAQ de RefSeq podemos crear el link de los genomas, que para el ejemplo anterior ser\u00eda: ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/833/145/GCF_000833145.1_ASM83314v1/GCF_000833145.1_ASM83314v1_cds_from_genomic.fna.gz Donde el nombre del archivo es el nombre de la \u00faltima carpeta + \"_cds_from_genomic.fna.gz\" Los archivos terminados en .fna.gz son secuencias en formato FASTA ( f ) de nucle\u00f3tidos ( na ) comprimidas ( gz ). Hay varias formas de crear estos nuevos links. Nosotros lo vamos a hacer de la siguiente manera: awk -F \"/\" '{print $0 \"/\" $10 \"_cds_from_genomic.fna.gz\"}' ftpdirpaths > ftpfilepaths Donde: -F \"/\" indica que el separador de columnas es / . Lo que est\u00e1 haciendo este c\u00f3digo es leer nuestros paths como si fueran tablas de varias columnas, haciendo que cada carpeta quede en su propia columna. $0 parecer\u00eda indicar la columna 0, pero las columnas en awk van de 1 en adelante ( $1 , $2 , etc). El \u00edndice $0 es un \u00edndice especial que devuelve toda la fila (que en este caso es todo el path a la carpeta del genoma). $10 es la columna 10, la cual contiene el nombre del genoma (es el nombre de la \u00faltima carpeta en el path ). print va a concatenar $0 (el path a la carpeta del genoma), \"/\" (una barra para separar los directorios), $10 (la primera parte del nombre del archivo a descargar) y \"_cds_from_genomic.fna.gz\" (la segunda parte del nombre del archivo a descargar). awk va a hacer esto por cada fila del archivo ftpdirpaths . Una vez que entienden lo que hace este comando abran la terminal y corranl\u00f3. Por si se quedaron con curiosidad de el comando que propon\u00eda el FAQ de RefSeq El comando awk que sugeria el FAQ de RefSeq es un poco m\u00e1s complejo, pero llegaba al mismo resultado. Noten que en este comando el archivo tiene la extensi\u00f3n .gbff.gz que hace referencia al formato de GenBank , que no es el con el que vamos a trabajar. Hay que cambiarlo por \"cds_from_genomic.fna.gz\" awk 'BEGIN{FS=OFS=\"/\";filesuffix=\"genomic.gbff.gz\"}{ftpdir=$0;asm=$10;file=asm\"_\"filesuffix;print ftpdir,file}' ftpdirpaths > ftpfilepaths No es necesario que lo entiendan 100%, pero vamos a aclarar algunas cosas: BEGIN significa que las cosas entre las primeras llaves se van a ejecutar solo una vez, y no una vez por fila (como el resto). FS es una variable interna de awk que indica como se separan las columnas en la tabla a leer (es equivalente a usar -F ). La variable OFS indica lo mismo, pero para la salida de awk . Con FS=OFS=\"/\" estamos indicando que ambos ser\u00e1n la barra / . Lo que est\u00e1 haciendo este c\u00f3digo es leer nuestros paths como si fueran tablas de varias columnas, haciendo que cada carpeta quede en su propia columna. En filesuffix=\"cds_from_genomic.fna.gz\" est\u00e1 definiendo una variable en la que va a almacenar la cadena de texto que queremos agregar al final de cada link. En ftpdir=$0 est\u00e1 definiendo una variable en la que parece almacenar la columna 0. Ahora bien, las columnas en awk van de 1 en adelante ( $1 , $2 , etc), pero el \u00edndice $0 es un \u00edndice especial que devuelve toda la fila (que en este caso es todo el path a la carpeta del genoma). En asm=$10 est\u00e1 definiendo una variable en la que va a almacenar la columna 10, la cual contiene el nombre del genoma (es el nombre de la \u00faltima carpeta en el path ). En file=asm\"_\"filesuffix est\u00e1 definiendo una nueva variable como la concatenaci\u00f3n de asm , un gui\u00f3n bajo y filesuffix . Este va a ser el nombre del archivo a descargar (pero todav\u00eda le falta el path ). print ftpdir,file va a imprimir el valor de ftpdir (el path a la carpeta del genoma) seguido por el valor de file (el nombre del archivo a descargar) por cada fila del archivo ftpdirpaths . La barra entre ambos ( / ) es agregada automaticamente debido a que declaramos OFS=\"/\" al principio.","title":"RefSeq - Paso 3"},{"location":"practicos/TP02_EMBOSS/#refseq-paso-4-descargar-genomas-de-e-coli","text":"Ya falta poco para tener nuestros genomas, solo hay que descargar todos los links que tenemos adentro del archivo ftpfilepaths . Esto se puede hacer usando el comando wget . Ahora bien, por defecto a wget hay que pasarle un link de descarga como hicimos arriba, pero por suerte existe una opci\u00f3n que permite pasarle un archivo de entrada y que descargue todos los links que se encuentran en \u00e9l. Usen wget -h (mas conciso) o man wget (mas extenso) para ver las diferentes opciones de wget , encuentren la que se usa para pasarle un archivo de entrada (o fichero o input file ) con links (o URLs ) y usen wget con ftpfilepaths para bajar todos los genomas que seleccionamos. Tip wget tiene bastantes opciones, asi que para hacerla un poco m\u00e1s f\u00e1cil sepan que la opci\u00f3n que necesitan es una de las 15 primeras y est\u00e1 en la secci\u00f3n Ficheros de registro y de entrada (o Logging and input file ) Este comando puede tardar un rato en descargar todo y va a bajar 11 archivos con extensi\u00f3n .fna.gz donde .fna es una extensi\u00f3n que hace referencia a que el archivo contiene informaci\u00f3n de secuencia (similar a FASTA) y .gz es la extensi\u00f3n de los archivos comprimidos de Linux.","title":"RefSeq - Paso 4"},{"location":"practicos/TP02_EMBOSS/#ejercicio-3-construir-tabla-de-frecuencias-de-uso-de-codones","text":"Tras lo que parece una eternidad por fin tenemos nuestros genomas. Ahora es momento de usar el comando cusp del que hablamos al principio del ejercicio anterior para transformar nuestros genomas en tablas con frecuencias de uso de codones. Como tenemos varios archivos .fna.gz vamos a tener que correr el comando cusp varias veces, y la mejor forma de hacer esto es creando un script con un ciclo for each que lo haga por nosotros. Usando las siguientes 2 lineas de c\u00f3digo, creen un script que contenga un for each que recorra todos los archivos .fna.gz que acabamos de descargar, los descomprima y ejecute el comando cusp para cada uno: # Creamos una lista que contiene a todos los archivos que empiezan con \"GCF\" y terminan con \".gz\" lista_de_archivos_genomas = ` ls GCF*.gz ` # Descomprimimos el archivo \".gz\" y corremos el comando *cusp* para cada $archivo_genoma de la lista zcat $archivo_genoma | cusp -auto -sequence \"stdin\" -outfile \" ${ archivo_genoma } .cusp\" Donde: zcat es un comando que descomprime archivos .gz y devuelve su contenido por consola (similar a cat ). -auto hace que cusp use los par\u00e1metros por defecto y no nos consulte cuales usar. -sequence \"stdin\" le esta diciendo a cusp que el genoma se lo estamos dando por la consola (mediante el pipe o | ). -outfile \"${archivo_genoma}.cusp\" define el nombre del archivo de salida de cusp , que en este caso es el nombre del genoma seguido de .cusp . Si bien las llaves no son necesarias en este caso, ayudan a entender donde termina la variable y empieza el string . Idealmente habria que sacarle la extensi\u00f3n anterior al archivo (ya que ahora va a quedar .fna.gz.cusp ), pero ya tenemos bastante que hacer. Tip Lo unico que falta en el script es la estructura del for each propiamente dicho. Si no se la acuerdan pueden ver el for each que usamos en el Ejercicio 1 como gu\u00eda. Una vez creado el script, corranl\u00f3. Si ven que este script tarda mucho tiempo en correr (varios minutos sin indicar que avanza) lean esto: Cancelen la corrida apretando Ctrl + C en la terminal Usen para la pr\u00f3xima seccion los archivos ecoli_BL21_codon_table_1.cusp y ecoli_BL21_codon_table_2.cusp que se encuentra en sus materiales de trabajo","title":"Ejercicio 3 - Tablas de codones"},{"location":"practicos/TP02_EMBOSS/#comparar-tablas-de-codones","text":"Recordando nuestro objetivo, nosotros quer\u00edamos una tabla de codones de E. coli para saber como modificar el ADN de nuestra prote\u00edna de inter\u00e9s ( VpVan ) para que use aquellos codones preferidos por el organismo hu\u00e9sped. En este momento tenemos varias tablas de codones, asi que tenemos que elegir alguna. Abran uno de los archivos .cusp que acabamos de crear y vean que informaci\u00f3n tiene: Si en la tabla dentro del archivo .cusp las columnas no est\u00e1n alineadas lean esto: Por defecto Leafpad usa una fuente llamada \"Ubuntu\" , que si bien sirve para escribir cuentos, nos va a dar problemas al momento de ver ciertos archivos que vamos a usar en esta materia. En Leafpad vayan a Opciones Tipograf\u00eda... , seleccionen la fuente \"Ubuntu Mono\" y aprieten Aceptar . Las fuentes que tienen Mono en su nombre estan indicando que son monoespaciadas, o sea, que todos sus caracteres tienen el mismo ancho. Esto es ideal para cuando se quieren ver tablas o alineamientos con Leafpad , cosa que vamos a hacer bastante en esta materia. Ayuda-memoria con amino\u00e1cidos y sus abreviaturas Full Name Abbreviation (3 Letter) Abbreviation (1 Letter) Alanine Ala A Arginine Arg R Asparagine Asn N Aspartate Asp D Aspartate or Asparagine Asx B Cysteine Cys C Glutamate Glu E Glutamine Gln Q Glutamate or Glutamine Glx Z Glycine Gly G Histidine His H Isoleucine Ile I Leucine Leu L Lysine Lys K Methionine Met M Phenylalanine Phe F Proline Pro P Serine Ser S Threonine Thr T Tryptophans Trp W Tyrosine Tyr Y Valine Val V \u00bfPor qu\u00e9 hay m\u00e1s de un cod\u00f3n para cada amino\u00e1cido? \u00bfQu\u00e9 indica la columna Fraction ? \u00bfQu\u00e9 indica la columna Frequency ? (pueden encontra la respuesta usando tfm cusp , pero est\u00e1 mas claro en la ayuda online ) Ahora abran otro archivo .cusp , \u00bfnotan diferencias entre las frecuencias de uso de codones de los distintos proyectos genoma de E.Coli BL21? En un principio pareceria que ambos archivos .cusp son bastante parecidos, pero queremos estar seguros. EMBOSS tiene un programa llamado codcmp que permite comparar tablas de codones, calculando ciertos estad\u00edsticos. El programa se usa: codcmp ARCHIVO_CUSP_1 ARCHIVO_CUSP_2 ARCHIVO_SALIDA Usen este comando para comparar los dos archivos .cusp que miraron previamente y guarden la comparaci\u00f3n en un archivo llamado cusp_comparison.out . Abran cusp_comparison.out y vean los estad\u00edsticos calculados. \u00bfSon compatibles estos resultados con nuestras observaciones previas de que ambos archivos .cusp son muy parecidos? Hay entoces una noticia buena y una mala: Noticia Buena Todos las tablas de frecuencias de codones son casi id\u00e9nticas, asi que podemos usar cualquiera de ellas y va a funcionar bien. Aclaraci\u00f3n 1: Los resultados de codcmp no alcanzan para decir que las diferencias no son \"estadisticamente signficativas\" (aunque en este caso es bastante obvio). En el manual de codcmp dan algunas ideas para calcular esto. Aclaraci\u00f3n 2: Otra forma de resolver el \"problema\" de tener muchas tablas de codones podr\u00eda haber sido calcular una nueva tabla de frecuencias de codones que sea un promedio de todas las anteriores, pero esto es un trabajo complejo y no se amerita hacerlo para este caso debido a los similar que son las diferentes tablas entre s\u00ed. Noticia Mala Todos las tablas de frecuencias de codones son casi id\u00e9nticas, asi que podr\u00edamos haber bajado solo una de ellas y ahorrarnos bastante trabajo (aunque no ten\u00edamos forma de saber esto previamente).","title":"Comparar tablas de codones"},{"location":"practicos/TP02_EMBOSS/#ejercicio-4-optimizar-secuencia-a-insertar-en-base-a-la-tabla-de-codones","text":"Ya casi estamos. En este momento tenemos la tabla de frecuencia de uso de codones para E. coli BL21 y queremos aplicar dichos codones a las 3 secuencias quim\u00e9ricas que creamos en el Ejercicio 1 , es decir, codificar una secuencia amionac\u00eddica de planta en la forma m\u00e1s \u00f3ptima para su traducci\u00f3n en E. coli . Para organizar un poco los archivos volvemos a recomendar crear una carpeta para este ejercicio, por ejemplo ~/Documentos/TP_02/EJ_4 . Dentro de la carpeta copien los siguientes archivos: VpVAN-FLAG-tag.fasta (creado en el Ejercicio 1) VpVAN-His-tag.fasta (creado en el Ejercicio 1) VpVAN-MBP-tag.fasta (creado en el Ejercicio 1) Elijan alguno de los archivos .cusp creados en el Ejercicio 3, copienlo a la nueva carpeta y cambienl\u00e9 el nombre a ecoli_BL21_codon_table.cusp . Ahora bien, para hacer esta optimizaci\u00f3n de secuencias podemos usar otro de los programas de EMBOSS llamado backtranseq . Este programa toma una secuencia de amino\u00e1cidos correspondiente a una prote\u00edna de inter\u00e9s y una tabla de frecuencia de uso de codones y usa ambos para hacer una traducci\u00f3n inversa desde la secuencia prote\u00edca hacia la secuencia de ADN que, con mayor probabilidad, le dio origen. Es decir, backtranseq devuelve una secuencia de ADN a partir de una secuencia de amino\u00e1cidos. Este comando se usa: backtranseq -auto -sequence ARCHIVO_PROTEINA_FASTA -cfile ARCHIVO_CUSP -outfile ARCHIVO_SALIDA_ADN_FASTA Corran este comando 3 veces pas\u00e1ndole los archivos correctos y creen los siguientes archivos (si quieren pueden hacer script con un for each , pero no hace falta): Ecoli-DNA-VpVAN-FLAG-tag.fasta Ecoli-DNA-VpVAN-His-tag.fasta Ecoli-DNA-VpVAN-MBP-tag.fasta Tip De hacerlo a mano, aca van a tener que ejecutar tres comandos muy similares. Recuerden que pueden usar Up y Down en su terminal para navegar por los ultimos comandos utilizados y modificar lo necesario. Tambi\u00e9n puede serles \u00fatiles la tecla Home ( Inicio ) y End ( Fin ) para moverse al principio o al final del comando que est\u00e1n editando.","title":"Ejercicio 4 - Optimizar ADN"},{"location":"practicos/TP02_EMBOSS/#ejercicio-5-agregar-enzimas-de-restriccion","text":"El \u00faltimo paso es agregar los sitios de corte de enzimas de restricci\u00f3n a los costados de mi secuencia quim\u00e9rica, pero antes de eso tengo que asegurarme que dichas enzimas no tengan sitios de corte dentro de mi secuencia. Probablemente ya no les sorprenda que existe un programa de EMBOSS para hacer esto llamado remap ; sin embargo, dicho programa necesita que previamente le hayamos pasado a EMBOSS una base de datos de enzimas de restricci\u00f3n. En los materiales de trabajo van a encontrar dos archivos llamados proto.207 y withrefm.207 que contienen la informaci\u00f3n para crear la base de datos de enzimas de restricci\u00f3n. Copienlos a la carpeta donde estan trabajando y corran el comando: rebaseextract -infile withrefm.207 -protofile proto.207 Este comando les va a tirar un error, pero no porque est\u00e9 mal escrito. El problema es que este comando quiere editar archivos que no son del usuario ibioinfo , por lo que en un principio no tenemos permisos para editarlos. En estos casos hay que agregar el prefijo sudo y puede ser que Lubuntu les pida la contrase\u00f1a (parece que no escribe nada, pero eso es por seguridad, si se las pide escriban \"unsam\" y aprieten Enter ). Asi que corran: sudo rebaseextract -infile withrefm.207 -protofile proto.207 Info Solo para que sepan, los archivos proto.207 y withrefm.207 se pueden descargar de aca o aca usando wget (con los links anteriores van a bajar un \u00edndice general y luego tienen que pasarle a wget el link de los archivos que quieran). Dependiendo de cuando vayan a esa p\u00e1gina puede ser que encuentren versiones incluso mas recientes. Ahora que ya tenemos la base de datos configurada podemos usar remap , pero antes veamos un poco mas informaci\u00f3n sobre nuestras enzimas de restricci\u00f3n. Usando grep busquen dentro del archivo proto.207 a nuestras enzimas de restricci\u00f3n de inter\u00e9s ( BamHI y HindIII ). \u00bfQu\u00e9 longitud tienen los sitios de restricci\u00f3n de BamHI y HindIII ? \u00bfQu\u00e9 piensan que significa el s\u00edmbolo ^ en el sitio de restricci\u00f3n? (pueden buscar informaci\u00f3n sobre dichas enzimas online y se van a dar cuenta enseguida) Ahora que sabemos un poco m\u00e1s sobre nuestras enzimas vamos a usar el comando remap con las siguientes opciones: remap -auto -sequence ARCHIVO_ADN_FASTA -width 80 -commercial -sitelen 6 -frame 1 -enzymes all -outfile ARCHIVO_SALIDA_REMAP Donde: -auto hace que remap use los par\u00e1metros por defecto y no nos consulte cuales usar. -width indica el ancho de secuencia a mostrar en el archivo de salida. -commercial analiza solo las enzimas de restricci\u00f3n de uso comercial (entre las que se encuentran nuestras enzimas de inter\u00e9s). -sitelen indica el m\u00ednimo de longitud del sitio de restricci\u00f3n (como sabemos que los sitios de restricci\u00f3n de nuestras enzimas de inter\u00e9s tienen 6 amino\u00e1cidos ponemos ese n\u00famero). frame indica el marco de lectura a traducir (ya que el output tambien va a dar informaci\u00f3n a nivel prote\u00edna). En nuestro caso el frame es 1 (estamos en la hebra codificante y hay que traducir a partir del primer nucle\u00f3tido). enzymes indica los nombres de las enzimas a probar. Si bien podr\u00edamos haber puesto nuestras enzimas de inter\u00e9s, ponemos all para ver m\u00e1s informaci\u00f3n del output. Corran este comando 3 veces pas\u00e1ndole los archivos correctos y creen los siguientes archivos: enzimas_FLAG.out enzimas_His.out enzimas_MBP.out Una vez creados, abran los archivos con Leafpad . \u00bfEntienden lo que simboliza el archivo? (es necesario que esten usando la fuente Ubuntu Mono en Leafpad para verlo bien) Busquen nuestras enzimas de restricci\u00f3n de inter\u00e9s. \u00bfLas encuentran? \u00bfEn que categor\u00eda est\u00e1n? \u00bfSe pueden usar entonces estas enzimas de restricci\u00f3n para insertar nuestra secuencia en un pl\u00e1smido? \u00bfHay alg\u00fan tag de los tres que estabamos considerando que no se pueda usar debido a las enzimas de restricci\u00f3n que elegimos? Elijan el tag que quieren usar, copien su construcci\u00f3n Ecoli-DNA-VpVAN-???-tag.fasta a un nuevo archivo y luego cambienl\u00e9 el nombre a secuencia_final.fasta . Abran secuencia_final.fasta en Leafpad y agreguen a mano el sitio de restricci\u00f3n de BamHI al principio y el de HindIII al final. \u00a1Felicitaciones, tenemos nuestra secuencia lista para mandar a secuenciar!","title":"Ejercicio 5 - Enzimas"},{"location":"practicos/TP02_EMBOSS/#bibliografia","text":"","title":"Bibliograf\u00eda"},{"location":"practicos/TP02_EMBOSS/#online","text":"Insertar secuencias de ADN en pl\u00e1smidos Cromatograf\u00eda de afinidad","title":" Online"},{"location":"practicos/TP03_Alineamientos/","text":"TP 3 . Alineamientos de secuencias de a pares Materiales Objetivos Entender el funcionamiento b\u00e1sico del algoritmo de alineamiento de pares de secuencias de Needleman-Wunsch. Aprender a interpretar un Dot-Plot, pudiendo identificar las regiones relevantes que contienen patrones. Comprender los conceptos de similitud y homolog\u00eda de secuencias, y establecer una clara diferencia entre los mismos. Realizar un alineamiento m\u00faltiple de secuencias e interpretar qu\u00e9 informaci\u00f3n importante se puede extraer del mismo. Introducci\u00f3n El alineamiento de secuencias de a pares comprende la asignaci\u00f3n uno-a-uno de correspondencias entre los elementos que componen dichas secuencias sin alterar su orden. En dicho proceso tres eventos principales pueden tener lugar: Match (M) : Cuando los elementos enfrentados son equivalentes. Mismatch (m) : Cuando los elementos correspondientes son diferentes. Gap (g): Cuando un elemento de una secuencia no tiene par en la otra y se enfrenta a un espacio, caracterizado por un gui\u00f3n (-). Gap open: Cuando se abre un gap. Gap extend: Cuando se agregan gaps a continuaci\u00f3n de otro gap. Por ejemplo, si alineamos las secuencias AFGIVHKLIVS y AFGIHKIVS un posible resultado ser\u00eda: A F G I V H K L I V S A F G I - H K - I V S Los gaps no existen en la realidad. NO son un amino\u00e1cido o nucle\u00f3tido m\u00e1s, sino una herramienta que utilizamos para poder alinear. La principal funci\u00f3n de los alineamientos es establecer una medida de similitud entre las secuencias que participan en el mismo. Para ello es necesario definir un sistema de puntuaci\u00f3n que pese cada uno de los eventos que tienen lugar en la construcci\u00f3n del alineamiento. Asimismo, este esquema de puntajes o scoring nos permitir\u00e1 optimizar el alineamiento de forma tal que los algoritmos empleados elijan la correspondencia entre secuencias que maximice el puntaje o score global. Existen varios algoritmos de alineamiento: Los alineamientos globales (o de Needleman-Wunsch por sus creadores), se realizan apareando todos los elementos de una secuencia con todos los elementos de la otra. Este tipo de alineamientos se utiliza principalmente para comparar dos secuencias que son similares en longitud. Los alineamientos locales (o de Smith-Waterman), parean \u00fanicamente parte de las secuencias y son \u00fatiles para identificar, por ejemplo, dominios en com\u00fan. Los alineamientos mixtos , que combinan los dos anteriores. Dynamic programming Dado un par de secuencias y un sistema de puntuaci\u00f3n o scoring se pueden aplicar diversos algoritmos para encontrar el alineamiento que d\u00e9 el mejor puntaje. El algoritmo m\u00e1s popular utiliza un m\u00e9todo matem\u00e1tico llamado dynamic programming . El mismo consiste en comparar ambas secuencias construyendo una matriz del alineamiento. Brevemente: Se comienza en el extremo superior izquierdo de la matriz, con un puntaje inicial de 0. En cada paso, se calcula el costo que tiene aparejado desplazarse de una celda a la otra, dado el sistema de puntajes pre-establecido, y se elige la opci\u00f3n m\u00e1s favorable, es decir aquella que maximice el puntaje global del alineamiento. En cada iteraci\u00f3n se guarda el puntaje con el que se lleg\u00f3 a una celda dada y el movimiento que origin\u00f3 dicho camino o path , indicado t\u00edpicamente con una flecha. Una vez que la matriz est\u00e1 completa en su totalidad se puede recorrer hacia atr\u00e1s o realizar un traceback , desde el extremo inferior derecho al superior izquierdo, para reconstruir el alineamiento. La principal ventaja de este m\u00e9todo es que siempre encuentra el alineamiento \u00f3ptimo entre las secuencias dadas. Sin embargo, una desventaja es pueden existir varios alineamientos que satisfagan esta condici\u00f3n. Otra desventaja es de origen t\u00e9cnica: la exhaustividad con la que el algoritmo realiza la b\u00fasqueda hace que su velocidad dependa de la longitud de las secuencias implicadas, haciendo poco eficiente la b\u00fasqueda de similitud de una secuencia contra una base de datos. Para esto existen diferentes adaptaciones del algoritmo que se ver\u00e1n m\u00e1s adelante. Ejemplo Imaginen que queremos alinear las secuencias TCGCA y TCCA utilizando un esquema de scoring de: Match: M=1 Mismatch: m=-1 Gap: g=-2 Para eso ubicamos las secuencias en una matriz, donde cada una de sus dimensiones corresponda a una de las secuencias, tal como se muestra en la siguiente figura. Si observamos los paths 1 y 2 dibujados en las matrices de la figura podemos ver que se emplearon distintas estrategias para alinear este par de secuencias. En 1 se eligi\u00f3 alinear los dos primeros nucle\u00f3tidos TC por la diagonal, luego colocar un gap en la secuencia vertical TCCA y para finalizar se alinearon los nucle\u00f3tidos CA restantes por la diagonal. En 2 el primer nucle\u00f3tido T de ambas secuencias se aline\u00f3 por la diagonal, luego se coloc\u00f3 un gap en la secuencia vertical TCCA y finalmente se alinearon los 3 nucle\u00f3tidos GCA y CCA restantes por la diagonal. Si computamos los puntajes de ambos alineamientos, obtenemos que: La opci\u00f3n 1 tiene un puntaje de 2. Se propone colocar un \u00fanico gap permitiendo alinear al resto de los nucle\u00f3tidos en ambas secuencias con eventos de match . La opci\u00f3n 2 tiene un puntaje de 0. Las secuencias estudiadas se alinean con 1 gap , 1 mismatch y 3 matches . La estrategia es sub\u00f3ptima en relaci\u00f3n a 1 . Pregunta Si hubi\u00e9semos aplicado la metodolog\u00eda de dynamic programming para realizar un alineamiento global de estas secuencias, \u00bfcu\u00e1l ser\u00eda el path \u00f3ptimo resultante? A priori uno pensar\u00eda que es el path 1 , pero hagamos el ejercicio para corroborar si esto es efectivamente as\u00ed. Para comenzar, refresquemos c\u00f3mo funcionaba el m\u00e9todo de dynamic programming . Para llegar desde el extremo superior izquierdo (= inicio) de la matriz del alineamiento a la posici\u00f3n marcada con una x podr\u00edamos, hipot\u00e9ticamente, tomar cualquiera de los caminos dibujados en la figura de m\u00e1s arriba. Estos paths dar\u00edan alinemientos diferentes de las secuencias TC con TC . Pregunta Pero... \u00bfcu\u00e1l es el procedimiento iterativo empleado por el m\u00e9todo de dynamic programming para obtener el alineamiento \u00f3ptimo entre dos secuencias? Para llegar a cualquier celda de la matriz, uno puede acceder por, como m\u00e1ximo, 3 direcciones. La idea es siempre moverse en la direcci\u00f3n que maximice el score o puntaje. Veamos que : un movimiento en la direcci\u00f3n horizontal , de la posici\u00f3n (i, j-1) a la posici\u00f3n (i, j) , supone introducir un gap en la secuencia del eje vertical i un movimiento en la direcci\u00f3n diagonal , de la posici\u00f3n (i-1, j-1) a la posici\u00f3n (i, j) , supone un match o un mismatch entre los nucle\u00f3tidos enfrentados un movimiento en la direcci\u00f3n vertical , de la posici\u00f3n (i-1, j) a la posici\u00f3n (i, j) , supone introducir un gap en la secuencia del eje horizontal j Teniendo en cuenta la f\u00f3rmula para obtener el score enunciada m\u00e1s arriba, podemos comenzar con nuestro ejercicio! Recordemos que la matriz se llenar\u00e1 iterativamente, comenzando por la celda del extremo superior izquierdo, que tiene un puntaje de 0. Para moverse del (0, 0) al (0, 1), hay una s\u00f3la opci\u00f3n, moverse en forma horizontal . Esto significa alinear T con un gap , lo cual da un score de 0 + (-2) = -2. eje j: T eje i: - Lo mismo pasa al moverse del (0, 0) al (1, 0), hay una s\u00f3la opci\u00f3n, moverse en forma vertical . Esto significa alinear T con un gap , lo cual tambi\u00e9n da un score de 0 + (-2) = -2. eje j: - eje i: T Para moverse del (0, 0) al (1, 1) hay 3 maneras: 1. Hacer un movimiento vertical , lo cual da un score de -2 + (-2) = -4 -2 es el puntaje de la celda inicial (0, 1) El movimiento vertical implica colocar un gap : -2 Resultado: eje j: T - eje i: - T 2. Hacer un movimiento horizontal , lo cual da un score de -2 + (-2) = -4. Similar al caso anterior: -2 es el puntaje de la celda inicial (1, 0) El movimiento horizontal implica colocar un gap : -2 Resultado: eje j: - T eje i: T - 3. Hacer un movimiento diagonal , lo cual da un score de 0 + (+1). Implica alinear ambos nucl\u00e9otidos! 0 es el puntaje de la celda inicial (0, 0) Hay T en las ambas secuencias. Es un match : +1 Resultado: eje j: T eje i: T Para decidir qu\u00e9 valor ubicamos en la celda simplemente optamos por el que nos d\u00e9 el mayor score , en este caso 1, y se marca el movimiento que lo produjo: un movimiento diagonal. De esta manera podemos seguir completando la matriz, Obsevando la \u00faltima celda computada, podemos ver que hay nuevamente 3 maneras de llegar a la misma, Hacer un movimiento vertical , de (1, 3) a (2, 3): Es decir, introducir un gap en la secuencia horizontal j. Si (1, 3) tiene un score de -3, el nuevo score es: -3 + gap penalty = -3 + (-2) = -5 (flecha en direcci\u00f3n vertical). Hacer un movimiento horizontal , de (2, 2) a (2, 3). Es decir, introducir un gap en la secuencia vertical i. Si (2, 2) tiene un score de 2, el nuevo score es: 2 + gap penalty = 2 + (-2) = 0 (flecha en direcci\u00f3n horizontal). Hacer un movimiento diagonal , de (1, 2) a (2, 3). Es decir, alinear los nucle\u00f3tidos G y C. Si (1, 2) tiene un score de -1, el nuevo score es: -1 + mismatch = -1 + (-1) = -2 (flecha en direcci\u00f3n diagonal). El m\u00e1ximo de los 3 scores calculados es: max(-5, 0, -2) = 0, que corresponde al puntaje del movimiento horizontal . Entonces colocamos 0 en la celda (2, 3) y una flecha horizontal que indique el movimiento de (2, 2) a (2, 3). Al completar todas las celdas de la matriz, podemos saber cu\u00e1l es el puntaje de la celda ubicada en extremo inferior derecho, que en este caso result\u00f3 ser +2. Este tambi\u00e9n es el puntaje final del alineamiento. Para reconstruir el mismo, se parte de la celda ubicada en extremo inferior derecho y se siguen las flechas hasta llegar a la celda de inicio, en el extremo superior izquierdo. Las flechas en rojo resaltan el path del alineamiento, eje j: T C G C A eje i: T C - C A que podemos corroborar que es id\u00e9ntico al path 1 del ejemplo que se plante\u00f3 inicialmente. Ejercicio 1 1.1 En grupo, realiz\u00e1 el alineamiento de las secuencias ATTGG con AGATGG , usando el esquema de puntajes: M=1, m=-1, g=-2. Para esto, abr\u00ed el siguiente Google Jamboard , guard\u00e1 una copia local del mismo en tu Google Drive y compart\u00ed el GJamboard a tus compa\u00f1eros de equipo. Atenci\u00f3n Para guardar una copia local del GJamboard en tu GDrive, clique\u00e1 en el \u00edcono con 3 puntitos, en el extremo superior derecho (M\u00e1s acciones). Luego seleccion\u00e1 la opci\u00f3n \"Hacer una copia\". Eleg\u00ed la carpeta adonde deseas guardarlo dentro de tu unidad y clique\u00e1 aceptar. \u00a1Ahora est\u00e1s listo para empezar! Record\u00e1 rellenar la matriz con todos los puntajes y flechas faltantes. Cuando termines, reconstru\u00ed el path del alineamiento. 1.2 Cuando termines el ejercicio anterior pod\u00e9s corrobar la soluci\u00f3n que hallaste ingresando en UniFreiburg-FreiburgRNATools . Segu\u00ed las siguientes instrucciones para usar este recurso web: a. Ingres\u00e1 las dos secuencias que quer\u00e9s alinear en los recuadros de Input Sequence a y Sequence b . Record\u00e1 que la secuencia que figura en tu matriz en sentido horizontal debe ser ingresada como Sequence b y la que figura en sentido vertical debe ser ingresada como Sequence a . b. Seleccion\u00e1 optimizaci\u00f3n de Similarity. c. Complet\u00e1 los valores de tu esquema de scoring . En el output podr\u00e1s apreciar dos salidas: A la izquierda, los valores de la matriz de alineamiento. Si cliqueas sobre los valores de la matriz, vas a observar que el valor sobre el que te paraste se colorea en verde, mientras que las celdas que dieron origen a ese valor se colorean en rosa. A la derecha, se observa el alineamiento final, donde un match se esquematiza en con *, un mismatch con | y un gap con _. 1.3 Respond\u00e9 a las siguientes preguntas: 1.3.1 Reproduc\u00ed el alineamiento que vimos como ejemplo al inicio ( TCGCA con TCCA , esquema de puntajes: M=1, m=-1, g=-2) en la web de la UniFreiburg-FreiburgRNATools \u00bfCu\u00e1ntas soluciones \u00f3ptimas hay para este alineamiento? \u00bfSucede lo mismo para el alineamiento que realizaste en el Ejercicio 1.1 ? \u00bfPor qu\u00e9? 1.3.2 Observ\u00e1 con detenimiento el output del panel de la izquierda (la matriz) Seleccion\u00e1 una celda. \u00bfQu\u00e9 sucede cuando clique\u00e1s en una celda y se colorea en verde y la celda aleda\u00f1a a la misma en rosa ? \u00bfA qu\u00e9 corresponde este coloreado o resaltado de las celdas? Observ\u00e1 nuevamente la matriz del alineamiento que obtuviste en 1.2 . Cliqu\u00e9a en la celda con puntaje -2 en la posici\u00f3n (A3, T2). Observ\u00e1 que se colorea en verde y dos celdas aleda\u00f1as a la misma en rosa . \u00bfEntend\u00e9s qu\u00e9 significa esto? \u00bfPod\u00e9s relacionarlo con los dos caminos \u00f3ptimos posibles que existen para este alineamiento? 1.3.3 Finalmente te propongo que realices el siguiente alineamiento: Sequence a: AGATGG y Sequence b: ATTGGG . Seleccion\u00e1 optimizaci\u00f3n de Similarity. Esquema de puntajes: M:1, m:-1, g:-5 . Registr\u00e1 con atenci\u00f3n el resultado. Ahora cambiemos el esquema de scoring , dejando el mismo valor para match, pero intercambiando los puntajes de gap y mismatch. \u00bfC\u00f3mo cambi\u00f3 el output? \u00bfQu\u00e9 observ\u00e1s ahora en las secuencias halladas como soluci\u00f3n \u00f3ptima en comparaci\u00f3n a lo que arrojaba el algoritmo con los par\u00e1metros anteriores? Dot-Plots Los dot-plots son representaciones gr\u00e1ficas que dan un pantallazo sobre la similitud entre dos secuencias. En ellos se pueden identificar patrones que aporten informaci\u00f3n sobre la relaci\u00f3n entre ambas secuencias. La forma de obtener uno es muy sencilla: se establece una matriz donde cada elemento de una de las secuencias se corresponde con una fila y los de la otra con una columna. Acto seguido se procede a colorear cada celda donde los caracteres correspondientes a fila y columna sean equivalentes. Por ejemplo: Nosotros podemos utilizar la herramienta de EMBOSS dotmatcher para generar nuestros propios plots. Recordatorio Para ver qu\u00e9 par\u00e1metros toma de entrada la funci\u00f3n, correr en la terminal dotmatcher -h . Ejercicio 2 !agregar un ejercicio simple para entender los patrones que arroja el DotMatcher 2.1 Utiliz\u00e1 la secuencia HS-ch11-fragment.fasta que se encuentra en la carpeta data para compararla contra s\u00ed misma. Esta secuencia es un peque\u00f1o fragmento del cromosoma 1 de Homo sapiens y la vamos a utilizar \u00fanicamente para ver algunos de los patrones que podemos encontrar en un dotplot. Gener\u00e1 un dotplot utilizando la secuencia HS-ch11-fragment.fasta contra s\u00ed misma. dotmatcher -graph X11 HS-ch1-fragment.fasta HS-ch1-fragment.fasta Atenci\u00f3n Recuerden abrir el archivo HS-ch11-fragment.fasta y chequear que la secuencia es de ADN. Es una buena pr\u00e1ctica conocer qu\u00e9 hay en los archivos que vamos a utilizar. \u00bfQu\u00e9 pod\u00e9s interpretar de este dotplot? La verdad es que el plot es bastante ruidoso, esto sucede muy a menudo en secuencias gen\u00f3micas ya que la cantidad de caracteres que componen las secuencias es muy limitada (solo 4) y por ello hay muchas ocurrencias y por lo tanto muchos puntos. Para limpiar el plot y quedarnos con los matches m\u00e1s significativos podemos jugar con dos par\u00e1metros: windowsize : Tama\u00f1o de ventana threshold : Umbral de ocurrencia Esto quiere decir que dotmatcher s\u00f3lo va a poner un punto cuando un fragmento del largo windowsize contenga un score mayor a threshold . Por ejemplo: dotmatcher -graph X11 -windowsize 50 -threshold 20 HS-ch1-fragment.fasta HS-ch1-fragment.fasta Si aument\u00e1s estos par\u00e1metros pod\u00e9s ir eliminando fragmentos que corresponden a secciones compartidas m\u00e1s cortas, sin embargo existe una relaci\u00f3n de compromiso, utilizar tama\u00f1o de ventana y umbral muy grandes nos llevan a perder informaci\u00f3n por lo que hay que seleccionarlos con cuidado. Aqui hay algunos patrones con los que te pod\u00e9s encontrar en este tipo de plots: a) Match perfecto. b) Repeticiones. c) Pal\u00edndromo. d) Repeticiones invertidas. e) Zonas de baja complejidad (microsatelites). f) Zonas altamente repetitivas (minisatelites). g) Secuencias con alta conservaci\u00f3n. h) Inserci\u00f3n o deleci\u00f3n. 2.2 Cambi\u00e1 los par\u00e1metros windowsize y threshold hasta obtener un plot que te parezca adecuado. \u00bfQu\u00e9 pod\u00e9s interpretar del mismo? Identific\u00e1 patrones. Similitud y Homolog\u00eda Los t\u00e9rminos similitud y homolog\u00eda se suelen utilizar como sin\u00f3nimos por muchos investigadores, sin embargo no lo son. La similitud es una caracter\u00edstica cuantitativa de un par de secuencias, donde se establece en qu\u00e9 grado estas se parecen (por ejemplo aplicando los algoritmos antes vistos, utilizando un sistema de puntaje). La homolog\u00eda , por otro lado, es una caracter\u00edstica cualitativa, dos secuencias SON o NO SON hom\u00f3logas. Homolog\u00eda implica espec\u00edficamente que el par de secuencias estudiadas provienen de un mismo ancestro com\u00fan. Esta afirmaci\u00f3n es completamente hipot\u00e9tica, ya que, salvo en contados casos, no se puede corroborar. Uno puede inferir que este es el caso dado la similitud observada en las secuencias actuales, sin tener acceso a las secuencias ancestrales. Atenci\u00f3n Decir que un par de secuencias tiene N% de homolog\u00eda es TOTALMENTE incorrecto. A partir de esta relaci\u00f3n entre similitud y homolog\u00eda se puede aplicar para inferir relaciones entre diferentes especies, buscar posibles funciones de una secuencia desconocida, etc. Ejercicio 3 3.1 Determinar qu\u00e9 especies est\u00e1n m\u00e1s relacionadas utilizando la ribonucleasa pancre\u00e1tica de caballo ( Equus caballus ), ballena enana ( Balaenoptera acutorostrata ) y canguro rojo ( Macropus rufus ). 3.1.1 Descarg\u00e1 las secuencias antes mencionadas de la carpeta del TP. 3.1.2 Utiliz\u00e1 la herramienta de alineamiento global de EMBOSS needle (pueden leer el manual para ver que opciones admite) para comparar las tres secuencias. needle -gapopen 10 -gapextend 1 -asequence *secuencia_1* -bsequence *secuencia_2* -outfile *salida* 3.1.3 Observ\u00e1 e interpret\u00e1 las salidas obtenidas. \u00bfQu\u00e9 secuencias son m\u00e1s similares? \u00bfTiene sentido el resultado obtenido? 3.1.4 Analiz\u00e1 \u00e1rbol filogen\u00e9tico de la Fig. 1 del paper de O'Leary et al. , 2013. Sabiendo que los caballos y las ballenas pertenecen al clado Euungulata y los canguros al clado Marsupialia , ubic\u00e1 estos clado en el \u00e1rbol. \u00bfEsta informaci\u00f3n coincide con los resultados que obtuviste en 3.1.3 ? 3.2 Realiz\u00e1 el mismo procedimiento pero esta vez para determinar si los mamuts ( Mammuthus primigenius ) son m\u00e1s cercanos a los elefantes africanos ( Loxodonta africana ) o asi\u00e1ticos ( Elephas maximus ) utilizando la secuencia de la cadena alfa de la hemoglobina. 3.2.1 \u00bfQu\u00e9 te sugieren los resultados obtenidos? 3.2.2 \u00bfEs relevante la diferencia hallada? 3.2.3 \u00bfC\u00f3mo har\u00edas para sacar conclusiones m\u00e1s fuertes sobre las relaciones filogen\u00e9ticas entre los organismos estudiados en los ejercicios 3.1 y 3.2? Alineamientos m\u00faltiples Un alineamiento m\u00faltiple (MSA) involucra tres o m\u00e1s secuencias biol\u00f3gicas. Debido a que la tarea de alinear m\u00faltiples secuencias de largos biol\u00f3gicamente significativos suele ser muy demandante en t\u00e9rminos de recursos computacionales y tiempos de ejecuci\u00f3n estos requieren metodolog\u00edas m\u00e1s sofisticadas para llevarse a cabo. Por ello la mayor\u00eda de los programas disponibles para realizar MSA utiliza heur\u00edsticas en vez de algoritmos de optimizaci\u00f3n global. Heur\u00edstica Es una estrategia que busca resolver un problema m\u00e1s simple cuya soluci\u00f3n se interseca con la soluci\u00f3n de un problema m\u00e1s complejo. Generalmente esto implica que no es seguro encontrar el mejor resultado pero s\u00ed una soluci\u00f3n que sea aceptable. Las heur\u00edsticas se aplican con frecuencia en computaci\u00f3n para poder resolver problemas que, por su complejidad, ser\u00edan imposibles de abordar dados los limitados recursos con los que se cuentan. Dadas las secuencias de amino\u00e1cidos de un set de prote\u00ednas que se quieren comparar, el MSA muestra los residuos de cada prote\u00edna en una fila junto con los gaps que le correspondan de tal manera que todos los residuos \"equivalentes\" se encuentren en la misma columna. La utilidad de esta equivalencia depende de quien mire el alineamiento: Alguien que hace una filogenia puede enfocarse en que comparten un ancestro com\u00fan; Alguien que hace biolog\u00eda estructural puede enfocarse en que son residuos en posiciones an\u00e1logas de una estructura proteica; Alguien que hace biolog\u00eda molecular puede enfocarse en el rol funcional de esos residuos en la prote\u00edna. En cada caso un MSA provee un pantallazo sobre las restricciones evolutivas, estructurales o funcionales que caracterizan un set de prote\u00ednas de una manera visual e intuitiva. Un pipeline t\u00edpico para realizar un MSA ser\u00eda: Formular la pregunta que se quiere contestar. Por ejemplo, \"\u00bfQu\u00e9 estructura secundaria adopta X regi\u00f3n de mi prote\u00edna de inter\u00e9s?\" Obtener secuencias que puedan contestar a mi pregunta. Por ejemplo, secuencias que est\u00e9n relacionadas a mi prote\u00edna de inter\u00e9s. Utilizar alguno de los programas disponibles para llevar a cabo el MSA. Por ej. EMBOSS Realizar ajustes manuales para corregir posibles errores de los algoritmos de alineamiento. Ejercicio 4 (Adicional) Atenci\u00f3n Antes de comenzar a resolver los ejercicios, instal\u00e1 ClustalW en tu VM, escribiendo el siguiente comando en la terminal: sudo apt install clustalw La gp120 es una prote\u00edna que recubre al virus del HIV y facilita su uni\u00f3n e ingreso a la c\u00e9lula que infecta (linfocitos CD4+) Entre nuestros archivos contamos con un multifasta (gp120.fasta) que contiene 27 secuencias de gp120 de HIV-1, HIV-2 y SIV. Estas prote\u00ednas contienen 9 puentes disulfuro conservados. Tambi\u00e9n es de inter\u00e9s el loop V3, una porci\u00f3n expuesta de la prote\u00edna, conocido target de anticuerpos el cual constituye una regi\u00f3n hipervariable dada la presi\u00f3n selectiva a la que se ve sometido. Pueden ver la disposici\u00f3n de las distintas regiones de la gp120 en el siguiente esquema: Mathys L, Balzarini J. Several N-Glycans on the HIV Envelope Glycoprotein gp120 Preferentially Locate Near Disulphide Bridges and Are Required for Efficient Infectivity and Virus Transmission. PLoS One. 2015 Jun 29;10(6):e0130621. doi: 10.1371/journal.pone.0130621. PMID: 26121645; PMCID: PMC4488071. Figure 1. 4.1 Utiliz\u00e1 las herramientas de EMBOSS para realizar un alineamiento m\u00faltiple con las secuencias de gp120 (recuerden que para buscar herramientas pueden usar wossname ) Pista El comando a utilizar es emma . Para ver la ayuda, tipe\u00e1 emma -help en la terminal. 4.2 Utiliz\u00e1 el comando showalign de EMBOSS para obtener una mejor visualizaci\u00f3n del alineamiento. Otra alternativa Para visualizar el alineamiento correctamente le sugerimos usar el comando cat en la consola. Si desea ver el archivo con Leafpad recuerde ingresar a Opciones > Tipograf\u00eda y seleccionar Ubuntu Mono. 4.3 Observ\u00e1 el alineamiento, como primer control podemos corroborar que las 18 Ciste\u00ednas ( C ) est\u00e9n bien alineadas. 4.4 Utiliz\u00e1 el esquema de gp120 para identificar diversas regiones ya sea conservadas o muy variables (Estructuras, loops, etc.) Tip Not\u00e1 que las posiciones en el alineamiento cuentan gaps por lo que no se corresponden exactamente con el esquema. Utiliz\u00e1 las posiciones de las ciste\u00ednas conservadas para identificar diferentes regiones. Ejercicio a informar Info Fecha de Entrega: Viernes, X de septiembre 2021, 23:59hs. Materiales Enunciado Usted trabaja en un laboratorio que estudia distintos aspectos del coronavirus. Desde el comienzo de la pandemia trabaja en colaboraci\u00f3n con la agencia de vigilancia epidemiol\u00f3gica nacional de agentes infecciosos (AVENAI). Como parte de la colaboraci\u00f3n, todos los d\u00edas se obtienen clones y secuencias de nuevos aislamientos. AVENAI comparte con su jefe un nuevo aislamiento. Su jefe lo pone a cargo de analizar dicho aislamiento para extraer toda la informaci\u00f3n bioinform\u00e1tica posible de su colecci\u00f3n de datos. Breve descripci\u00f3n de la Familia Coronaviridae Los coronavirus son virus envueltos ARN simple cadena positivos (es decir que su genoma puede ser traducido directamente a prote\u00ednas virales por los ribosomas del hospedador). En la envoltura viral se encuentra la prote\u00edna E y la prote\u00edna Spike. En el interior, se encuentra el genoma ARN asociado con la prote\u00edna N formando la nucleoc\u00e1pside. La subfamilia Coronavirinae est\u00e1 formada por cuatro g\u00e9neros: Alphacoronavirus , Betacoronavirus , Gammacoronavirus y Deltacoronavirus . Cada g\u00e9nero agrupa distintas especies. Cada especie agrupa distintos tipos virales y cada tipo viral posee distintas variantes (algunos eligen llamarlas cepas o aislamientos, pero ac\u00e1 las llamamos variantes). En particular, SARS-CoV2 tambi\u00e9n conocido como COVID-19, se encuentra dentro del g\u00e9nero Betacoronavirus . Ahora si ... Usted cuenta con un conjunto de secuencias que utiliza normalmente en su laboratorio que guarda en el archivo All_Sequences.fasta , el record en All_Sequences.gb y datos de inter\u00e9s propio en conjunto_de_secuencias.xlsx . Pero\u2026 Cuando usted recibe los datos ( sequence_incognito.fasta ) se da cuenta que se olvidaron de nombrar correctamente un archivo! AVENAI trabaja con tantas secuencias que de vez en cuando se producen errores comunes como este. Para solucionarlo decide utilizar las herramientas que aprendi\u00f3 en el trabajo pr\u00e1ctico N3 de bioinform\u00e1tica cuando era estudiante y decide: Comparar la secuencia del nuevo aislamiento con la que crea m\u00e1s conveniente de su conjunto de secuencias. \u00bfPertenece el nuevo aislamiento a un coronavirus? Para responder a esta pregunta le sugerimos que realice un dotplot que le permita visualizar el alineamiento entre su secuencia inc\u00f3gnita y la(s) secuencias de su inter\u00e9s. Identifique y reporte qu\u00e9 patrones observa en el dotplot. Ahora quisiera saber a qu\u00e9 coronavirus se parece m\u00e1s, para esto decide determinar el % de similitud que posee su secuencia con el conjunto de secuencias con las que usted trabaja com\u00fanmente. Tip Si necesitan dividir el archivo All_Sequences.fasta en archivos individuales pueden buscar wossname split . Extra! (y por ende opcional) Para resolver el punto 2 ustedes pueden hacer un script de bash usando entre otras cosas un ciclo for . Si lo logran (o si lo intentan), los invito a incluirlo en el trabajo pr\u00e1ctico (a\u00fan cuando no les sali\u00f3).","title":"Index"},{"location":"practicos/TP03_Alineamientos/#tp-3-alineamientos-de-secuencias-de-a-pares","text":"Materiales","title":"data-toc-label"},{"location":"practicos/TP03_Alineamientos/#objetivos","text":"Entender el funcionamiento b\u00e1sico del algoritmo de alineamiento de pares de secuencias de Needleman-Wunsch. Aprender a interpretar un Dot-Plot, pudiendo identificar las regiones relevantes que contienen patrones. Comprender los conceptos de similitud y homolog\u00eda de secuencias, y establecer una clara diferencia entre los mismos. Realizar un alineamiento m\u00faltiple de secuencias e interpretar qu\u00e9 informaci\u00f3n importante se puede extraer del mismo.","title":"Objetivos"},{"location":"practicos/TP03_Alineamientos/#introduccion","text":"El alineamiento de secuencias de a pares comprende la asignaci\u00f3n uno-a-uno de correspondencias entre los elementos que componen dichas secuencias sin alterar su orden. En dicho proceso tres eventos principales pueden tener lugar: Match (M) : Cuando los elementos enfrentados son equivalentes. Mismatch (m) : Cuando los elementos correspondientes son diferentes. Gap (g): Cuando un elemento de una secuencia no tiene par en la otra y se enfrenta a un espacio, caracterizado por un gui\u00f3n (-). Gap open: Cuando se abre un gap. Gap extend: Cuando se agregan gaps a continuaci\u00f3n de otro gap. Por ejemplo, si alineamos las secuencias AFGIVHKLIVS y AFGIHKIVS un posible resultado ser\u00eda: A F G I V H K L I V S A F G I - H K - I V S Los gaps no existen en la realidad. NO son un amino\u00e1cido o nucle\u00f3tido m\u00e1s, sino una herramienta que utilizamos para poder alinear. La principal funci\u00f3n de los alineamientos es establecer una medida de similitud entre las secuencias que participan en el mismo. Para ello es necesario definir un sistema de puntuaci\u00f3n que pese cada uno de los eventos que tienen lugar en la construcci\u00f3n del alineamiento. Asimismo, este esquema de puntajes o scoring nos permitir\u00e1 optimizar el alineamiento de forma tal que los algoritmos empleados elijan la correspondencia entre secuencias que maximice el puntaje o score global. Existen varios algoritmos de alineamiento: Los alineamientos globales (o de Needleman-Wunsch por sus creadores), se realizan apareando todos los elementos de una secuencia con todos los elementos de la otra. Este tipo de alineamientos se utiliza principalmente para comparar dos secuencias que son similares en longitud. Los alineamientos locales (o de Smith-Waterman), parean \u00fanicamente parte de las secuencias y son \u00fatiles para identificar, por ejemplo, dominios en com\u00fan. Los alineamientos mixtos , que combinan los dos anteriores.","title":"Introducci\u00f3n"},{"location":"practicos/TP03_Alineamientos/#dynamic-programming","text":"Dado un par de secuencias y un sistema de puntuaci\u00f3n o scoring se pueden aplicar diversos algoritmos para encontrar el alineamiento que d\u00e9 el mejor puntaje. El algoritmo m\u00e1s popular utiliza un m\u00e9todo matem\u00e1tico llamado dynamic programming . El mismo consiste en comparar ambas secuencias construyendo una matriz del alineamiento. Brevemente: Se comienza en el extremo superior izquierdo de la matriz, con un puntaje inicial de 0. En cada paso, se calcula el costo que tiene aparejado desplazarse de una celda a la otra, dado el sistema de puntajes pre-establecido, y se elige la opci\u00f3n m\u00e1s favorable, es decir aquella que maximice el puntaje global del alineamiento. En cada iteraci\u00f3n se guarda el puntaje con el que se lleg\u00f3 a una celda dada y el movimiento que origin\u00f3 dicho camino o path , indicado t\u00edpicamente con una flecha. Una vez que la matriz est\u00e1 completa en su totalidad se puede recorrer hacia atr\u00e1s o realizar un traceback , desde el extremo inferior derecho al superior izquierdo, para reconstruir el alineamiento. La principal ventaja de este m\u00e9todo es que siempre encuentra el alineamiento \u00f3ptimo entre las secuencias dadas. Sin embargo, una desventaja es pueden existir varios alineamientos que satisfagan esta condici\u00f3n. Otra desventaja es de origen t\u00e9cnica: la exhaustividad con la que el algoritmo realiza la b\u00fasqueda hace que su velocidad dependa de la longitud de las secuencias implicadas, haciendo poco eficiente la b\u00fasqueda de similitud de una secuencia contra una base de datos. Para esto existen diferentes adaptaciones del algoritmo que se ver\u00e1n m\u00e1s adelante.","title":"Dynamic programming"},{"location":"practicos/TP03_Alineamientos/#ejemplo","text":"Imaginen que queremos alinear las secuencias TCGCA y TCCA utilizando un esquema de scoring de: Match: M=1 Mismatch: m=-1 Gap: g=-2 Para eso ubicamos las secuencias en una matriz, donde cada una de sus dimensiones corresponda a una de las secuencias, tal como se muestra en la siguiente figura. Si observamos los paths 1 y 2 dibujados en las matrices de la figura podemos ver que se emplearon distintas estrategias para alinear este par de secuencias. En 1 se eligi\u00f3 alinear los dos primeros nucle\u00f3tidos TC por la diagonal, luego colocar un gap en la secuencia vertical TCCA y para finalizar se alinearon los nucle\u00f3tidos CA restantes por la diagonal. En 2 el primer nucle\u00f3tido T de ambas secuencias se aline\u00f3 por la diagonal, luego se coloc\u00f3 un gap en la secuencia vertical TCCA y finalmente se alinearon los 3 nucle\u00f3tidos GCA y CCA restantes por la diagonal. Si computamos los puntajes de ambos alineamientos, obtenemos que: La opci\u00f3n 1 tiene un puntaje de 2. Se propone colocar un \u00fanico gap permitiendo alinear al resto de los nucle\u00f3tidos en ambas secuencias con eventos de match . La opci\u00f3n 2 tiene un puntaje de 0. Las secuencias estudiadas se alinean con 1 gap , 1 mismatch y 3 matches . La estrategia es sub\u00f3ptima en relaci\u00f3n a 1 . Pregunta Si hubi\u00e9semos aplicado la metodolog\u00eda de dynamic programming para realizar un alineamiento global de estas secuencias, \u00bfcu\u00e1l ser\u00eda el path \u00f3ptimo resultante? A priori uno pensar\u00eda que es el path 1 , pero hagamos el ejercicio para corroborar si esto es efectivamente as\u00ed. Para comenzar, refresquemos c\u00f3mo funcionaba el m\u00e9todo de dynamic programming . Para llegar desde el extremo superior izquierdo (= inicio) de la matriz del alineamiento a la posici\u00f3n marcada con una x podr\u00edamos, hipot\u00e9ticamente, tomar cualquiera de los caminos dibujados en la figura de m\u00e1s arriba. Estos paths dar\u00edan alinemientos diferentes de las secuencias TC con TC . Pregunta Pero... \u00bfcu\u00e1l es el procedimiento iterativo empleado por el m\u00e9todo de dynamic programming para obtener el alineamiento \u00f3ptimo entre dos secuencias? Para llegar a cualquier celda de la matriz, uno puede acceder por, como m\u00e1ximo, 3 direcciones. La idea es siempre moverse en la direcci\u00f3n que maximice el score o puntaje. Veamos que : un movimiento en la direcci\u00f3n horizontal , de la posici\u00f3n (i, j-1) a la posici\u00f3n (i, j) , supone introducir un gap en la secuencia del eje vertical i un movimiento en la direcci\u00f3n diagonal , de la posici\u00f3n (i-1, j-1) a la posici\u00f3n (i, j) , supone un match o un mismatch entre los nucle\u00f3tidos enfrentados un movimiento en la direcci\u00f3n vertical , de la posici\u00f3n (i-1, j) a la posici\u00f3n (i, j) , supone introducir un gap en la secuencia del eje horizontal j Teniendo en cuenta la f\u00f3rmula para obtener el score enunciada m\u00e1s arriba, podemos comenzar con nuestro ejercicio! Recordemos que la matriz se llenar\u00e1 iterativamente, comenzando por la celda del extremo superior izquierdo, que tiene un puntaje de 0. Para moverse del (0, 0) al (0, 1), hay una s\u00f3la opci\u00f3n, moverse en forma horizontal . Esto significa alinear T con un gap , lo cual da un score de 0 + (-2) = -2. eje j: T eje i: - Lo mismo pasa al moverse del (0, 0) al (1, 0), hay una s\u00f3la opci\u00f3n, moverse en forma vertical . Esto significa alinear T con un gap , lo cual tambi\u00e9n da un score de 0 + (-2) = -2. eje j: - eje i: T Para moverse del (0, 0) al (1, 1) hay 3 maneras: 1. Hacer un movimiento vertical , lo cual da un score de -2 + (-2) = -4 -2 es el puntaje de la celda inicial (0, 1) El movimiento vertical implica colocar un gap : -2 Resultado: eje j: T - eje i: - T 2. Hacer un movimiento horizontal , lo cual da un score de -2 + (-2) = -4. Similar al caso anterior: -2 es el puntaje de la celda inicial (1, 0) El movimiento horizontal implica colocar un gap : -2 Resultado: eje j: - T eje i: T - 3. Hacer un movimiento diagonal , lo cual da un score de 0 + (+1). Implica alinear ambos nucl\u00e9otidos! 0 es el puntaje de la celda inicial (0, 0) Hay T en las ambas secuencias. Es un match : +1 Resultado: eje j: T eje i: T Para decidir qu\u00e9 valor ubicamos en la celda simplemente optamos por el que nos d\u00e9 el mayor score , en este caso 1, y se marca el movimiento que lo produjo: un movimiento diagonal. De esta manera podemos seguir completando la matriz, Obsevando la \u00faltima celda computada, podemos ver que hay nuevamente 3 maneras de llegar a la misma, Hacer un movimiento vertical , de (1, 3) a (2, 3): Es decir, introducir un gap en la secuencia horizontal j. Si (1, 3) tiene un score de -3, el nuevo score es: -3 + gap penalty = -3 + (-2) = -5 (flecha en direcci\u00f3n vertical). Hacer un movimiento horizontal , de (2, 2) a (2, 3). Es decir, introducir un gap en la secuencia vertical i. Si (2, 2) tiene un score de 2, el nuevo score es: 2 + gap penalty = 2 + (-2) = 0 (flecha en direcci\u00f3n horizontal). Hacer un movimiento diagonal , de (1, 2) a (2, 3). Es decir, alinear los nucle\u00f3tidos G y C. Si (1, 2) tiene un score de -1, el nuevo score es: -1 + mismatch = -1 + (-1) = -2 (flecha en direcci\u00f3n diagonal). El m\u00e1ximo de los 3 scores calculados es: max(-5, 0, -2) = 0, que corresponde al puntaje del movimiento horizontal . Entonces colocamos 0 en la celda (2, 3) y una flecha horizontal que indique el movimiento de (2, 2) a (2, 3). Al completar todas las celdas de la matriz, podemos saber cu\u00e1l es el puntaje de la celda ubicada en extremo inferior derecho, que en este caso result\u00f3 ser +2. Este tambi\u00e9n es el puntaje final del alineamiento. Para reconstruir el mismo, se parte de la celda ubicada en extremo inferior derecho y se siguen las flechas hasta llegar a la celda de inicio, en el extremo superior izquierdo. Las flechas en rojo resaltan el path del alineamiento, eje j: T C G C A eje i: T C - C A que podemos corroborar que es id\u00e9ntico al path 1 del ejemplo que se plante\u00f3 inicialmente.","title":"Ejemplo"},{"location":"practicos/TP03_Alineamientos/#ejercicio-1","text":"1.1 En grupo, realiz\u00e1 el alineamiento de las secuencias ATTGG con AGATGG , usando el esquema de puntajes: M=1, m=-1, g=-2. Para esto, abr\u00ed el siguiente Google Jamboard , guard\u00e1 una copia local del mismo en tu Google Drive y compart\u00ed el GJamboard a tus compa\u00f1eros de equipo. Atenci\u00f3n Para guardar una copia local del GJamboard en tu GDrive, clique\u00e1 en el \u00edcono con 3 puntitos, en el extremo superior derecho (M\u00e1s acciones). Luego seleccion\u00e1 la opci\u00f3n \"Hacer una copia\". Eleg\u00ed la carpeta adonde deseas guardarlo dentro de tu unidad y clique\u00e1 aceptar. \u00a1Ahora est\u00e1s listo para empezar! Record\u00e1 rellenar la matriz con todos los puntajes y flechas faltantes. Cuando termines, reconstru\u00ed el path del alineamiento. 1.2 Cuando termines el ejercicio anterior pod\u00e9s corrobar la soluci\u00f3n que hallaste ingresando en UniFreiburg-FreiburgRNATools . Segu\u00ed las siguientes instrucciones para usar este recurso web: a. Ingres\u00e1 las dos secuencias que quer\u00e9s alinear en los recuadros de Input Sequence a y Sequence b . Record\u00e1 que la secuencia que figura en tu matriz en sentido horizontal debe ser ingresada como Sequence b y la que figura en sentido vertical debe ser ingresada como Sequence a . b. Seleccion\u00e1 optimizaci\u00f3n de Similarity. c. Complet\u00e1 los valores de tu esquema de scoring . En el output podr\u00e1s apreciar dos salidas: A la izquierda, los valores de la matriz de alineamiento. Si cliqueas sobre los valores de la matriz, vas a observar que el valor sobre el que te paraste se colorea en verde, mientras que las celdas que dieron origen a ese valor se colorean en rosa. A la derecha, se observa el alineamiento final, donde un match se esquematiza en con *, un mismatch con | y un gap con _. 1.3 Respond\u00e9 a las siguientes preguntas: 1.3.1 Reproduc\u00ed el alineamiento que vimos como ejemplo al inicio ( TCGCA con TCCA , esquema de puntajes: M=1, m=-1, g=-2) en la web de la UniFreiburg-FreiburgRNATools \u00bfCu\u00e1ntas soluciones \u00f3ptimas hay para este alineamiento? \u00bfSucede lo mismo para el alineamiento que realizaste en el Ejercicio 1.1 ? \u00bfPor qu\u00e9? 1.3.2 Observ\u00e1 con detenimiento el output del panel de la izquierda (la matriz) Seleccion\u00e1 una celda. \u00bfQu\u00e9 sucede cuando clique\u00e1s en una celda y se colorea en verde y la celda aleda\u00f1a a la misma en rosa ? \u00bfA qu\u00e9 corresponde este coloreado o resaltado de las celdas? Observ\u00e1 nuevamente la matriz del alineamiento que obtuviste en 1.2 . Cliqu\u00e9a en la celda con puntaje -2 en la posici\u00f3n (A3, T2). Observ\u00e1 que se colorea en verde y dos celdas aleda\u00f1as a la misma en rosa . \u00bfEntend\u00e9s qu\u00e9 significa esto? \u00bfPod\u00e9s relacionarlo con los dos caminos \u00f3ptimos posibles que existen para este alineamiento? 1.3.3 Finalmente te propongo que realices el siguiente alineamiento: Sequence a: AGATGG y Sequence b: ATTGGG . Seleccion\u00e1 optimizaci\u00f3n de Similarity. Esquema de puntajes: M:1, m:-1, g:-5 . Registr\u00e1 con atenci\u00f3n el resultado. Ahora cambiemos el esquema de scoring , dejando el mismo valor para match, pero intercambiando los puntajes de gap y mismatch. \u00bfC\u00f3mo cambi\u00f3 el output? \u00bfQu\u00e9 observ\u00e1s ahora en las secuencias halladas como soluci\u00f3n \u00f3ptima en comparaci\u00f3n a lo que arrojaba el algoritmo con los par\u00e1metros anteriores?","title":"Ejercicio 1"},{"location":"practicos/TP03_Alineamientos/#dot-plots","text":"Los dot-plots son representaciones gr\u00e1ficas que dan un pantallazo sobre la similitud entre dos secuencias. En ellos se pueden identificar patrones que aporten informaci\u00f3n sobre la relaci\u00f3n entre ambas secuencias. La forma de obtener uno es muy sencilla: se establece una matriz donde cada elemento de una de las secuencias se corresponde con una fila y los de la otra con una columna. Acto seguido se procede a colorear cada celda donde los caracteres correspondientes a fila y columna sean equivalentes. Por ejemplo: Nosotros podemos utilizar la herramienta de EMBOSS dotmatcher para generar nuestros propios plots. Recordatorio Para ver qu\u00e9 par\u00e1metros toma de entrada la funci\u00f3n, correr en la terminal dotmatcher -h .","title":"Dot-Plots"},{"location":"practicos/TP03_Alineamientos/#ejercicio-2","text":"!agregar un ejercicio simple para entender los patrones que arroja el DotMatcher 2.1 Utiliz\u00e1 la secuencia HS-ch11-fragment.fasta que se encuentra en la carpeta data para compararla contra s\u00ed misma. Esta secuencia es un peque\u00f1o fragmento del cromosoma 1 de Homo sapiens y la vamos a utilizar \u00fanicamente para ver algunos de los patrones que podemos encontrar en un dotplot. Gener\u00e1 un dotplot utilizando la secuencia HS-ch11-fragment.fasta contra s\u00ed misma. dotmatcher -graph X11 HS-ch1-fragment.fasta HS-ch1-fragment.fasta Atenci\u00f3n Recuerden abrir el archivo HS-ch11-fragment.fasta y chequear que la secuencia es de ADN. Es una buena pr\u00e1ctica conocer qu\u00e9 hay en los archivos que vamos a utilizar. \u00bfQu\u00e9 pod\u00e9s interpretar de este dotplot? La verdad es que el plot es bastante ruidoso, esto sucede muy a menudo en secuencias gen\u00f3micas ya que la cantidad de caracteres que componen las secuencias es muy limitada (solo 4) y por ello hay muchas ocurrencias y por lo tanto muchos puntos. Para limpiar el plot y quedarnos con los matches m\u00e1s significativos podemos jugar con dos par\u00e1metros: windowsize : Tama\u00f1o de ventana threshold : Umbral de ocurrencia Esto quiere decir que dotmatcher s\u00f3lo va a poner un punto cuando un fragmento del largo windowsize contenga un score mayor a threshold . Por ejemplo: dotmatcher -graph X11 -windowsize 50 -threshold 20 HS-ch1-fragment.fasta HS-ch1-fragment.fasta Si aument\u00e1s estos par\u00e1metros pod\u00e9s ir eliminando fragmentos que corresponden a secciones compartidas m\u00e1s cortas, sin embargo existe una relaci\u00f3n de compromiso, utilizar tama\u00f1o de ventana y umbral muy grandes nos llevan a perder informaci\u00f3n por lo que hay que seleccionarlos con cuidado. Aqui hay algunos patrones con los que te pod\u00e9s encontrar en este tipo de plots: a) Match perfecto. b) Repeticiones. c) Pal\u00edndromo. d) Repeticiones invertidas. e) Zonas de baja complejidad (microsatelites). f) Zonas altamente repetitivas (minisatelites). g) Secuencias con alta conservaci\u00f3n. h) Inserci\u00f3n o deleci\u00f3n. 2.2 Cambi\u00e1 los par\u00e1metros windowsize y threshold hasta obtener un plot que te parezca adecuado. \u00bfQu\u00e9 pod\u00e9s interpretar del mismo? Identific\u00e1 patrones.","title":"Ejercicio 2"},{"location":"practicos/TP03_Alineamientos/#similitud-y-homologia","text":"Los t\u00e9rminos similitud y homolog\u00eda se suelen utilizar como sin\u00f3nimos por muchos investigadores, sin embargo no lo son. La similitud es una caracter\u00edstica cuantitativa de un par de secuencias, donde se establece en qu\u00e9 grado estas se parecen (por ejemplo aplicando los algoritmos antes vistos, utilizando un sistema de puntaje). La homolog\u00eda , por otro lado, es una caracter\u00edstica cualitativa, dos secuencias SON o NO SON hom\u00f3logas. Homolog\u00eda implica espec\u00edficamente que el par de secuencias estudiadas provienen de un mismo ancestro com\u00fan. Esta afirmaci\u00f3n es completamente hipot\u00e9tica, ya que, salvo en contados casos, no se puede corroborar. Uno puede inferir que este es el caso dado la similitud observada en las secuencias actuales, sin tener acceso a las secuencias ancestrales. Atenci\u00f3n Decir que un par de secuencias tiene N% de homolog\u00eda es TOTALMENTE incorrecto. A partir de esta relaci\u00f3n entre similitud y homolog\u00eda se puede aplicar para inferir relaciones entre diferentes especies, buscar posibles funciones de una secuencia desconocida, etc.","title":"Similitud y Homolog\u00eda"},{"location":"practicos/TP03_Alineamientos/#ejercicio-3","text":"3.1 Determinar qu\u00e9 especies est\u00e1n m\u00e1s relacionadas utilizando la ribonucleasa pancre\u00e1tica de caballo ( Equus caballus ), ballena enana ( Balaenoptera acutorostrata ) y canguro rojo ( Macropus rufus ). 3.1.1 Descarg\u00e1 las secuencias antes mencionadas de la carpeta del TP. 3.1.2 Utiliz\u00e1 la herramienta de alineamiento global de EMBOSS needle (pueden leer el manual para ver que opciones admite) para comparar las tres secuencias. needle -gapopen 10 -gapextend 1 -asequence *secuencia_1* -bsequence *secuencia_2* -outfile *salida* 3.1.3 Observ\u00e1 e interpret\u00e1 las salidas obtenidas. \u00bfQu\u00e9 secuencias son m\u00e1s similares? \u00bfTiene sentido el resultado obtenido? 3.1.4 Analiz\u00e1 \u00e1rbol filogen\u00e9tico de la Fig. 1 del paper de O'Leary et al. , 2013. Sabiendo que los caballos y las ballenas pertenecen al clado Euungulata y los canguros al clado Marsupialia , ubic\u00e1 estos clado en el \u00e1rbol. \u00bfEsta informaci\u00f3n coincide con los resultados que obtuviste en 3.1.3 ? 3.2 Realiz\u00e1 el mismo procedimiento pero esta vez para determinar si los mamuts ( Mammuthus primigenius ) son m\u00e1s cercanos a los elefantes africanos ( Loxodonta africana ) o asi\u00e1ticos ( Elephas maximus ) utilizando la secuencia de la cadena alfa de la hemoglobina. 3.2.1 \u00bfQu\u00e9 te sugieren los resultados obtenidos? 3.2.2 \u00bfEs relevante la diferencia hallada? 3.2.3 \u00bfC\u00f3mo har\u00edas para sacar conclusiones m\u00e1s fuertes sobre las relaciones filogen\u00e9ticas entre los organismos estudiados en los ejercicios 3.1 y 3.2?","title":"Ejercicio 3"},{"location":"practicos/TP03_Alineamientos/#alineamientos-multiples","text":"Un alineamiento m\u00faltiple (MSA) involucra tres o m\u00e1s secuencias biol\u00f3gicas. Debido a que la tarea de alinear m\u00faltiples secuencias de largos biol\u00f3gicamente significativos suele ser muy demandante en t\u00e9rminos de recursos computacionales y tiempos de ejecuci\u00f3n estos requieren metodolog\u00edas m\u00e1s sofisticadas para llevarse a cabo. Por ello la mayor\u00eda de los programas disponibles para realizar MSA utiliza heur\u00edsticas en vez de algoritmos de optimizaci\u00f3n global. Heur\u00edstica Es una estrategia que busca resolver un problema m\u00e1s simple cuya soluci\u00f3n se interseca con la soluci\u00f3n de un problema m\u00e1s complejo. Generalmente esto implica que no es seguro encontrar el mejor resultado pero s\u00ed una soluci\u00f3n que sea aceptable. Las heur\u00edsticas se aplican con frecuencia en computaci\u00f3n para poder resolver problemas que, por su complejidad, ser\u00edan imposibles de abordar dados los limitados recursos con los que se cuentan. Dadas las secuencias de amino\u00e1cidos de un set de prote\u00ednas que se quieren comparar, el MSA muestra los residuos de cada prote\u00edna en una fila junto con los gaps que le correspondan de tal manera que todos los residuos \"equivalentes\" se encuentren en la misma columna. La utilidad de esta equivalencia depende de quien mire el alineamiento: Alguien que hace una filogenia puede enfocarse en que comparten un ancestro com\u00fan; Alguien que hace biolog\u00eda estructural puede enfocarse en que son residuos en posiciones an\u00e1logas de una estructura proteica; Alguien que hace biolog\u00eda molecular puede enfocarse en el rol funcional de esos residuos en la prote\u00edna. En cada caso un MSA provee un pantallazo sobre las restricciones evolutivas, estructurales o funcionales que caracterizan un set de prote\u00ednas de una manera visual e intuitiva. Un pipeline t\u00edpico para realizar un MSA ser\u00eda: Formular la pregunta que se quiere contestar. Por ejemplo, \"\u00bfQu\u00e9 estructura secundaria adopta X regi\u00f3n de mi prote\u00edna de inter\u00e9s?\" Obtener secuencias que puedan contestar a mi pregunta. Por ejemplo, secuencias que est\u00e9n relacionadas a mi prote\u00edna de inter\u00e9s. Utilizar alguno de los programas disponibles para llevar a cabo el MSA. Por ej. EMBOSS Realizar ajustes manuales para corregir posibles errores de los algoritmos de alineamiento.","title":"Alineamientos m\u00faltiples"},{"location":"practicos/TP03_Alineamientos/#ejercicio-4-adicional","text":"Atenci\u00f3n Antes de comenzar a resolver los ejercicios, instal\u00e1 ClustalW en tu VM, escribiendo el siguiente comando en la terminal: sudo apt install clustalw La gp120 es una prote\u00edna que recubre al virus del HIV y facilita su uni\u00f3n e ingreso a la c\u00e9lula que infecta (linfocitos CD4+) Entre nuestros archivos contamos con un multifasta (gp120.fasta) que contiene 27 secuencias de gp120 de HIV-1, HIV-2 y SIV. Estas prote\u00ednas contienen 9 puentes disulfuro conservados. Tambi\u00e9n es de inter\u00e9s el loop V3, una porci\u00f3n expuesta de la prote\u00edna, conocido target de anticuerpos el cual constituye una regi\u00f3n hipervariable dada la presi\u00f3n selectiva a la que se ve sometido. Pueden ver la disposici\u00f3n de las distintas regiones de la gp120 en el siguiente esquema: Mathys L, Balzarini J. Several N-Glycans on the HIV Envelope Glycoprotein gp120 Preferentially Locate Near Disulphide Bridges and Are Required for Efficient Infectivity and Virus Transmission. PLoS One. 2015 Jun 29;10(6):e0130621. doi: 10.1371/journal.pone.0130621. PMID: 26121645; PMCID: PMC4488071. Figure 1. 4.1 Utiliz\u00e1 las herramientas de EMBOSS para realizar un alineamiento m\u00faltiple con las secuencias de gp120 (recuerden que para buscar herramientas pueden usar wossname ) Pista El comando a utilizar es emma . Para ver la ayuda, tipe\u00e1 emma -help en la terminal. 4.2 Utiliz\u00e1 el comando showalign de EMBOSS para obtener una mejor visualizaci\u00f3n del alineamiento. Otra alternativa Para visualizar el alineamiento correctamente le sugerimos usar el comando cat en la consola. Si desea ver el archivo con Leafpad recuerde ingresar a Opciones > Tipograf\u00eda y seleccionar Ubuntu Mono. 4.3 Observ\u00e1 el alineamiento, como primer control podemos corroborar que las 18 Ciste\u00ednas ( C ) est\u00e9n bien alineadas. 4.4 Utiliz\u00e1 el esquema de gp120 para identificar diversas regiones ya sea conservadas o muy variables (Estructuras, loops, etc.) Tip Not\u00e1 que las posiciones en el alineamiento cuentan gaps por lo que no se corresponden exactamente con el esquema. Utiliz\u00e1 las posiciones de las ciste\u00ednas conservadas para identificar diferentes regiones.","title":"Ejercicio 4 (Adicional)"},{"location":"practicos/TP03_Alineamientos/#ejercicio-a-informar","text":"Info Fecha de Entrega: Viernes, X de septiembre 2021, 23:59hs. Materiales","title":"Ejercicio a informar"},{"location":"practicos/TP03_Alineamientos/#enunciado","text":"Usted trabaja en un laboratorio que estudia distintos aspectos del coronavirus. Desde el comienzo de la pandemia trabaja en colaboraci\u00f3n con la agencia de vigilancia epidemiol\u00f3gica nacional de agentes infecciosos (AVENAI). Como parte de la colaboraci\u00f3n, todos los d\u00edas se obtienen clones y secuencias de nuevos aislamientos. AVENAI comparte con su jefe un nuevo aislamiento. Su jefe lo pone a cargo de analizar dicho aislamiento para extraer toda la informaci\u00f3n bioinform\u00e1tica posible de su colecci\u00f3n de datos.","title":"Enunciado"},{"location":"practicos/TP03_Alineamientos/#breve-descripcion-de-la-familia-coronaviridae","text":"Los coronavirus son virus envueltos ARN simple cadena positivos (es decir que su genoma puede ser traducido directamente a prote\u00ednas virales por los ribosomas del hospedador). En la envoltura viral se encuentra la prote\u00edna E y la prote\u00edna Spike. En el interior, se encuentra el genoma ARN asociado con la prote\u00edna N formando la nucleoc\u00e1pside. La subfamilia Coronavirinae est\u00e1 formada por cuatro g\u00e9neros: Alphacoronavirus , Betacoronavirus , Gammacoronavirus y Deltacoronavirus . Cada g\u00e9nero agrupa distintas especies. Cada especie agrupa distintos tipos virales y cada tipo viral posee distintas variantes (algunos eligen llamarlas cepas o aislamientos, pero ac\u00e1 las llamamos variantes). En particular, SARS-CoV2 tambi\u00e9n conocido como COVID-19, se encuentra dentro del g\u00e9nero Betacoronavirus .","title":"Breve descripci\u00f3n de la Familia Coronaviridae"},{"location":"practicos/TP03_Alineamientos/#ahora-si","text":"Usted cuenta con un conjunto de secuencias que utiliza normalmente en su laboratorio que guarda en el archivo All_Sequences.fasta , el record en All_Sequences.gb y datos de inter\u00e9s propio en conjunto_de_secuencias.xlsx . Pero\u2026 Cuando usted recibe los datos ( sequence_incognito.fasta ) se da cuenta que se olvidaron de nombrar correctamente un archivo! AVENAI trabaja con tantas secuencias que de vez en cuando se producen errores comunes como este. Para solucionarlo decide utilizar las herramientas que aprendi\u00f3 en el trabajo pr\u00e1ctico N3 de bioinform\u00e1tica cuando era estudiante y decide: Comparar la secuencia del nuevo aislamiento con la que crea m\u00e1s conveniente de su conjunto de secuencias. \u00bfPertenece el nuevo aislamiento a un coronavirus? Para responder a esta pregunta le sugerimos que realice un dotplot que le permita visualizar el alineamiento entre su secuencia inc\u00f3gnita y la(s) secuencias de su inter\u00e9s. Identifique y reporte qu\u00e9 patrones observa en el dotplot. Ahora quisiera saber a qu\u00e9 coronavirus se parece m\u00e1s, para esto decide determinar el % de similitud que posee su secuencia con el conjunto de secuencias con las que usted trabaja com\u00fanmente. Tip Si necesitan dividir el archivo All_Sequences.fasta en archivos individuales pueden buscar wossname split . Extra! (y por ende opcional) Para resolver el punto 2 ustedes pueden hacer un script de bash usando entre otras cosas un ciclo for . Si lo logran (o si lo intentan), los invito a incluirlo en el trabajo pr\u00e1ctico (a\u00fan cuando no les sali\u00f3).","title":"Ahora si ..."},{"location":"teoricas/inicio/","tags":["teoricas"],"text":"Hola! Esta es la p\u00e1gina de inicio de la parte Te\u00f3rica del curso. Consultas y canales de comunicaci\u00f3n Por email a la direcci\u00f3n del profesor titular o profesores invitados. en Slack pueden mandar mensajes con consultas en distintos canales en el canal de YouTube estar\u00e1n subidos los videos de las clases te\u00f3ricas","title":"Inicio"},{"location":"teoricas/inicio/#hola","text":"Esta es la p\u00e1gina de inicio de la parte Te\u00f3rica del curso.","title":"Hola! "},{"location":"teoricas/inicio/#consultas-y-canales-de-comunicacion","text":"Por email a la direcci\u00f3n del profesor titular o profesores invitados. en Slack pueden mandar mensajes con consultas en distintos canales en el canal de YouTube estar\u00e1n subidos los videos de las clases te\u00f3ricas","title":"Consultas y canales de comunicaci\u00f3n"},{"location":"teoricas/resumen/","text":"","title":"Resumen"},{"location":"teoricas/1-Teorica-Uno/","tags":["teoricas"],"text":"Presentaci\u00f3n de la materia Docentes, modo de cursada, cronograma, evaluaciones, etc. Slides Conceptos elementales de computaci\u00f3n y algoritmos Slides Experimentos en bioinform\u00e1tica Slides Videos de la clase grabada Presentacion de la Materia Conceptos de Computaci\u00f3n Experimentos en Bioinform\u00e1tica Material de lectura y consulta Introduction to Algorithms (2009). Cormen, Leiserson, Rivest, Stein. 3rd Edition, MIT Press. Blischak JD, Davenport ER, Wilson G (2016) A Quick Introduction to Version Control with Git and GitHub. PLOS Computational Biology 12(1): e1004668. Introduction to Bioinformatics (2019), 4th Edition. Oxford University Press. Arthur M Lesk (hay dos copias en el lab).","title":"Te\u00f3rica 1"},{"location":"teoricas/1-Teorica-Uno/#presentacion-de-la-materia","text":"Docentes, modo de cursada, cronograma, evaluaciones, etc. Slides","title":"Presentaci\u00f3n de la materia"},{"location":"teoricas/1-Teorica-Uno/#conceptos-elementales-de-computacion-y-algoritmos","text":"Slides","title":"Conceptos elementales de computaci\u00f3n y algoritmos"},{"location":"teoricas/1-Teorica-Uno/#experimentos-en-bioinformatica","text":"Slides","title":"Experimentos en bioinform\u00e1tica"},{"location":"teoricas/1-Teorica-Uno/#videos-de-la-clase-grabada","text":"Presentacion de la Materia Conceptos de Computaci\u00f3n Experimentos en Bioinform\u00e1tica","title":"Videos de la clase grabada"},{"location":"teoricas/1-Teorica-Uno/#material-de-lectura-y-consulta","text":"Introduction to Algorithms (2009). Cormen, Leiserson, Rivest, Stein. 3rd Edition, MIT Press. Blischak JD, Davenport ER, Wilson G (2016) A Quick Introduction to Version Control with Git and GitHub. PLOS Computational Biology 12(1): e1004668. Introduction to Bioinformatics (2019), 4th Edition. Oxford University Press. Arthur M Lesk (hay dos copias en el lab).","title":"Material de lectura y consulta"},{"location":"teoricas/2-Teorica-Dos/","tags":["teoricas"],"text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer sit amet fermentum justo, at rhoncus tellus. Aliquam nec magna ullamcorper, congue libero at, ultrices turpis. Vestibulum imperdiet sapien arcu, vitae faucibus nunc congue ut. Etiam non vulputate dui. Integer nec hendrerit libero. In bibendum lorem lectus, id volutpat diam imperdiet vel. Curabitur eu dictum sapien. Etiam lacinia lacinia commodo. Aliquam erat volutpat. Duis massa odio, vulputate in lorem id, fringilla tincidunt nunc. Quisque risus mauris, fringilla eget euismod quis, dictum id dui. Cras at lectus tempus, dapibus arcu sit amet, gravida diam. Video Material de lectura y consulta Uno Dos Tres","title":"Teorica Dos"},{"location":"teoricas/2-Teorica-Dos/#video","text":"","title":"Video "},{"location":"teoricas/2-Teorica-Dos/#material-de-lectura-y-consulta","text":"Uno Dos Tres","title":"Material de lectura y consulta"},{"location":"teoricas/3-Teorica-Tres/","tags":["teoricas"],"text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer sit amet fermentum justo, at rhoncus tellus. Aliquam nec magna ullamcorper, congue libero at, ultrices turpis. Vestibulum imperdiet sapien arcu, vitae faucibus nunc congue ut. Etiam non vulputate dui. Integer nec hendrerit libero. In bibendum lorem lectus, id volutpat diam imperdiet vel. Curabitur eu dictum sapien. Etiam lacinia lacinia commodo. Aliquam erat volutpat. Duis massa odio, vulputate in lorem id, fringilla tincidunt nunc. Quisque risus mauris, fringilla eget euismod quis, dictum id dui. Cras at lectus tempus, dapibus arcu sit amet, gravida diam. Video Material de lectura y consulta Uno Dos Tres","title":"Teorica Tres"},{"location":"teoricas/3-Teorica-Tres/#video","text":"","title":"Video "},{"location":"teoricas/3-Teorica-Tres/#material-de-lectura-y-consulta","text":"Uno Dos Tres","title":"Material de lectura y consulta"}]}